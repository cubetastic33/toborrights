{"mappings":"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","sources":["scripts/order.ts"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\nimport $ from \"cash-dom\";\n\n// Create a single supabase client for interacting with your database\nconst supabase = createClient(\"https://gwcnruxqmtukvguyhuga.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imd3Y25ydXhxbXR1a3ZndXlodWdhIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NDk5MjI5MTIsImV4cCI6MTk2NTQ5ODkxMn0.Cpm-Myt5YdzFrRzYcWWaFxVDiyQWeJCD3dTZBvRlcp4\");\n\nconst $toast = $(\"#toast\");\nconst $status = $(\"#status\");\nconst $signed_out = $(\"#signed-out\");\nconst $restaurants = $(\"#restaurants\");\nconst $order_details = $(\"#order-details\");\nconst $sign_in = $(\"#sign-in\");\nconst $my_orders = $(\"#my-orders\");\nconst $order_list = $(\"#order-list\");\n\nfunction show_toast(message: string, duration: number = 2000) {\n    $toast.text(message).show();\n    // After duration, slide the toast out of view\n    setTimeout(() => $toast.addClass(\"slide-down\"), duration);\n    setTimeout(() => $toast.removeClass(\"slide-down\").hide(), duration + 500);\n}\n\nfunction update_dom() {\n    let user = supabase.auth.user();\n    if (user === null) {\n        // If the user is signed out\n        $status.hide();\n        $signed_out.show();\n        $order_details.hide();\n        $my_orders.hide();\n        $restaurants.show().removeClass(\"fade\");\n    } else {\n        // If the user is signed in\n        $signed_out.hide();\n        $(\".netid\").text(user.email.slice(0, -13).toUpperCase());\n        $status.show();\n        insert_orders();\n    }\n}\n\n// Run once initially\nupdate_dom();\n// Run whenever auth state changes\nsupabase.auth.onAuthStateChange(update_dom);\n\nfunction insert_orders() {\n    supabase\n        .from(\"orders\")\n        .select(\"id, time_slot, restaurants (name), delivery_location, description, fulfilled, notes, cost\")\n        .filter(\"cancelled\", \"eq\", \"false\")\n        .order(\"created_at\", { ascending: false })\n        .then(result => {\n            if (result.error) {\n                show_toast(result.error.message, 5000);\n            }\n            if (result.data.length === 0) {\n                $my_orders.hide();\n                return;\n            } else $my_orders.show();\n            $order_list.empty();\n            for (let i = 0; i < result.data.length; i++) {\n                let new_order = $(`<div class=\"order\">\n                    <b>Timeslot:</b> ${result.data[i][\"time_slot\"]}<br>\n                    <b>Restaurant:</b> ${result.data[i][\"restaurants\"][\"name\"]}<br>\n                    <div class=\"desc\"><b>Description:</b> ${result.data[i][\"description\"]}</div><br>\n                    <b>Delivery Location:</b> ${result.data[i][\"delivery_location\"]}<br>\n                    <b>Donation:</b> ${result.data[i][\"cost\"]}\n                </div>`);\n                if (result.data[i][\"notes\"])\n                    new_order.append(`<b>Phone:</b> ${result.data[i][\"notes\"]}`);\n                if (result.data[i][\"fulfilled\"])\n                    new_order.append(`<span class=\"top-right\">Fulfilled</span>`);\n                else\n                    new_order.append(`<span class=\"top-right\">\n                        <button class=\"text cancel\" data-id=\"${result.data[i][\"id\"]}\">cancel</button>\n                    </span>`);\n                $order_list.append(new_order);\n            }\n            $(\".cancel\").off().on(\"click\", function() {\n                supabase\n                    .from(\"orders\")\n                    .update({ cancelled: true })\n                    .match({ id: $(this).data(\"id\") })\n                    .then(result => {\n                        if (result.error) show_toast(result.error.message);\n                        else show_toast(\"Cancelled order\");\n                    });\n            });\n        }, error => show_toast(error, 5000));\n}\n\nsupabase\n    .from(\"orders\")\n    .on(\"*\", payload => {\n        console.log('Change received!', payload);\n        insert_orders();\n    })\n    .subscribe();\n\n$(\"#sign-out\").on(\"click\", () => supabase.auth.signOut()\n    .then(_response => {\n        show_toast(\"Signed out successfully\");\n    })\n    .catch(err => show_toast(err.response.text)));\n\n// Dynamically populate the list of restaurants from the database\nsupabase\n    .from(\"restaurants\")\n    .select()\n    .then(result => {\n        if (result.error) {\n            show_toast(result.error.message, 5000);\n        } else if (result.data.length === 0) {\n            show_toast(\"No restaurants were found\", 5000);\n        } else {\n            for (let i = 0; i < result.data.length; i++) {\n                const { error, publicURL } = supabase.storage.from(\"restaurant-images\").getPublicUrl(result.data[i][\"image\"]);\n                if (error) {\n                    show_toast(error.message, 5000);\n                    return;\n                }\n                let id = result.data[i][\"id\"];\n                let name = result.data[i][\"name\"];\n                let menu = result.data[i][\"menu\"];\n                $restaurants.append(`<div class=\"restaurant\"\n                    data-id=\"${id}\" data-name=\"${name}\" data-menu=\"${menu}\"\n                    style=\"background-image: url('${publicURL}')\">\n                        <h1>${name}</h1>\n                    </div>`);\n            }\n            // Add event handlers for all the restaurant buttons\n            $(\".restaurant\").on(\"click\", function() {\n                // Analytics\n                let name = $(this).data(\"name\");\n                // @ts-ignore\n                if (typeof pa !== \"undefined\") pa.track({name});\n                // Replace the list of restaurants with something else, so hide it\n                // Fade-out animation\n                $restaurants.addClass(\"fade\");\n                setTimeout(() => {\n                    $restaurants.hide();\n                    if (supabase.auth.user()) {\n                        // If the user is signed in, proceed with the order\n                        $order_details.data(\"id\", $(this).data(\"id\")).show();\n                        if ($(this).data(\"menu\")) {\n                            $(\"#order-details .menu a\").attr(\"href\", $(this).data(\"menu\"));\n                            $(\"#order-details .menu span\").css(\"display\", \"inline\");\n                        } else {\n                            $(\"#order-details .menu span\").hide();\n                        }\n                        $(\"#order-details .name\").text(name);\n                    } else {\n                        // If they're not signed in, make them sign in first\n                        $sign_in.show();\n                    }\n                }, 100);\n            });\n        }\n    }, error => show_toast(error, 5000));\n\n$sign_in.on(\"submit\", e => {\n    e.preventDefault();\n    // Sign the user in\n    const email: string = $(\"#netid\").val() + \"@utdallas.edu\";\n    supabase.auth.signIn({ email })\n        .then(response => {\n            if (response.error) {\n                show_toast(response.error.message, 5000);\n            } else {\n                $(\"body\").html(`<div id=\"check-email\">Check ${email} for a magic link to login</div>`);\n            }\n        })\n        .catch(err => show_toast(err.response.text));\n});\n\n$(\".back\").on(\"click\", () => {\n    $sign_in.hide();\n    $order_details.hide();\n    $restaurants.show().removeClass(\"fade\");\n});\n\n$order_details.on(\"submit\", e => {\n    e.preventDefault();\n    // Make the order by adding it to the database\n    const phone = $(\"#phone\").val();\n    const identifier = $(\"#identifier\").val();\n    supabase\n        .from(\"orders\")\n        .insert({\n            time_slot: $(\"#time-slot\").val(),\n            customer: supabase.auth.user().id,\n            restaurant: $order_details.data(\"id\"),\n            delivery_location: $(\"#location\").val(),\n            description: $(\"#description\").val(),\n            identifier: identifier.length ? identifier : null,\n            notes: phone.length ? phone : null,\n            cost: $(\"#donation\").val(),\n        })\n        .then((result) => {\n            if (result.error) {\n                show_toast(result.error.message, 5000);\n            } else {\n                show_toast(\"Order placed successfully!\");\n                // Reset forms and show restaurant list\n                $(\"form\").trigger(\"reset\");\n                $order_details.hide();\n                $restaurants.show().removeClass(\"fade\");\n            }\n        }, error => show_toast(error, 5000));\n});\n"],"names":["$buE07","parcelRequire","$411765a1cea35d6f$var$supabase","createClient","$411765a1cea35d6f$var$$toast","$parcel$interopDefault","$acYek","$411765a1cea35d6f$var$$status","$411765a1cea35d6f$var$$signed_out","$411765a1cea35d6f$var$$restaurants","$411765a1cea35d6f$var$$order_details","$411765a1cea35d6f$var$$sign_in","$411765a1cea35d6f$var$$my_orders","$411765a1cea35d6f$var$$order_list","$411765a1cea35d6f$var$show_toast","message","duration","arguments","length","text","show","setTimeout","addClass","removeClass","hide","$411765a1cea35d6f$var$update_dom","user","auth","email","slice","toUpperCase","$411765a1cea35d6f$var$insert_orders","from","select","filter","order","ascending","then","result1","error","data","empty","i","new_order","concat","append","off","on","update","cancelled","match","id","this","result","onAuthStateChange","payload","console","log","subscribe","signOut","_response","catch","err","response","ref","storage","getPublicUrl","publicURL","name","menu","pa","track","_this","attr","css","e","preventDefault","val","signIn","html","phone","identifier","insert","time_slot","customer","restaurant","delivery_location","description","notes","cost","trigger"],"version":3,"file":"index.fb9f173e.js.map"}