{"mappings":"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","sources":["node_modules/cross-fetch/dist/browser-ponyfill.js","node_modules/es5-ext/global.js","node_modules/websocket/package.json","node_modules/@supabase/supabase-js/src/lib/version.ts","node_modules/@supabase/supabase-js/src/lib/constants.ts","node_modules/@supabase/gotrue-js/src/lib/fetch.ts","node_modules/@supabase/gotrue-js/src/lib/version.ts","node_modules/@supabase/gotrue-js/src/lib/constants.ts","node_modules/@supabase/gotrue-js/src/lib/cookies.ts","node_modules/@supabase/gotrue-js/src/lib/helpers.ts","node_modules/@supabase/gotrue-js/src/GoTrueApi.ts","node_modules/@supabase/gotrue-js/src/lib/polyfills.ts","node_modules/@supabase/gotrue-js/src/GoTrueClient.ts","node_modules/@supabase/supabase-js/src/lib/SupabaseAuthClient.ts","node_modules/@supabase/postgrest-js/src/lib/types.ts","node_modules/@supabase/postgrest-js/src/lib/PostgrestTransformBuilder.ts","node_modules/@supabase/postgrest-js/src/lib/PostgrestFilterBuilder.ts","node_modules/@supabase/postgrest-js/src/lib/PostgrestQueryBuilder.ts","node_modules/@supabase/postgrest-js/src/lib/PostgrestRpcBuilder.ts","node_modules/@supabase/postgrest-js/src/lib/version.ts","node_modules/@supabase/postgrest-js/src/lib/constants.ts","node_modules/@supabase/postgrest-js/src/PostgrestClient.ts","node_modules/@supabase/realtime-js/src/lib/transformers.ts","node_modules/websocket/lib/browser.js","node_modules/websocket/lib/version.js","node_modules/@supabase/realtime-js/src/lib/version.ts","node_modules/@supabase/realtime-js/src/lib/constants.ts","node_modules/@supabase/realtime-js/src/lib/timer.ts","node_modules/@supabase/realtime-js/src/lib/serializer.ts","node_modules/@supabase/realtime-js/src/lib/push.ts","node_modules/@supabase/realtime-js/src/RealtimeSubscription.ts","node_modules/@supabase/realtime-js/src/RealtimePresence.ts","node_modules/@supabase/realtime-js/src/RealtimeChannel.ts","node_modules/@supabase/realtime-js/src/RealtimeClient.ts","node_modules/@supabase/supabase-js/src/lib/SupabaseRealtimeClient.ts","node_modules/@supabase/supabase-js/src/lib/SupabaseQueryBuilder.ts","node_modules/@supabase/storage-js/src/lib/version.ts","node_modules/@supabase/storage-js/src/lib/constants.ts","node_modules/@supabase/storage-js/src/lib/fetch.ts","node_modules/@supabase/storage-js/src/lib/helpers.ts","node_modules/@supabase/storage-js/src/lib/StorageBucketApi.ts","node_modules/@supabase/storage-js/src/lib/StorageFileApi.ts","node_modules/@supabase/storage-js/src/StorageClient.ts","node_modules/@supabase/functions-js/src/helper.ts","node_modules/@supabase/functions-js/src/index.ts","node_modules/@supabase/supabase-js/src/SupabaseClient.ts","node_modules/@supabase/supabase-js/src/lib/helpers.ts","node_modules/cash-dom/dist/cash.js","scripts/order.ts","node_modules/@supabase/supabase-js/src/index.ts"],"sourcesContent":["var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","{\n  \"name\": \"websocket\",\n  \"description\": \"Websocket Client & Server Library implementing the WebSocket protocol as specified in RFC 6455.\",\n  \"keywords\": [\n    \"websocket\",\n    \"websockets\",\n    \"socket\",\n    \"networking\",\n    \"comet\",\n    \"push\",\n    \"RFC-6455\",\n    \"realtime\",\n    \"server\",\n    \"client\"\n  ],\n  \"author\": \"Brian McKelvey <theturtle32@gmail.com> (https://github.com/theturtle32)\",\n  \"contributors\": [\n    \"Iñaki Baz Castillo <ibc@aliax.net> (http://dev.sipdoc.net)\"\n  ],\n  \"version\": \"1.0.34\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/theturtle32/WebSocket-Node.git\"\n  },\n  \"homepage\": \"https://github.com/theturtle32/WebSocket-Node\",\n  \"engines\": {\n    \"node\": \">=4.0.0\"\n  },\n  \"dependencies\": {\n    \"bufferutil\": \"^4.0.1\",\n    \"debug\": \"^2.2.0\",\n    \"es5-ext\": \"^0.10.50\",\n    \"typedarray-to-buffer\": \"^3.1.5\",\n    \"utf-8-validate\": \"^5.0.2\",\n    \"yaeti\": \"^0.0.6\"\n  },\n  \"devDependencies\": {\n    \"buffer-equal\": \"^1.0.0\",\n    \"gulp\": \"^4.0.2\",\n    \"gulp-jshint\": \"^2.0.4\",\n    \"jshint-stylish\": \"^2.2.1\",\n    \"jshint\": \"^2.0.0\",\n    \"tape\": \"^4.9.1\"\n  },\n  \"config\": {\n    \"verbose\": false\n  },\n  \"scripts\": {\n    \"test\": \"tape test/unit/*.js\",\n    \"gulp\": \"gulp\"\n  },\n  \"main\": \"index\",\n  \"directories\": {\n    \"lib\": \"./lib\"\n  },\n  \"browser\": \"lib/browser.js\",\n  \"license\": \"Apache-2.0\"\n}\n","export const version = '1.33.3'\n","// constants.ts\nimport { version } from './version'\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `supabase-js/${version}` }\nexport const STORAGE_KEY = 'supabase.auth.token'\n","export type Fetch = typeof fetch\n\nexport interface FetchOptions {\n  headers?: {\n    [key: string]: string\n  }\n  noResolveJson?: boolean\n}\n\nexport type RequestMethodType = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'\n\nconst _getErrorMessage = (err: any): string =>\n  err.msg || err.message || err.error_description || err.error || JSON.stringify(err)\n\nconst handleError = (error: any, reject: any) => {\n  if (typeof error.json !== 'function') {\n    return reject(error)\n  }\n  error.json().then((err: any) => {\n    return reject({\n      message: _getErrorMessage(err),\n      status: error?.status || 500,\n    })\n  })\n}\n\nconst _getRequestParams = (method: RequestMethodType, options?: FetchOptions, body?: object) => {\n  const params: { [k: string]: any } = { method, headers: options?.headers || {} }\n\n  if (method === 'GET') {\n    return params\n  }\n\n  params.headers = { 'Content-Type': 'text/plain;charset=UTF-8', ...options?.headers }\n  params.body = JSON.stringify(body)\n\n  return params\n}\n\nasync function _handleRequest(\n  fetcher: Fetch,\n  method: RequestMethodType,\n  url: string,\n  options?: FetchOptions,\n  body?: object\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    fetcher(url, _getRequestParams(method, options, body))\n      .then((result) => {\n        if (!result.ok) throw result\n        if (options?.noResolveJson) return resolve\n        return result.json()\n      })\n      .then((data) => resolve(data))\n      .catch((error) => handleError(error, reject))\n  })\n}\n\nexport async function get(fetcher: Fetch, url: string, options?: FetchOptions): Promise<any> {\n  return _handleRequest(fetcher, 'GET', url, options)\n}\n\nexport async function post(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions\n): Promise<any> {\n  return _handleRequest(fetcher, 'POST', url, options, body)\n}\n\nexport async function put(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions\n): Promise<any> {\n  return _handleRequest(fetcher, 'PUT', url, options, body)\n}\n\nexport async function remove(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions\n): Promise<any> {\n  return _handleRequest(fetcher, 'DELETE', url, options, body)\n}\n","// generated by genversion\nexport const version = '1.22.12'\n","import { version } from './version'\nexport const GOTRUE_URL = 'http://localhost:9999'\nexport const AUDIENCE = ''\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${version}` }\nexport const EXPIRY_MARGIN = 60 * 1000\nexport const STORAGE_KEY = 'supabase.auth.token'\nexport const COOKIE_OPTIONS = {\n  name: 'sb',\n  lifetime: 60 * 60 * 8,\n  domain: '',\n  path: '/',\n  sameSite: 'lax',\n}\n","type Cookie = {\n  name: string\n  value: string\n  maxAge: number\n  domain?: string\n  path?: string\n  sameSite?: string\n}\n\n/**\n * Serialize data into a cookie header.\n */\nfunction serialize(\n  name: string,\n  val: string,\n  options: {\n    maxAge: number\n    domain: string\n    path: string\n    expires: Date\n    httpOnly: boolean\n    secure: boolean\n    sameSite: string\n  }\n) {\n  const opt = options || {}\n  const enc = encodeURIComponent\n  /* eslint-disable-next-line no-control-regex */\n  const fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid')\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid')\n  }\n\n  const value = enc(val)\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid')\n  }\n\n  let str = name + '=' + value\n\n  if (null != opt.maxAge) {\n    const maxAge = opt.maxAge - 0\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge)\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid')\n    }\n\n    str += '; Domain=' + opt.domain\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid')\n    }\n\n    str += '; Path=' + opt.path\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid')\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly'\n  }\n\n  if (opt.secure) {\n    str += '; Secure'\n  }\n\n  if (opt.sameSite) {\n    const sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite\n\n    switch (sameSite) {\n      case 'lax':\n        str += '; SameSite=Lax'\n        break\n      case 'strict':\n        str += '; SameSite=Strict'\n        break\n      case 'none':\n        str += '; SameSite=None'\n        break\n      default:\n        throw new TypeError('option sameSite is invalid')\n    }\n  }\n\n  return str\n}\n\n/**\n * Based on the environment and the request we know if a secure cookie can be set.\n */\nfunction isSecureEnvironment(req: any) {\n  if (!req || !req.headers || !req.headers.host) {\n    throw new Error('The \"host\" request header is not available')\n  }\n\n  const host =\n    (req.headers.host.indexOf(':') > -1 && req.headers.host.split(':')[0]) || req.headers.host\n  if (['localhost', '127.0.0.1'].indexOf(host) > -1 || host.endsWith('.local')) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Serialize a cookie to a string.\n */\nfunction serializeCookie(cookie: Cookie, secure: boolean) {\n  return serialize(cookie.name, cookie.value, {\n    maxAge: cookie.maxAge,\n    expires: new Date(Date.now() + cookie.maxAge * 1000),\n    httpOnly: true,\n    secure,\n    path: cookie.path ?? '/',\n    domain: cookie.domain ?? '',\n    sameSite: cookie.sameSite ?? 'lax',\n  })\n}\n\n/**\n * Get Cookie Header strings.\n */\nexport function getCookieString(req: any, res: any, cookies: Array<Cookie>): string[] {\n  const strCookies = cookies.map((c) => serializeCookie(c, isSecureEnvironment(req)))\n  const previousCookies = res.getHeader('Set-Cookie')\n  if (previousCookies) {\n    if (previousCookies instanceof Array) {\n      Array.prototype.push.apply(strCookies, previousCookies)\n    } else if (typeof previousCookies === 'string') {\n      strCookies.push(previousCookies)\n    }\n  }\n  return strCookies\n}\n\n/**\n * Set one or more cookies.\n */\nexport function setCookies(req: any, res: any, cookies: Array<Cookie>) {\n  res.setHeader('Set-Cookie', getCookieString(req, res, cookies))\n}\n\n/**\n * Set one or more cookies.\n */\nexport function setCookie(req: any, res: any, cookie: Cookie) {\n  setCookies(req, res, [cookie])\n}\n\nexport function deleteCookie(req: any, res: any, name: string) {\n  setCookie(req, res, {\n    name,\n    value: '',\n    maxAge: -1,\n  })\n}\n","import crossFetch from 'cross-fetch'\n\nexport function expiresAt(expiresIn: number) {\n  const timeNow = Math.round(Date.now() / 1000)\n  return timeNow + expiresIn\n}\n\nexport function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8\n    return v.toString(16)\n  })\n}\n\nexport const isBrowser = () => typeof window !== 'undefined'\n\nexport function getParameterByName(name: string, url?: string) {\n  if (!url) url = window?.location?.href || ''\n  // eslint-disable-next-line no-useless-escape\n  name = name.replace(/[\\[\\]]/g, '\\\\$&')\n  const regex = new RegExp('[?&#]' + name + '(=([^&#]*)|&|#|$)'),\n    results = regex.exec(url)\n  if (!results) return null\n  if (!results[2]) return ''\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '))\n}\n\ntype Fetch = typeof fetch\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = crossFetch as unknown as Fetch\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n","import { Fetch, get, post, put, remove } from './lib/fetch'\nimport {\n  Session,\n  Provider,\n  AdminUserAttributes,\n  UserAttributes,\n  CookieOptions,\n  User,\n  OpenIDConnectCredentials,\n  VerifyOTPParams,\n} from './lib/types'\nimport { COOKIE_OPTIONS } from './lib/constants'\nimport { setCookies, getCookieString } from './lib/cookies'\nimport { expiresAt, resolveFetch } from './lib/helpers'\n\nimport type { ApiError } from './lib/types'\nexport default class GoTrueApi {\n  protected url: string\n  protected headers: {\n    [key: string]: string\n  }\n  protected cookieOptions: CookieOptions\n  protected fetch: Fetch\n\n  constructor({\n    url = '',\n    headers = {},\n    cookieOptions,\n    fetch,\n  }: {\n    url: string\n    headers?: {\n      [key: string]: string\n    }\n    cookieOptions?: CookieOptions\n    fetch?: Fetch\n  }) {\n    this.url = url\n    this.headers = headers\n    this.cookieOptions = { ...COOKIE_OPTIONS, ...cookieOptions }\n    this.fetch = resolveFetch(fetch)\n  }\n\n  /**\n   * Create a temporary object with all configured headers and\n   * adds the Authorization token to be used on request methods\n   * @param jwt A valid, logged-in JWT.\n   */\n  private _createRequestHeaders(jwt: string) {\n    const headers = { ...this.headers }\n    headers['Authorization'] = `Bearer ${jwt}`\n    return headers\n  }\n\n  private cookieName() {\n    return this.cookieOptions.name ?? ''\n  }\n\n  /**\n   * Generates the relevant login URL for a third-party provider.\n   * @param provider One of the providers supported by GoTrue.\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   * @param scopes A space-separated list of scopes granted to the OAuth application.\n   */\n  getUrlForProvider(\n    provider: Provider,\n    options: {\n      redirectTo?: string\n      scopes?: string\n    }\n  ) {\n    const urlParams: string[] = [`provider=${encodeURIComponent(provider)}`]\n    if (options?.redirectTo) {\n      urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`)\n    }\n    if (options?.scopes) {\n      urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`)\n    }\n    return `${this.url}/authorize?${urlParams.join('&')}`\n  }\n\n  /**\n   * Creates a new user using their email address.\n   * @param email The email address of the user.\n   * @param password The password of the user.\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   * @param data Optional user metadata.\n   *\n   * @returns A logged-in session if the server has \"autoconfirm\" ON\n   * @returns A user if the server has \"autoconfirm\" OFF\n   */\n  async signUpWithEmail(\n    email: string,\n    password: string,\n    options: {\n      redirectTo?: string\n      data?: object\n      captchaToken?: string\n    } = {}\n  ): Promise<{ data: Session | User | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      let queryString = ''\n      if (options.redirectTo) {\n        queryString = '?redirect_to=' + encodeURIComponent(options.redirectTo)\n      }\n      const data = await post(\n        this.fetch,\n        `${this.url}/signup${queryString}`,\n        {\n          email,\n          password,\n          data: options.data,\n          gotrue_meta_security: { hcaptcha_token: options.captchaToken },\n        },\n        { headers }\n      )\n      const session = { ...data }\n      if (session.expires_in) session.expires_at = expiresAt(data.expires_in)\n      return { data: session, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Logs in an existing user using their email address.\n   * @param email The email address of the user.\n   * @param password The password of the user.\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   */\n  async signInWithEmail(\n    email: string,\n    password: string,\n    options: {\n      redirectTo?: string\n    } = {}\n  ): Promise<{ data: Session | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      let queryString = '?grant_type=password'\n      if (options.redirectTo) {\n        queryString += '&redirect_to=' + encodeURIComponent(options.redirectTo)\n      }\n      const data = await post(\n        this.fetch,\n        `${this.url}/token${queryString}`,\n        { email, password },\n        { headers }\n      )\n      const session = { ...data }\n      if (session.expires_in) session.expires_at = expiresAt(data.expires_in)\n      return { data: session, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Signs up a new user using their phone number and a password.\n   * @param phone The phone number of the user.\n   * @param password The password of the user.\n   * @param data Optional user metadata.\n   */\n  async signUpWithPhone(\n    phone: string,\n    password: string,\n    options: {\n      data?: object\n      captchaToken?: string\n    } = {}\n  ): Promise<{ data: Session | User | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      const data = await post(\n        this.fetch,\n        `${this.url}/signup`,\n        {\n          phone,\n          password,\n          data: options.data,\n          gotrue_meta_security: { hcaptcha_token: options.captchaToken },\n        },\n        { headers }\n      )\n      const session = { ...data }\n      if (session.expires_in) session.expires_at = expiresAt(data.expires_in)\n      return { data: session, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Logs in an existing user using their phone number and password.\n   * @param phone The phone number of the user.\n   * @param password The password of the user.\n   */\n  async signInWithPhone(\n    phone: string,\n    password: string\n  ): Promise<{ data: Session | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      const queryString = '?grant_type=password'\n      const data = await post(\n        this.fetch,\n        `${this.url}/token${queryString}`,\n        { phone, password },\n        { headers }\n      )\n      const session = { ...data }\n      if (session.expires_in) session.expires_at = expiresAt(data.expires_in)\n      return { data: session, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Logs in an OpenID Connect user using their id_token.\n   * @param id_token The IDToken of the user.\n   * @param nonce The nonce of the user. The nonce is a random value generated by the developer (= yourself) before the initial grant is started. You should check the OpenID Connect specification for details. https://openid.net/developers/specs/\n   * @param provider The provider of the user.\n   * @param client_id The clientID of the user.\n   * @param issuer The issuer of the user.\n   */\n  async signInWithOpenIDConnect({\n    id_token,\n    nonce,\n    client_id,\n    issuer,\n    provider,\n  }: OpenIDConnectCredentials): Promise<{ data: Session | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      const queryString = '?grant_type=id_token'\n      const data = await post(\n        this.fetch,\n        `${this.url}/token${queryString}`,\n        { id_token, nonce, client_id, issuer, provider },\n        { headers }\n      )\n      const session = { ...data }\n      if (session.expires_in) session.expires_at = expiresAt(data.expires_in)\n      return { data: session, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Sends a magic login link to an email address.\n   * @param email The email address of the user.\n   * @param shouldCreateUser A boolean flag to indicate whether to automatically create a user on magiclink / otp sign-ins if the user doesn't exist. Defaults to true.\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   */\n  async sendMagicLinkEmail(\n    email: string,\n    options: {\n      shouldCreateUser?: boolean\n      redirectTo?: string\n      captchaToken?: string\n    } = {}\n  ): Promise<{ data: {} | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      let queryString = ''\n      if (options.redirectTo) {\n        queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo)\n      }\n\n      const shouldCreateUser = options.shouldCreateUser ?? true\n      const data = await post(\n        this.fetch,\n        `${this.url}/otp${queryString}`,\n        {\n          email,\n          create_user: shouldCreateUser,\n          gotrue_meta_security: { hcaptcha_token: options.captchaToken },\n        },\n        { headers }\n      )\n      return { data, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Sends a mobile OTP via SMS. Will register the account if it doesn't already exist\n   * @param phone The user's phone number WITH international prefix\n   * @param shouldCreateUser A boolean flag to indicate whether to automatically create a user on magiclink / otp sign-ins if the user doesn't exist. Defaults to true.\n   */\n  async sendMobileOTP(\n    phone: string,\n    options: {\n      shouldCreateUser?: boolean\n      captchaToken?: string\n    } = {}\n  ): Promise<{ data: {} | null; error: ApiError | null }> {\n    try {\n      const shouldCreateUser = options.shouldCreateUser ?? true\n      const headers = { ...this.headers }\n      const data = await post(\n        this.fetch,\n        `${this.url}/otp`,\n        {\n          phone,\n          create_user: shouldCreateUser,\n          gotrue_meta_security: { hcaptcha_token: options.captchaToken },\n        },\n        { headers }\n      )\n      return { data, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Removes a logged-in session.\n   * @param jwt A valid, logged-in JWT.\n   */\n  async signOut(jwt: string): Promise<{ error: ApiError | null }> {\n    try {\n      await post(\n        this.fetch,\n        `${this.url}/logout`,\n        {},\n        { headers: this._createRequestHeaders(jwt), noResolveJson: true }\n      )\n      return { error: null }\n    } catch (e) {\n      return { error: e as ApiError }\n    }\n  }\n\n  /**\n   * @deprecated Use `verifyOTP` instead!\n   * @param phone The user's phone number WITH international prefix\n   * @param token token that user was sent to their mobile phone\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   */\n  async verifyMobileOTP(\n    phone: string,\n    token: string,\n    options: {\n      redirectTo?: string\n    } = {}\n  ): Promise<{ data: Session | User | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      const data = await post(\n        this.fetch,\n        `${this.url}/verify`,\n        { phone, token, type: 'sms', redirect_to: options.redirectTo },\n        { headers }\n      )\n      const session = { ...data }\n      if (session.expires_in) session.expires_at = expiresAt(data.expires_in)\n      return { data: session, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Send User supplied Email / Mobile OTP to be verified\n   * @param email The user's email address\n   * @param phone The user's phone number WITH international prefix\n   * @param token token that user was sent to their mobile phone\n   * @param type verification type that the otp is generated for\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   */\n  async verifyOTP(\n    { email, phone, token, type = 'sms' }: VerifyOTPParams,\n    options: {\n      redirectTo?: string\n    } = {}\n  ): Promise<{ data: Session | User | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      const data = await post(\n        this.fetch,\n        `${this.url}/verify`,\n        { email, phone, token, type, redirect_to: options.redirectTo },\n        { headers }\n      )\n      const session = { ...data }\n      if (session.expires_in) session.expires_at = expiresAt(data.expires_in)\n      return { data: session, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Sends an invite link to an email address.\n   * @param email The email address of the user.\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   * @param data Optional user metadata\n   */\n  async inviteUserByEmail(\n    email: string,\n    options: {\n      redirectTo?: string\n      data?: object\n    } = {}\n  ): Promise<{ data: User | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      let queryString = ''\n      if (options.redirectTo) {\n        queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo)\n      }\n      const data = await post(\n        this.fetch,\n        `${this.url}/invite${queryString}`,\n        { email, data: options.data },\n        { headers }\n      )\n      return { data, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Sends a reset request to an email address.\n   * @param email The email address of the user.\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   */\n  async resetPasswordForEmail(\n    email: string,\n    options: {\n      redirectTo?: string\n      captchaToken?: string\n    } = {}\n  ): Promise<{ data: {} | null; error: ApiError | null }> {\n    try {\n      const headers = { ...this.headers }\n      let queryString = ''\n      if (options.redirectTo) {\n        queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo)\n      }\n      const data = await post(\n        this.fetch,\n        `${this.url}/recover${queryString}`,\n        { email, gotrue_meta_security: { hcaptcha_token: options.captchaToken } },\n        { headers }\n      )\n      return { data, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Generates a new JWT.\n   * @param refreshToken A valid refresh token that was returned on login.\n   */\n  async refreshAccessToken(\n    refreshToken: string\n  ): Promise<{ data: Session | null; error: ApiError | null }> {\n    try {\n      const data: any = await post(\n        this.fetch,\n        `${this.url}/token?grant_type=refresh_token`,\n        { refresh_token: refreshToken },\n        { headers: this.headers }\n      )\n      const session = { ...data }\n      if (session.expires_in) session.expires_at = expiresAt(data.expires_in)\n      return { data: session, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Set/delete the auth cookie based on the AuthChangeEvent.\n   * Works for Next.js & Express (requires cookie-parser middleware).\n   * @param req The request object.\n   * @param res The response object.\n   */\n  setAuthCookie(req: any, res: any) {\n    if (req.method !== 'POST') {\n      res.setHeader('Allow', 'POST')\n      res.status(405).end('Method Not Allowed')\n    }\n    const { event, session } = req.body\n\n    if (!event) throw new Error('Auth event missing!')\n    if (event === 'SIGNED_IN') {\n      if (!session) throw new Error('Auth session missing!')\n      setCookies(\n        req,\n        res,\n        [\n          { key: 'access-token', value: session.access_token },\n          { key: 'refresh-token', value: session.refresh_token },\n        ].map((token) => ({\n          name: `${this.cookieName()}-${token.key}`,\n          value: token.value,\n          domain: this.cookieOptions.domain,\n          maxAge: this.cookieOptions.lifetime ?? 0,\n          path: this.cookieOptions.path,\n          sameSite: this.cookieOptions.sameSite,\n        }))\n      )\n    }\n    if (event === 'SIGNED_OUT') {\n      setCookies(\n        req,\n        res,\n        ['access-token', 'refresh-token'].map((key) => ({\n          name: `${this.cookieName()}-${key}`,\n          value: '',\n          maxAge: -1,\n        }))\n      )\n    }\n    res.status(200).json({})\n  }\n\n  /**\n   * Deletes the Auth Cookies and redirects to the\n   * @param req The request object.\n   * @param res The response object.\n   * @param options Optionally specify a `redirectTo` URL in the options.\n   */\n  deleteAuthCookie(req: any, res: any, { redirectTo = '/' }: { redirectTo?: string }) {\n    setCookies(\n      req,\n      res,\n      ['access-token', 'refresh-token'].map((key) => ({\n        name: `${this.cookieName()}-${key}`,\n        value: '',\n        maxAge: -1,\n      }))\n    )\n    return res.redirect(307, redirectTo)\n  }\n\n  /**\n   * Helper method to generate the Auth Cookie string for you in case you can't use `setAuthCookie`.\n   * @param req The request object.\n   * @param res The response object.\n   * @returns The Cookie string that needs to be set as the value for the `Set-Cookie` header.\n   */\n  getAuthCookieString(req: any, res: any): string[] {\n    if (req.method !== 'POST') {\n      res.setHeader('Allow', 'POST')\n      res.status(405).end('Method Not Allowed')\n    }\n    const { event, session } = req.body\n\n    if (!event) throw new Error('Auth event missing!')\n    if (event === 'SIGNED_IN') {\n      if (!session) throw new Error('Auth session missing!')\n      return getCookieString(\n        req,\n        res,\n        [\n          { key: 'access-token', value: session.access_token },\n          { key: 'refresh-token', value: session.refresh_token },\n        ].map((token) => ({\n          name: `${this.cookieName()}-${token.key}`,\n          value: token.value,\n          domain: this.cookieOptions.domain,\n          maxAge: this.cookieOptions.lifetime ?? 0,\n          path: this.cookieOptions.path,\n          sameSite: this.cookieOptions.sameSite,\n        }))\n      )\n    }\n    if (event === 'SIGNED_OUT') {\n      return getCookieString(\n        req,\n        res,\n        ['access-token', 'refresh-token'].map((key) => ({\n          name: `${this.cookieName()}-${key}`,\n          value: '',\n          maxAge: -1,\n        }))\n      )\n    }\n    return res.getHeader('Set-Cookie')\n  }\n\n  /**\n   * Generates links to be sent via email or other.\n   * @param type The link type (\"signup\" or \"magiclink\" or \"recovery\" or \"invite\").\n   * @param email The user's email.\n   * @param password User password. For signup only.\n   * @param data Optional user metadata. For signup only.\n   * @param redirectTo The link type (\"signup\" or \"magiclink\" or \"recovery\" or \"invite\").\n   */\n  async generateLink(\n    type: 'signup' | 'magiclink' | 'recovery' | 'invite',\n    email: string,\n    options: {\n      password?: string\n      data?: object\n      redirectTo?: string\n    } = {}\n  ): Promise<{ data: Session | User | null; error: ApiError | null }> {\n    try {\n      const data: any = await post(\n        this.fetch,\n        `${this.url}/admin/generate_link`,\n        {\n          type,\n          email,\n          password: options.password,\n          data: options.data,\n          redirect_to: options.redirectTo,\n        },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  // User Admin API\n\n  /**\n   * Creates a new user.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   *\n   * @param attributes The data you want to create the user with.\n   */\n  async createUser(\n    attributes: AdminUserAttributes\n  ): Promise<\n    { user: null; data: null; error: ApiError } | { user: User; data: User; error: null }\n  > {\n    try {\n      const data: any = await post(this.fetch, `${this.url}/admin/users`, attributes, {\n        headers: this.headers,\n      })\n      return { user: data, data, error: null }\n    } catch (e) {\n      return { user: null, data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Get a list of users.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async listUsers(): Promise<{ data: null; error: ApiError } | { data: User[]; error: null }> {\n    try {\n      const data: any = await get(this.fetch, `${this.url}/admin/users`, {\n        headers: this.headers,\n      })\n      return { data: data.users, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Get user by id.\n   *\n   * @param uid The user's unique identifier\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async getUserById(\n    uid: string\n  ): Promise<{ data: null; error: ApiError } | { data: User; error: null }> {\n    try {\n      const data: any = await get(this.fetch, `${this.url}/admin/users/${uid}`, {\n        headers: this.headers,\n      })\n      return { data, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Get user by reading the cookie from the request.\n   * Works for Next.js & Express (requires cookie-parser middleware).\n   */\n  async getUserByCookie(\n    req: any,\n    res?: any\n  ): Promise<{\n    token: string | null\n    user: User | null\n    data: User | null\n    error: ApiError | null\n  }> {\n    try {\n      if (!req.cookies) {\n        throw new Error(\n          'Not able to parse cookies! When using Express make sure the cookie-parser middleware is in use!'\n        )\n      }\n\n      const access_token = req.cookies[`${this.cookieName()}-access-token`]\n      const refresh_token = req.cookies[`${this.cookieName()}-refresh-token`]\n\n      if (!access_token) {\n        throw new Error('No cookie found!')\n      }\n\n      const { user, error: getUserError } = await this.getUser(access_token)\n      if (getUserError) {\n        if (!refresh_token) throw new Error('No refresh_token cookie found!')\n        if (!res)\n          throw new Error('You need to pass the res object to automatically refresh the session!')\n        const { data, error } = await this.refreshAccessToken(refresh_token)\n        if (error) {\n          throw error\n        } else if (data) {\n          setCookies(\n            req,\n            res,\n            [\n              { key: 'access-token', value: data.access_token },\n              { key: 'refresh-token', value: data.refresh_token! },\n            ].map((token) => ({\n              name: `${this.cookieName()}-${token.key}`,\n              value: token.value,\n              domain: this.cookieOptions.domain,\n              maxAge: this.cookieOptions.lifetime ?? 0,\n              path: this.cookieOptions.path,\n              sameSite: this.cookieOptions.sameSite,\n            }))\n          )\n          return { token: data.access_token, user: data.user, data: data.user, error: null }\n        }\n      }\n      return { token: access_token, user: user, data: user, error: null }\n    } catch (e) {\n      return { token: null, user: null, data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Updates the user data.\n   *\n   * @param attributes The data you want to update.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async updateUserById(\n    uid: string,\n    attributes: AdminUserAttributes\n  ): Promise<{ user: User | null; data: User | null; error: ApiError | null }> {\n    try {\n      this //\n      const data: any = await put(this.fetch, `${this.url}/admin/users/${uid}`, attributes, {\n        headers: this.headers,\n      })\n      return { user: data, data, error: null }\n    } catch (e) {\n      return { user: null, data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Delete a user. Requires a `service_role` key.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   *\n   * @param uid The user uid you want to remove.\n   */\n  async deleteUser(\n    uid: string\n  ): Promise<{ user: User | null; data: User | null; error: ApiError | null }> {\n    try {\n      const data: any = await remove(\n        this.fetch,\n        `${this.url}/admin/users/${uid}`,\n        {},\n        {\n          headers: this.headers,\n        }\n      )\n      return { user: data, data, error: null }\n    } catch (e) {\n      return { user: null, data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Gets the current user details.\n   *\n   * This method is called by the GoTrueClient `update` where\n   * the jwt is set to this.currentSession.access_token\n   * and therefore, acts like getting the currently authenticated used\n   *\n   * @param jwt A valid, logged-in JWT. Typically, the access_token for the currentSession\n   */\n  async getUser(\n    jwt: string\n  ): Promise<{ user: User | null; data: User | null; error: ApiError | null }> {\n    try {\n      const data: any = await get(this.fetch, `${this.url}/user`, {\n        headers: this._createRequestHeaders(jwt),\n      })\n      return { user: data, data, error: null }\n    } catch (e) {\n      return { user: null, data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Updates the user data.\n   * @param jwt A valid, logged-in JWT.\n   * @param attributes The data you want to update.\n   */\n  async updateUser(\n    jwt: string,\n    attributes: UserAttributes\n  ): Promise<{ user: User | null; data: User | null; error: ApiError | null }> {\n    try {\n      const data: any = await put(this.fetch, `${this.url}/user`, attributes, {\n        headers: this._createRequestHeaders(jwt),\n      })\n      return { user: data, data, error: null }\n    } catch (e) {\n      return { user: null, data: null, error: e as ApiError }\n    }\n  }\n}\n","/**\n * https://mathiasbynens.be/notes/globalthis\n */\nexport function polyfillGlobalThis() {\n  if (typeof globalThis === 'object') return\n  try {\n    Object.defineProperty(Object.prototype, '__magic__', {\n      get: function () {\n        return this\n      },\n      configurable: true,\n    })\n    // @ts-expect-error 'Allow access to magic'\n    __magic__.globalThis = __magic__\n    // @ts-expect-error 'Allow access to magic'\n    delete Object.prototype.__magic__\n  } catch (e) {\n    if (typeof self !== 'undefined') {\n      // @ts-expect-error 'Allow access to globals'\n      self.globalThis = self\n    }\n  }\n}\n","import GoTrueApi from './GoTrueApi'\nimport { isBrowser, getParameterByName, uuid } from './lib/helpers'\nimport { GOTRUE_URL, DEFAULT_HEADERS, STORAGE_KEY } from './lib/constants'\nimport { polyfillGlobalThis } from './lib/polyfills'\nimport { Fetch } from './lib/fetch'\n\nimport type {\n  ApiError,\n  Session,\n  User,\n  UserAttributes,\n  Provider,\n  Subscription,\n  AuthChangeEvent,\n  CookieOptions,\n  UserCredentials,\n  VerifyOTPParams,\n  OpenIDConnectCredentials,\n} from './lib/types'\n\npolyfillGlobalThis() // Make \"globalThis\" available\n\nconst DEFAULT_OPTIONS = {\n  url: GOTRUE_URL,\n  autoRefreshToken: true,\n  persistSession: true,\n  detectSessionInUrl: true,\n  multiTab: true,\n  headers: DEFAULT_HEADERS,\n}\n\ntype AnyFunction = (...args: any[]) => any\ntype MaybePromisify<T> = T | Promise<T>\n\ntype PromisifyMethods<T> = {\n  [K in keyof T]: T[K] extends AnyFunction\n    ? (...args: Parameters<T[K]>) => MaybePromisify<ReturnType<T[K]>>\n    : T[K]\n}\n\ntype SupportedStorage = PromisifyMethods<Pick<Storage, 'getItem' | 'setItem' | 'removeItem'>>\n\nexport default class GoTrueClient {\n  /**\n   * Namespace for the GoTrue API methods.\n   * These can be used for example to get a user from a JWT in a server environment or reset a user's password.\n   */\n  api: GoTrueApi\n  /**\n   * The currently logged in user or null.\n   */\n  protected currentUser: User | null\n  /**\n   * The session object for the currently logged in user or null.\n   */\n  protected currentSession: Session | null\n\n  protected autoRefreshToken: boolean\n  protected persistSession: boolean\n  protected localStorage: SupportedStorage\n  protected multiTab: boolean\n  protected stateChangeEmitters: Map<string, Subscription> = new Map()\n  protected refreshTokenTimer?: ReturnType<typeof setTimeout>\n\n  /**\n   * Create a new client for use in the browser.\n   * @param options.url The URL of the GoTrue server.\n   * @param options.headers Any additional headers to send to the GoTrue server.\n   * @param options.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n   * @param options.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n   * @param options.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n   * @param options.localStorage Provide your own local storage implementation to use instead of the browser's local storage.\n   * @param options.multiTab Set to \"false\" if you want to disable multi-tab/window events.\n   * @param options.cookieOptions\n   * @param options.fetch A custom fetch implementation.\n   */\n  constructor(options: {\n    url?: string\n    headers?: { [key: string]: string }\n    detectSessionInUrl?: boolean\n    autoRefreshToken?: boolean\n    persistSession?: boolean\n    localStorage?: SupportedStorage\n    multiTab?: boolean\n    cookieOptions?: CookieOptions\n    fetch?: Fetch\n  }) {\n    const settings = { ...DEFAULT_OPTIONS, ...options }\n    this.currentUser = null\n    this.currentSession = null\n    this.autoRefreshToken = settings.autoRefreshToken\n    this.persistSession = settings.persistSession\n    this.multiTab = settings.multiTab\n    this.localStorage = settings.localStorage || globalThis.localStorage\n    this.api = new GoTrueApi({\n      url: settings.url,\n      headers: settings.headers,\n      cookieOptions: settings.cookieOptions,\n      fetch: settings.fetch,\n    })\n    this._recoverSession()\n    this._recoverAndRefresh()\n    this._listenForMultiTabEvents()\n\n    if (settings.detectSessionInUrl && isBrowser() && !!getParameterByName('access_token')) {\n      // Handle the OAuth redirect\n      this.getSessionFromUrl({ storeSession: true }).then(({ error }) => {\n        if (error) {\n          console.error('Error getting session from URL.', error)\n        }\n      })\n    }\n  }\n\n  /**\n   * Creates a new user.\n   * @type UserCredentials\n   * @param email The user's email address.\n   * @param password The user's password.\n   * @param phone The user's phone number.\n   * @param redirectTo The redirect URL attached to the signup confirmation link. Does not redirect the user if it's a mobile signup.\n   * @param data Optional user metadata.\n   */\n  async signUp(\n    { email, password, phone }: UserCredentials,\n    options: {\n      redirectTo?: string\n      data?: object\n      captchaToken?: string\n    } = {}\n  ): Promise<{\n    user: User | null\n    session: Session | null\n    error: ApiError | null\n  }> {\n    try {\n      this._removeSession()\n\n      const { data, error } =\n        phone && password\n          ? await this.api.signUpWithPhone(phone!, password!, {\n              data: options.data,\n              captchaToken: options.captchaToken,\n            })\n          : await this.api.signUpWithEmail(email!, password!, {\n              redirectTo: options.redirectTo,\n              data: options.data,\n              captchaToken: options.captchaToken,\n            })\n\n      if (error) {\n        throw error\n      }\n\n      if (!data) {\n        throw 'An error occurred on sign up.'\n      }\n\n      let session: Session | null = null\n      let user: User | null = null\n\n      if ((data as Session).access_token) {\n        session = data as Session\n        user = session.user as User\n        this._saveSession(session)\n        this._notifyAllSubscribers('SIGNED_IN')\n      }\n\n      if ((data as User).id) {\n        user = data as User\n      }\n\n      return { user, session, error: null }\n    } catch (e) {\n      return { user: null, session: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Log in an existing user, or login via a third-party provider.\n   * @type UserCredentials\n   * @param email The user's email address.\n   * @param phone The user's phone number.\n   * @param password The user's password.\n   * @param refreshToken A valid refresh token that was returned on login.\n   * @param provider One of the providers supported by GoTrue.\n   * @param redirectTo A URL to send the user to after they are confirmed (OAuth logins only).\n   * @param shouldCreateUser A boolean flag to indicate whether to automatically create a user on magiclink / otp sign-ins if the user doesn't exist. Defaults to true.\n   * @param scopes A space-separated list of scopes granted to the OAuth application.\n   */\n  async signIn(\n    { email, phone, password, refreshToken, provider, oidc }: UserCredentials,\n    options: {\n      redirectTo?: string\n      shouldCreateUser?: boolean\n      scopes?: string\n      captchaToken?: string\n    } = {}\n  ): Promise<{\n    session: Session | null\n    user: User | null\n    provider?: Provider\n    url?: string | null\n    error: ApiError | null\n  }> {\n    try {\n      this._removeSession()\n\n      if (email && !password) {\n        const { error } = await this.api.sendMagicLinkEmail(email, {\n          redirectTo: options.redirectTo,\n          shouldCreateUser: options.shouldCreateUser,\n          captchaToken: options.captchaToken,\n        })\n        return { user: null, session: null, error }\n      }\n      if (email && password) {\n        return this._handleEmailSignIn(email, password, {\n          redirectTo: options.redirectTo,\n        })\n      }\n      if (phone && !password) {\n        const { error } = await this.api.sendMobileOTP(phone, {\n          shouldCreateUser: options.shouldCreateUser,\n          captchaToken: options.captchaToken,\n        })\n        return { user: null, session: null, error }\n      }\n      if (phone && password) {\n        return this._handlePhoneSignIn(phone, password)\n      }\n      if (refreshToken) {\n        // currentSession and currentUser will be updated to latest on _callRefreshToken using the passed refreshToken\n        const { error } = await this._callRefreshToken(refreshToken)\n        if (error) throw error\n\n        return {\n          user: this.currentUser,\n          session: this.currentSession,\n          error: null,\n        }\n      }\n      if (provider) {\n        return this._handleProviderSignIn(provider, {\n          redirectTo: options.redirectTo,\n          scopes: options.scopes,\n        })\n      }\n      if (oidc) {\n        return this._handleOpenIDConnectSignIn(oidc)\n      }\n      throw new Error(\n        `You must provide either an email, phone number, a third-party provider or OpenID Connect.`\n      )\n    } catch (e) {\n      return { user: null, session: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Log in a user given a User supplied OTP received via mobile.\n   * @param email The user's email address.\n   * @param phone The user's phone number.\n   * @param token The user's password.\n   * @param type The user's verification type.\n   * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n   */\n  async verifyOTP(\n    params: VerifyOTPParams,\n    options: {\n      redirectTo?: string\n    } = {}\n  ): Promise<{\n    user: User | null\n    session: Session | null\n    error: ApiError | null\n  }> {\n    try {\n      this._removeSession()\n\n      const { data, error } = await this.api.verifyOTP(params, options)\n\n      if (error) {\n        throw error\n      }\n\n      if (!data) {\n        throw 'An error occurred on token verification.'\n      }\n\n      let session: Session | null = null\n      let user: User | null = null\n\n      if ((data as Session).access_token) {\n        session = data as Session\n        user = session.user as User\n        this._saveSession(session)\n        this._notifyAllSubscribers('SIGNED_IN')\n      }\n\n      if ((data as User).id) {\n        user = data as User\n      }\n\n      return { user, session, error: null }\n    } catch (e) {\n      return { user: null, session: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Inside a browser context, `user()` will return the user data, if there is a logged in user.\n   *\n   * For server-side management, you can get a user through `auth.api.getUserByCookie()`\n   */\n  user(): User | null {\n    return this.currentUser\n  }\n\n  /**\n   * Returns the session data, if there is an active session.\n   */\n  session(): Session | null {\n    return this.currentSession\n  }\n\n  /**\n   * Force refreshes the session including the user data in case it was updated in a different session.\n   */\n  async refreshSession(): Promise<{\n    data: Session | null\n    user: User | null\n    error: ApiError | null\n  }> {\n    try {\n      if (!this.currentSession?.access_token) throw new Error('Not logged in.')\n\n      // currentSession and currentUser will be updated to latest on _callRefreshToken\n      const { error } = await this._callRefreshToken()\n      if (error) throw error\n\n      return { data: this.currentSession, user: this.currentUser, error: null }\n    } catch (e) {\n      return { data: null, user: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Updates user data, if there is a logged in user.\n   */\n  async update(\n    attributes: UserAttributes\n  ): Promise<{ data: User | null; user: User | null; error: ApiError | null }> {\n    try {\n      if (!this.currentSession?.access_token) throw new Error('Not logged in.')\n\n      const { user, error } = await this.api.updateUser(\n        this.currentSession.access_token,\n        attributes\n      )\n      if (error) throw error\n      if (!user) throw Error('Invalid user data.')\n\n      const session = { ...this.currentSession, user }\n      this._saveSession(session)\n      this._notifyAllSubscribers('USER_UPDATED')\n\n      return { data: user, user, error: null }\n    } catch (e) {\n      return { data: null, user: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Sets the session data from refresh_token and returns current Session and Error\n   * @param refresh_token a JWT token\n   */\n  async setSession(\n    refresh_token: string\n  ): Promise<{ session: Session | null; error: ApiError | null }> {\n    try {\n      if (!refresh_token) {\n        throw new Error('No current session.')\n      }\n      const { data, error } = await this.api.refreshAccessToken(refresh_token)\n      if (error) {\n        return { session: null, error: error }\n      }\n\n      this._saveSession(data!)\n      this._notifyAllSubscribers('SIGNED_IN')\n      return { session: data, error: null }\n    } catch (e) {\n      return { error: e as ApiError, session: null }\n    }\n  }\n\n  /**\n   * Overrides the JWT on the current client. The JWT will then be sent in all subsequent network requests.\n   * @param access_token a jwt access token\n   */\n  setAuth(access_token: string): Session {\n    this.currentSession = {\n      ...this.currentSession,\n      access_token,\n      token_type: 'bearer',\n      user: this.user(),\n    }\n\n    return this.currentSession\n  }\n\n  /**\n   * Gets the session data from a URL string\n   * @param options.storeSession Optionally store the session in the browser\n   */\n  async getSessionFromUrl(options?: {\n    storeSession?: boolean\n  }): Promise<{ data: Session | null; error: ApiError | null }> {\n    try {\n      if (!isBrowser()) throw new Error('No browser detected.')\n\n      const error_description = getParameterByName('error_description')\n      if (error_description) throw new Error(error_description)\n\n      const provider_token = getParameterByName('provider_token')\n      const access_token = getParameterByName('access_token')\n      if (!access_token) throw new Error('No access_token detected.')\n      const expires_in = getParameterByName('expires_in')\n      if (!expires_in) throw new Error('No expires_in detected.')\n      const refresh_token = getParameterByName('refresh_token')\n      if (!refresh_token) throw new Error('No refresh_token detected.')\n      const token_type = getParameterByName('token_type')\n      if (!token_type) throw new Error('No token_type detected.')\n\n      const timeNow = Math.round(Date.now() / 1000)\n      const expires_at = timeNow + parseInt(expires_in)\n\n      const { user, error } = await this.api.getUser(access_token)\n      if (error) throw error\n\n      const session: Session = {\n        provider_token,\n        access_token,\n        expires_in: parseInt(expires_in),\n        expires_at,\n        refresh_token,\n        token_type,\n        user: user!,\n      }\n      if (options?.storeSession) {\n        this._saveSession(session)\n        const recoveryMode = getParameterByName('type')\n        this._notifyAllSubscribers('SIGNED_IN')\n        if (recoveryMode === 'recovery') {\n          this._notifyAllSubscribers('PASSWORD_RECOVERY')\n        }\n      }\n      // Remove tokens from URL\n      window.location.hash = ''\n\n      return { data: session, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  /**\n   * Inside a browser context, `signOut()` will remove the logged in user from the browser session\n   * and log them out - removing all items from localstorage and then trigger a \"SIGNED_OUT\" event.\n   *\n   * For server-side management, you can disable sessions by passing a JWT through to `auth.api.signOut(JWT: string)`\n   */\n  async signOut(): Promise<{ error: ApiError | null }> {\n    const accessToken = this.currentSession?.access_token\n    this._removeSession()\n    this._notifyAllSubscribers('SIGNED_OUT')\n    if (accessToken) {\n      const { error } = await this.api.signOut(accessToken)\n      if (error) return { error }\n    }\n    return { error: null }\n  }\n\n  /**\n   * Receive a notification every time an auth event happens.\n   * @returns {Subscription} A subscription object which can be used to unsubscribe itself.\n   */\n  onAuthStateChange(callback: (event: AuthChangeEvent, session: Session | null) => void): {\n    data: Subscription | null\n    error: ApiError | null\n  } {\n    try {\n      const id: string = uuid()\n      const subscription: Subscription = {\n        id,\n        callback,\n        unsubscribe: () => {\n          this.stateChangeEmitters.delete(id)\n        },\n      }\n      this.stateChangeEmitters.set(id, subscription)\n      return { data: subscription, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  private async _handleEmailSignIn(\n    email: string,\n    password: string,\n    options: {\n      redirectTo?: string\n    } = {}\n  ) {\n    try {\n      const { data, error } = await this.api.signInWithEmail(email, password, {\n        redirectTo: options.redirectTo,\n      })\n      if (error || !data) return { data: null, user: null, session: null, error }\n\n      if (data?.user?.confirmed_at || data?.user?.email_confirmed_at) {\n        this._saveSession(data)\n        this._notifyAllSubscribers('SIGNED_IN')\n      }\n\n      return { data, user: data.user, session: data, error: null }\n    } catch (e) {\n      return { data: null, user: null, session: null, error: e as ApiError }\n    }\n  }\n\n  private async _handlePhoneSignIn(phone: string, password: string) {\n    try {\n      const { data, error } = await this.api.signInWithPhone(phone, password)\n      if (error || !data) return { data: null, user: null, session: null, error }\n\n      if (data?.user?.phone_confirmed_at) {\n        this._saveSession(data)\n        this._notifyAllSubscribers('SIGNED_IN')\n      }\n\n      return { data, user: data.user, session: data, error: null }\n    } catch (e) {\n      return { data: null, user: null, session: null, error: e as ApiError }\n    }\n  }\n\n  private _handleProviderSignIn(\n    provider: Provider,\n    options: {\n      redirectTo?: string\n      scopes?: string\n    } = {}\n  ) {\n    const url: string = this.api.getUrlForProvider(provider, {\n      redirectTo: options.redirectTo,\n      scopes: options.scopes,\n    })\n\n    try {\n      // try to open on the browser\n      if (isBrowser()) {\n        window.location.href = url\n      }\n      return { provider, url, data: null, session: null, user: null, error: null }\n    } catch (e) {\n      // fallback to returning the URL\n      if (url) return { provider, url, data: null, session: null, user: null, error: null }\n      return { data: null, user: null, session: null, error: e as ApiError }\n    }\n  }\n\n  private async _handleOpenIDConnectSignIn({\n    id_token,\n    nonce,\n    client_id,\n    issuer,\n    provider,\n  }: OpenIDConnectCredentials): Promise<{\n    session: Session | null\n    user: User | null\n    error: ApiError | null\n  }> {\n    if (id_token && nonce && ((client_id && issuer) || provider)) {\n      try {\n        const { data, error } = await this.api.signInWithOpenIDConnect({\n          id_token,\n          nonce,\n          client_id,\n          issuer,\n          provider,\n        })\n        if (error || !data) return { user: null, session: null, error }\n        this._saveSession(data)\n        this._notifyAllSubscribers('SIGNED_IN')\n        return { user: data.user, session: data, error: null }\n      } catch (e) {\n        return { user: null, session: null, error: e as ApiError }\n      }\n    }\n    throw new Error(`You must provide a OpenID Connect provider with your id token and nonce.`)\n  }\n\n  /**\n   * Attempts to get the session from LocalStorage\n   * Note: this should never be async (even for React Native), as we need it to return immediately in the constructor.\n   */\n  private _recoverSession() {\n    try {\n      const json = isBrowser() && this.localStorage?.getItem(STORAGE_KEY)\n      if (!json || typeof json !== 'string') {\n        return null\n      }\n\n      const data = JSON.parse(json)\n      const { currentSession, expiresAt } = data\n      const timeNow = Math.round(Date.now() / 1000)\n\n      if (expiresAt >= timeNow && currentSession?.user) {\n        this._saveSession(currentSession)\n        this._notifyAllSubscribers('SIGNED_IN')\n      }\n    } catch (error) {\n      console.log('error', error)\n    }\n  }\n\n  /**\n   * Recovers the session from LocalStorage and refreshes\n   * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n   */\n  private async _recoverAndRefresh() {\n    try {\n      const json = isBrowser() && (await this.localStorage.getItem(STORAGE_KEY))\n      if (!json) {\n        return null\n      }\n\n      const data = JSON.parse(json)\n      const { currentSession, expiresAt } = data\n      const timeNow = Math.round(Date.now() / 1000)\n\n      if (expiresAt < timeNow) {\n        if (this.autoRefreshToken && currentSession.refresh_token) {\n          const { error } = await this._callRefreshToken(currentSession.refresh_token)\n          if (error) {\n            console.log(error.message)\n            await this._removeSession()\n          }\n        } else {\n          this._removeSession()\n        }\n      } else if (!currentSession) {\n        console.log('Current session is missing data.')\n        this._removeSession()\n      } else {\n        // should be handled on _recoverSession method already\n        // But we still need the code here to accommodate for AsyncStorage e.g. in React native\n        this._saveSession(currentSession)\n        this._notifyAllSubscribers('SIGNED_IN')\n      }\n    } catch (err) {\n      console.error(err)\n      return null\n    }\n  }\n\n  private async _callRefreshToken(refresh_token = this.currentSession?.refresh_token) {\n    try {\n      if (!refresh_token) {\n        throw new Error('No current session.')\n      }\n      const { data, error } = await this.api.refreshAccessToken(refresh_token)\n      if (error) throw error\n      if (!data) throw Error('Invalid session data.')\n\n      this._saveSession(data)\n      this._notifyAllSubscribers('TOKEN_REFRESHED')\n      this._notifyAllSubscribers('SIGNED_IN')\n\n      return { data, error: null }\n    } catch (e) {\n      return { data: null, error: e as ApiError }\n    }\n  }\n\n  private _notifyAllSubscribers(event: AuthChangeEvent) {\n    this.stateChangeEmitters.forEach((x) => x.callback(event, this.currentSession))\n  }\n\n  /**\n   * set currentSession and currentUser\n   * process to _startAutoRefreshToken if possible\n   */\n  private _saveSession(session: Session) {\n    this.currentSession = session\n    this.currentUser = session.user\n\n    const expiresAt = session.expires_at\n    if (expiresAt) {\n      const timeNow = Math.round(Date.now() / 1000)\n      const expiresIn = expiresAt - timeNow\n      const refreshDurationBeforeExpires = expiresIn > 60 ? 60 : 0.5\n      this._startAutoRefreshToken((expiresIn - refreshDurationBeforeExpires) * 1000)\n    }\n\n    // Do we need any extra check before persist session\n    // access_token or user ?\n    if (this.persistSession && session.expires_at) {\n      this._persistSession(this.currentSession)\n    }\n  }\n\n  private _persistSession(currentSession: Session) {\n    const data = { currentSession, expiresAt: currentSession.expires_at }\n    isBrowser() && this.localStorage.setItem(STORAGE_KEY, JSON.stringify(data))\n  }\n\n  private async _removeSession() {\n    this.currentSession = null\n    this.currentUser = null\n    if (this.refreshTokenTimer) clearTimeout(this.refreshTokenTimer)\n    isBrowser() && (await this.localStorage.removeItem(STORAGE_KEY))\n  }\n\n  /**\n   * Clear and re-create refresh token timer\n   * @param value time intervals in milliseconds\n   */\n  private _startAutoRefreshToken(value: number) {\n    if (this.refreshTokenTimer) clearTimeout(this.refreshTokenTimer)\n    if (value <= 0 || !this.autoRefreshToken) return\n\n    this.refreshTokenTimer = setTimeout(() => this._callRefreshToken(), value)\n    if (typeof this.refreshTokenTimer.unref === 'function') this.refreshTokenTimer.unref()\n  }\n\n  /**\n   * Listens for changes to LocalStorage and updates the current session.\n   */\n  private _listenForMultiTabEvents() {\n    if (!this.multiTab || !isBrowser() || !window?.addEventListener) {\n      // console.debug('Auth multi-tab support is disabled.')\n      return false\n    }\n\n    try {\n      window?.addEventListener('storage', (e: StorageEvent) => {\n        if (e.key === STORAGE_KEY) {\n          const newSession = JSON.parse(String(e.newValue))\n          if (newSession?.currentSession?.access_token) {\n            this._recoverAndRefresh()\n            this._notifyAllSubscribers('SIGNED_IN')\n          } else {\n            this._removeSession()\n            this._notifyAllSubscribers('SIGNED_OUT')\n          }\n        }\n      })\n    } catch (error) {\n      console.error('_listenForMultiTabEvents', error)\n    }\n  }\n}\n","import { GoTrueClient } from '@supabase/gotrue-js'\nimport { SupabaseAuthClientOptions } from './types'\n\nexport class SupabaseAuthClient extends GoTrueClient {\n  constructor(options: SupabaseAuthClientOptions) {\n    super(options)\n  }\n}\n","import crossFetch from 'cross-fetch'\n\nexport type Fetch = typeof fetch\n\n/**\n * Error format\n *\n * {@link https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes}\n */\nexport type PostgrestError = {\n  message: string\n  details: string\n  hint: string\n  code: string\n}\n\n/**\n * Response format\n *\n * {@link https://github.com/supabase/supabase-js/issues/32}\n */\ninterface PostgrestResponseBase {\n  status: number\n  statusText: string\n}\n\ninterface PostgrestResponseSuccess<T> extends PostgrestResponseBase {\n  error: null\n  data: T[]\n  body: T[]\n  count: number | null\n}\ninterface PostgrestResponseFailure extends PostgrestResponseBase {\n  error: PostgrestError\n  data: null\n  // For backward compatibility: body === data\n  body: null\n  count: null\n}\nexport type PostgrestResponse<T> = PostgrestResponseSuccess<T> | PostgrestResponseFailure\n\ninterface PostgrestSingleResponseSuccess<T> extends PostgrestResponseBase {\n  error: null\n  data: T\n  // For backward compatibility: body === data\n  body: T\n}\nexport type PostgrestSingleResponse<T> =\n  | PostgrestSingleResponseSuccess<T>\n  | PostgrestResponseFailure\nexport type PostgrestMaybeSingleResponse<T> = PostgrestSingleResponse<T | null>\n\nexport abstract class PostgrestBuilder<T> implements PromiseLike<PostgrestResponse<T>> {\n  protected method!: 'GET' | 'HEAD' | 'POST' | 'PATCH' | 'DELETE'\n  protected url!: URL\n  protected headers!: { [key: string]: string }\n  protected schema?: string\n  protected body?: Partial<T> | Partial<T>[]\n  protected shouldThrowOnError: boolean\n  protected signal?: AbortSignal\n  protected fetch: Fetch\n\n  constructor(builder: PostgrestBuilder<T>) {\n    Object.assign(this, builder)\n    let _fetch: Fetch\n    if (builder.fetch) {\n      _fetch = builder.fetch\n    } else if (typeof fetch === 'undefined') {\n      _fetch = crossFetch\n    } else {\n      _fetch = fetch\n    }\n    this.fetch = (...args) => _fetch(...args)\n    this.shouldThrowOnError = builder.shouldThrowOnError || false\n  }\n\n  /**\n   * If there's an error with the query, throwOnError will reject the promise by\n   * throwing the error instead of returning it as part of a successful response.\n   *\n   * {@link https://github.com/supabase/supabase-js/issues/92}\n   */\n  throwOnError(throwOnError?: boolean): this {\n    if (throwOnError === null || throwOnError === undefined) {\n      throwOnError = true\n    }\n    this.shouldThrowOnError = throwOnError\n    return this\n  }\n\n  then<TResult1 = PostgrestResponse<T>, TResult2 = never>(\n    onfulfilled?:\n      | ((value: PostgrestResponse<T>) => TResult1 | PromiseLike<TResult1>)\n      | undefined\n      | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\n  ): PromiseLike<TResult1 | TResult2> {\n    // https://postgrest.org/en/stable/api.html#switching-schemas\n    if (typeof this.schema === 'undefined') {\n      // skip\n    } else if (['GET', 'HEAD'].includes(this.method)) {\n      this.headers['Accept-Profile'] = this.schema\n    } else {\n      this.headers['Content-Profile'] = this.schema\n    }\n    if (this.method !== 'GET' && this.method !== 'HEAD') {\n      this.headers['Content-Type'] = 'application/json'\n    }\n\n    let res = this.fetch(this.url.toString(), {\n      method: this.method,\n      headers: this.headers,\n      body: JSON.stringify(this.body),\n      signal: this.signal,\n    }).then(async (res) => {\n      let error = null\n      let data = null\n      let count = null\n\n      if (res.ok) {\n        const isReturnMinimal = this.headers['Prefer']?.split(',').includes('return=minimal')\n        if (this.method !== 'HEAD' && !isReturnMinimal) {\n          const text = await res.text()\n          if (!text) {\n            // discard `text`\n          } else if (this.headers['Accept'] === 'text/csv') {\n            data = text\n          } else {\n            data = JSON.parse(text)\n          }\n        }\n\n        const countHeader = this.headers['Prefer']?.match(/count=(exact|planned|estimated)/)\n        const contentRange = res.headers.get('content-range')?.split('/')\n        if (countHeader && contentRange && contentRange.length > 1) {\n          count = parseInt(contentRange[1])\n        }\n      } else {\n        const body = await res.text()\n\n        try {\n          error = JSON.parse(body)\n        } catch {\n          error = {\n            message: body,\n          }\n        }\n\n        if (error && this.shouldThrowOnError) {\n          throw error\n        }\n      }\n\n      const postgrestResponse = {\n        error,\n        data,\n        count,\n        status: res.status,\n        statusText: res.statusText,\n        body: data,\n      }\n\n      return postgrestResponse\n    })\n    if (!this.shouldThrowOnError) {\n      res = res.catch((fetchError) => ({\n        error: {\n          message: `FetchError: ${fetchError.message}`,\n          details: '',\n          hint: '',\n          code: fetchError.code || '',\n        },\n        data: null,\n        body: null,\n        count: null,\n        status: 400,\n        statusText: 'Bad Request',\n      }))\n    }\n\n    return res.then(onfulfilled, onrejected)\n  }\n}\n","import { PostgrestBuilder, PostgrestMaybeSingleResponse, PostgrestSingleResponse } from './types'\n\n/**\n * Post-filters (transforms)\n */\n\nexport default class PostgrestTransformBuilder<T> extends PostgrestBuilder<T> {\n  /**\n   * Performs vertical filtering with SELECT.\n   *\n   * @param columns  The columns to retrieve, separated by commas.\n   */\n  select(columns = '*'): this {\n    // Remove whitespaces except when quoted\n    let quoted = false\n    const cleanedColumns = columns\n      .split('')\n      .map((c) => {\n        if (/\\s/.test(c) && !quoted) {\n          return ''\n        }\n        if (c === '\"') {\n          quoted = !quoted\n        }\n        return c\n      })\n      .join('')\n    this.url.searchParams.set('select', cleanedColumns)\n    return this\n  }\n\n  /**\n   * Orders the result with the specified `column`.\n   *\n   * @param column  The column to order on.\n   * @param ascending  If `true`, the result will be in ascending order.\n   * @param nullsFirst  If `true`, `null`s appear first.\n   * @param foreignTable  The foreign table to use (if `column` is a foreign column).\n   */\n  order(\n    column: keyof T,\n    {\n      ascending = true,\n      nullsFirst = false,\n      foreignTable,\n    }: { ascending?: boolean; nullsFirst?: boolean; foreignTable?: string } = {}\n  ): this {\n    const key = typeof foreignTable === 'undefined' ? 'order' : `${foreignTable}.order`\n    const existingOrder = this.url.searchParams.get(key)\n\n    this.url.searchParams.set(\n      key,\n      `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}.${\n        nullsFirst ? 'nullsfirst' : 'nullslast'\n      }`\n    )\n    return this\n  }\n\n  /**\n   * Limits the result with the specified `count`.\n   *\n   * @param count  The maximum no. of rows to limit to.\n   * @param foreignTable  The foreign table to use (for foreign columns).\n   */\n  limit(count: number, { foreignTable }: { foreignTable?: string } = {}): this {\n    const key = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`\n    this.url.searchParams.set(key, `${count}`)\n    return this\n  }\n\n  /**\n   * Limits the result to rows within the specified range, inclusive.\n   *\n   * @param from  The starting index from which to limit the result, inclusive.\n   * @param to  The last index to which to limit the result, inclusive.\n   * @param foreignTable  The foreign table to use (for foreign columns).\n   */\n  range(from: number, to: number, { foreignTable }: { foreignTable?: string } = {}): this {\n    const keyOffset = typeof foreignTable === 'undefined' ? 'offset' : `${foreignTable}.offset`\n    const keyLimit = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`\n    this.url.searchParams.set(keyOffset, `${from}`)\n    // Range is inclusive, so add 1\n    this.url.searchParams.set(keyLimit, `${to - from + 1}`)\n    return this\n  }\n\n  /**\n   * Sets the AbortSignal for the fetch request.\n   */\n  abortSignal(signal: AbortSignal): this {\n    this.signal = signal\n    return this\n  }\n\n  /**\n   * Retrieves only one row from the result. Result must be one row (e.g. using\n   * `limit`), otherwise this will result in an error.\n   */\n  single(): PromiseLike<PostgrestSingleResponse<T>> {\n    this.headers['Accept'] = 'application/vnd.pgrst.object+json'\n    return this as PromiseLike<PostgrestSingleResponse<T>>\n  }\n\n  /**\n   * Retrieves at most one row from the result. Result must be at most one row\n   * (e.g. using `eq` on a UNIQUE column), otherwise this will result in an\n   * error.\n   */\n  maybeSingle(): PromiseLike<PostgrestMaybeSingleResponse<T>> {\n    this.headers['Accept'] = 'application/vnd.pgrst.object+json'\n    const _this = new PostgrestTransformBuilder(this)\n    _this.then = ((onfulfilled: any, onrejected: any) =>\n      this.then((res: any): any => {\n        if (res.error?.details?.includes('Results contain 0 rows')) {\n          return onfulfilled({\n            error: null,\n            data: null,\n            count: res.count,\n            status: 200,\n            statusText: 'OK',\n            body: null,\n          })\n        }\n\n        return onfulfilled(res)\n      }, onrejected)) as any\n    return _this as PromiseLike<PostgrestMaybeSingleResponse<T>>\n  }\n\n  /**\n   * Set the response type to CSV.\n   */\n  csv(): PromiseLike<PostgrestSingleResponse<string>> {\n    this.headers['Accept'] = 'text/csv'\n    return this as PromiseLike<PostgrestSingleResponse<string>>\n  }\n}\n","import PostgrestTransformBuilder from './PostgrestTransformBuilder'\n\n/**\n * Filters\n */\n\ntype FilterOperator =\n  | 'eq'\n  | 'neq'\n  | 'gt'\n  | 'gte'\n  | 'lt'\n  | 'lte'\n  | 'like'\n  | 'ilike'\n  | 'is'\n  | 'in'\n  | 'cs'\n  | 'cd'\n  | 'sl'\n  | 'sr'\n  | 'nxl'\n  | 'nxr'\n  | 'adj'\n  | 'ov'\n  | 'fts'\n  | 'plfts'\n  | 'phfts'\n  | 'wfts'\n  | 'not.eq'\n  | 'not.neq'\n  | 'not.gt'\n  | 'not.gte'\n  | 'not.lt'\n  | 'not.lte'\n  | 'not.like'\n  | 'not.ilike'\n  | 'not.is'\n  | 'not.in'\n  | 'not.cs'\n  | 'not.cd'\n  | 'not.sl'\n  | 'not.sr'\n  | 'not.nxl'\n  | 'not.nxr'\n  | 'not.adj'\n  | 'not.ov'\n  | 'not.fts'\n  | 'not.plfts'\n  | 'not.phfts'\n  | 'not.wfts'\n\nexport default class PostgrestFilterBuilder<T> extends PostgrestTransformBuilder<T> {\n  /**\n   * Finds all rows which doesn't satisfy the filter.\n   *\n   * @param column  The column to filter on.\n   * @param operator  The operator to filter with.\n   * @param value  The value to filter with.\n   */\n  not(column: keyof T, operator: FilterOperator, value: any): this {\n    this.url.searchParams.append(`${column}`, `not.${operator}.${value}`)\n    return this\n  }\n\n  /**\n   * Finds all rows satisfying at least one of the filters.\n   *\n   * @param filters  The filters to use, separated by commas.\n   * @param foreignTable  The foreign table to use (if `column` is a foreign column).\n   */\n  or(filters: string, { foreignTable }: { foreignTable?: string } = {}): this {\n    const key = typeof foreignTable === 'undefined' ? 'or' : `${foreignTable}.or`\n    this.url.searchParams.append(key, `(${filters})`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose value on the stated `column` exactly matches the\n   * specified `value`.\n   *\n   * @param column  The column to filter on.\n   * @param value  The value to filter with.\n   */\n  eq(column: keyof T, value: T[keyof T]): this {\n    this.url.searchParams.append(`${column}`, `eq.${value}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose value on the stated `column` doesn't match the\n   * specified `value`.\n   *\n   * @param column  The column to filter on.\n   * @param value  The value to filter with.\n   */\n  neq(column: keyof T, value: T[keyof T]): this {\n    this.url.searchParams.append(`${column}`, `neq.${value}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose value on the stated `column` is greater than the\n   * specified `value`.\n   *\n   * @param column  The column to filter on.\n   * @param value  The value to filter with.\n   */\n  gt(column: keyof T, value: T[keyof T]): this {\n    this.url.searchParams.append(`${column}`, `gt.${value}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose value on the stated `column` is greater than or\n   * equal to the specified `value`.\n   *\n   * @param column  The column to filter on.\n   * @param value  The value to filter with.\n   */\n  gte(column: keyof T, value: T[keyof T]): this {\n    this.url.searchParams.append(`${column}`, `gte.${value}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose value on the stated `column` is less than the\n   * specified `value`.\n   *\n   * @param column  The column to filter on.\n   * @param value  The value to filter with.\n   */\n  lt(column: keyof T, value: T[keyof T]): this {\n    this.url.searchParams.append(`${column}`, `lt.${value}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose value on the stated `column` is less than or equal\n   * to the specified `value`.\n   *\n   * @param column  The column to filter on.\n   * @param value  The value to filter with.\n   */\n  lte(column: keyof T, value: T[keyof T]): this {\n    this.url.searchParams.append(`${column}`, `lte.${value}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose value in the stated `column` matches the supplied\n   * `pattern` (case sensitive).\n   *\n   * @param column  The column to filter on.\n   * @param pattern  The pattern to filter with.\n   */\n  like(column: keyof T, pattern: string): this {\n    this.url.searchParams.append(`${column}`, `like.${pattern}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose value in the stated `column` matches the supplied\n   * `pattern` (case insensitive).\n   *\n   * @param column  The column to filter on.\n   * @param pattern  The pattern to filter with.\n   */\n  ilike(column: keyof T, pattern: string): this {\n    this.url.searchParams.append(`${column}`, `ilike.${pattern}`)\n    return this\n  }\n\n  /**\n   * A check for exact equality (null, true, false), finds all rows whose\n   * value on the stated `column` exactly match the specified `value`.\n   *\n   * @param column  The column to filter on.\n   * @param value  The value to filter with.\n   */\n  is(column: keyof T, value: boolean | null): this {\n    this.url.searchParams.append(`${column}`, `is.${value}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose value on the stated `column` is found on the\n   * specified `values`.\n   *\n   * @param column  The column to filter on.\n   * @param values  The values to filter with.\n   */\n  in(column: keyof T, values: T[keyof T][]): this {\n    const cleanedValues = values\n      .map((s) => {\n        // handle postgrest reserved characters\n        // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n        if (typeof s === 'string' && new RegExp('[,()]').test(s)) return `\"${s}\"`\n        else return `${s}`\n      })\n      .join(',')\n    this.url.searchParams.append(`${column}`, `in.(${cleanedValues})`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose json, array, or range value on the stated `column`\n   * contains the values specified in `value`.\n   *\n   * @param column  The column to filter on.\n   * @param value  The value to filter with.\n   */\n  contains(column: keyof T, value: string | T[keyof T][] | object): this {\n    if (typeof value === 'string') {\n      // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n      // keep it simple and accept a string\n      this.url.searchParams.append(`${column}`, `cs.${value}`)\n    } else if (Array.isArray(value)) {\n      // array\n      this.url.searchParams.append(`${column}`, `cs.{${value.join(',')}}`)\n    } else {\n      // json\n      this.url.searchParams.append(`${column}`, `cs.${JSON.stringify(value)}`)\n    }\n    return this\n  }\n\n  /** @deprecated Use `contains()` instead. */\n  cs = this.contains\n\n  /**\n   * Finds all rows whose json, array, or range value on the stated `column` is\n   * contained by the specified `value`.\n   *\n   * @param column  The column to filter on.\n   * @param value  The value to filter with.\n   */\n  containedBy(column: keyof T, value: string | T[keyof T][] | object): this {\n    if (typeof value === 'string') {\n      // range\n      this.url.searchParams.append(`${column}`, `cd.${value}`)\n    } else if (Array.isArray(value)) {\n      // array\n      this.url.searchParams.append(`${column}`, `cd.{${value.join(',')}}`)\n    } else {\n      // json\n      this.url.searchParams.append(`${column}`, `cd.${JSON.stringify(value)}`)\n    }\n    return this\n  }\n\n  /** @deprecated Use `containedBy()` instead. */\n  cd = this.containedBy\n\n  /**\n   * Finds all rows whose range value on the stated `column` is strictly to the\n   * left of the specified `range`.\n   *\n   * @param column  The column to filter on.\n   * @param range  The range to filter with.\n   */\n  rangeLt(column: keyof T, range: string): this {\n    this.url.searchParams.append(`${column}`, `sl.${range}`)\n    return this\n  }\n\n  /** @deprecated Use `rangeLt()` instead. */\n  sl = this.rangeLt\n\n  /**\n   * Finds all rows whose range value on the stated `column` is strictly to\n   * the right of the specified `range`.\n   *\n   * @param column  The column to filter on.\n   * @param range  The range to filter with.\n   */\n  rangeGt(column: keyof T, range: string): this {\n    this.url.searchParams.append(`${column}`, `sr.${range}`)\n    return this\n  }\n\n  /** @deprecated Use `rangeGt()` instead. */\n  sr = this.rangeGt\n\n  /**\n   * Finds all rows whose range value on the stated `column` does not extend\n   * to the left of the specified `range`.\n   *\n   * @param column  The column to filter on.\n   * @param range  The range to filter with.\n   */\n  rangeGte(column: keyof T, range: string): this {\n    this.url.searchParams.append(`${column}`, `nxl.${range}`)\n    return this\n  }\n\n  /** @deprecated Use `rangeGte()` instead. */\n  nxl = this.rangeGte\n\n  /**\n   * Finds all rows whose range value on the stated `column` does not extend\n   * to the right of the specified `range`.\n   *\n   * @param column  The column to filter on.\n   * @param range  The range to filter with.\n   */\n  rangeLte(column: keyof T, range: string): this {\n    this.url.searchParams.append(`${column}`, `nxr.${range}`)\n    return this\n  }\n\n  /** @deprecated Use `rangeLte()` instead. */\n  nxr = this.rangeLte\n\n  /**\n   * Finds all rows whose range value on the stated `column` is adjacent to\n   * the specified `range`.\n   *\n   * @param column  The column to filter on.\n   * @param range  The range to filter with.\n   */\n  rangeAdjacent(column: keyof T, range: string): this {\n    this.url.searchParams.append(`${column}`, `adj.${range}`)\n    return this\n  }\n\n  /** @deprecated Use `rangeAdjacent()` instead. */\n  adj = this.rangeAdjacent\n\n  /**\n   * Finds all rows whose array or range value on the stated `column` overlaps\n   * (has a value in common) with the specified `value`.\n   *\n   * @param column  The column to filter on.\n   * @param value  The value to filter with.\n   */\n  overlaps(column: keyof T, value: string | T[keyof T][]): this {\n    if (typeof value === 'string') {\n      // range\n      this.url.searchParams.append(`${column}`, `ov.${value}`)\n    } else {\n      // array\n      this.url.searchParams.append(`${column}`, `ov.{${value.join(',')}}`)\n    }\n    return this\n  }\n\n  /** @deprecated Use `overlaps()` instead. */\n  ov = this.overlaps\n\n  /**\n   * Finds all rows whose text or tsvector value on the stated `column` matches\n   * the tsquery in `query`.\n   *\n   * @param column  The column to filter on.\n   * @param query  The Postgres tsquery string to filter with.\n   * @param config  The text search configuration to use.\n   * @param type  The type of tsquery conversion to use on `query`.\n   */\n  textSearch(\n    column: keyof T,\n    query: string,\n    {\n      config,\n      type = null,\n    }: { config?: string; type?: 'plain' | 'phrase' | 'websearch' | null } = {}\n  ): this {\n    let typePart = ''\n    if (type === 'plain') {\n      typePart = 'pl'\n    } else if (type === 'phrase') {\n      typePart = 'ph'\n    } else if (type === 'websearch') {\n      typePart = 'w'\n    }\n    const configPart = config === undefined ? '' : `(${config})`\n    this.url.searchParams.append(`${column}`, `${typePart}fts${configPart}.${query}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose tsvector value on the stated `column` matches\n   * to_tsquery(`query`).\n   *\n   * @param column  The column to filter on.\n   * @param query  The Postgres tsquery string to filter with.\n   * @param config  The text search configuration to use.\n   *\n   * @deprecated Use `textSearch()` instead.\n   */\n  fts(column: keyof T, query: string, { config }: { config?: string } = {}): this {\n    const configPart = typeof config === 'undefined' ? '' : `(${config})`\n    this.url.searchParams.append(`${column}`, `fts${configPart}.${query}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose tsvector value on the stated `column` matches\n   * plainto_tsquery(`query`).\n   *\n   * @param column  The column to filter on.\n   * @param query  The Postgres tsquery string to filter with.\n   * @param config  The text search configuration to use.\n   *\n   * @deprecated Use `textSearch()` with `type: 'plain'` instead.\n   */\n  plfts(column: keyof T, query: string, { config }: { config?: string } = {}): this {\n    const configPart = typeof config === 'undefined' ? '' : `(${config})`\n    this.url.searchParams.append(`${column}`, `plfts${configPart}.${query}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose tsvector value on the stated `column` matches\n   * phraseto_tsquery(`query`).\n   *\n   * @param column  The column to filter on.\n   * @param query  The Postgres tsquery string to filter with.\n   * @param config  The text search configuration to use.\n   *\n   * @deprecated Use `textSearch()` with `type: 'phrase'` instead.\n   */\n  phfts(column: keyof T, query: string, { config }: { config?: string } = {}): this {\n    const configPart = typeof config === 'undefined' ? '' : `(${config})`\n    this.url.searchParams.append(`${column}`, `phfts${configPart}.${query}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose tsvector value on the stated `column` matches\n   * websearch_to_tsquery(`query`).\n   *\n   * @param column  The column to filter on.\n   * @param query  The Postgres tsquery string to filter with.\n   * @param config  The text search configuration to use.\n   *\n   * @deprecated Use `textSearch()` with `type: 'websearch'` instead.\n   */\n  wfts(column: keyof T, query: string, { config }: { config?: string } = {}): this {\n    const configPart = typeof config === 'undefined' ? '' : `(${config})`\n    this.url.searchParams.append(`${column}`, `wfts${configPart}.${query}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose `column` satisfies the filter.\n   *\n   * @param column  The column to filter on.\n   * @param operator  The operator to filter with.\n   * @param value  The value to filter with.\n   */\n  filter(column: keyof T, operator: FilterOperator, value: any): this {\n    this.url.searchParams.append(`${column}`, `${operator}.${value}`)\n    return this\n  }\n\n  /**\n   * Finds all rows whose columns match the specified `query` object.\n   *\n   * @param query  The object to filter with, with column names as keys mapped\n   *               to their filter values.\n   */\n  match(query: Record<string, unknown>): this {\n    Object.keys(query).forEach((key) => {\n      this.url.searchParams.append(`${key}`, `eq.${query[key]}`)\n    })\n    return this\n  }\n}\n","import { Fetch, PostgrestBuilder } from './types'\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder'\n\nexport default class PostgrestQueryBuilder<T> extends PostgrestBuilder<T> {\n  constructor(\n    url: string,\n    {\n      headers = {},\n      schema,\n      fetch,\n      shouldThrowOnError,\n    }: {\n      headers?: { [key: string]: string }\n      schema?: string\n      fetch?: Fetch\n      shouldThrowOnError?: boolean\n    } = {}\n  ) {\n    super(({ fetch, shouldThrowOnError } as unknown) as PostgrestBuilder<T>)\n    this.url = new URL(url)\n    this.headers = { ...headers }\n    this.schema = schema\n  }\n\n  /**\n   * Performs vertical filtering with SELECT.\n   *\n   * @param columns  The columns to retrieve, separated by commas.\n   * @param head  When set to true, select will void data.\n   * @param count  Count algorithm to use to count rows in a table.\n   */\n  select(\n    columns = '*',\n    {\n      head = false,\n      count = null,\n    }: {\n      head?: boolean\n      count?: null | 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<T> {\n    this.method = 'GET'\n    // Remove whitespaces except when quoted\n    let quoted = false\n    const cleanedColumns = columns\n      .split('')\n      .map((c) => {\n        if (/\\s/.test(c) && !quoted) {\n          return ''\n        }\n        if (c === '\"') {\n          quoted = !quoted\n        }\n        return c\n      })\n      .join('')\n    this.url.searchParams.set('select', cleanedColumns)\n    if (count) {\n      this.headers['Prefer'] = `count=${count}`\n    }\n    if (head) {\n      this.method = 'HEAD'\n    }\n    return new PostgrestFilterBuilder(this)\n  }\n\n  /**\n   * Performs an INSERT into the table.\n   *\n   * @param values  The values to insert.\n   * @param returning  By default the new record is returned. Set this to 'minimal' if you don't need this value.\n   * @param count  Count algorithm to use to count rows in a table.\n   */\n  insert(\n    values: Partial<T> | Partial<T>[],\n    options?: {\n      returning?: 'minimal' | 'representation'\n      count?: null | 'exact' | 'planned' | 'estimated'\n    }\n  ): PostgrestFilterBuilder<T>\n  /**\n   * @deprecated Use `upsert()` instead.\n   */\n  insert(\n    values: Partial<T> | Partial<T>[],\n    options?: {\n      upsert?: boolean\n      onConflict?: string\n      returning?: 'minimal' | 'representation'\n      count?: null | 'exact' | 'planned' | 'estimated'\n    }\n  ): PostgrestFilterBuilder<T>\n  insert(\n    values: Partial<T> | Partial<T>[],\n    {\n      upsert = false,\n      onConflict,\n      returning = 'representation',\n      count = null,\n    }: {\n      upsert?: boolean\n      onConflict?: string\n      returning?: 'minimal' | 'representation'\n      count?: null | 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<T> {\n    this.method = 'POST'\n\n    const prefersHeaders = [`return=${returning}`]\n    if (upsert) prefersHeaders.push('resolution=merge-duplicates')\n\n    if (upsert && onConflict !== undefined) this.url.searchParams.set('on_conflict', onConflict)\n    this.body = values\n    if (count) {\n      prefersHeaders.push(`count=${count}`)\n    }\n    if (this.headers['Prefer']) {\n      prefersHeaders.unshift(this.headers['Prefer'])\n    }\n    this.headers['Prefer'] = prefersHeaders.join(',')\n\n    if (Array.isArray(values)) {\n      const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), [] as string[])\n      if (columns.length > 0) {\n        const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`)\n        this.url.searchParams.set('columns', uniqueColumns.join(','))\n      }\n    }\n\n    return new PostgrestFilterBuilder(this)\n  }\n\n  /**\n   * Performs an UPSERT into the table.\n   *\n   * @param values  The values to insert.\n   * @param onConflict  By specifying the `on_conflict` query parameter, you can make UPSERT work on a column(s) that has a UNIQUE constraint.\n   * @param returning  By default the new record is returned. Set this to 'minimal' if you don't need this value.\n   * @param count  Count algorithm to use to count rows in a table.\n   * @param ignoreDuplicates  Specifies if duplicate rows should be ignored and not inserted.\n   */\n  upsert(\n    values: Partial<T> | Partial<T>[],\n    {\n      onConflict,\n      returning = 'representation',\n      count = null,\n      ignoreDuplicates = false,\n    }: {\n      onConflict?: string\n      returning?: 'minimal' | 'representation'\n      count?: null | 'exact' | 'planned' | 'estimated'\n      ignoreDuplicates?: boolean\n    } = {}\n  ): PostgrestFilterBuilder<T> {\n    this.method = 'POST'\n\n    const prefersHeaders = [\n      `resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`,\n      `return=${returning}`,\n    ]\n\n    if (onConflict !== undefined) this.url.searchParams.set('on_conflict', onConflict)\n    this.body = values\n    if (count) {\n      prefersHeaders.push(`count=${count}`)\n    }\n    if (this.headers['Prefer']) {\n      prefersHeaders.unshift(this.headers['Prefer'])\n    }\n    this.headers['Prefer'] = prefersHeaders.join(',')\n\n    return new PostgrestFilterBuilder(this)\n  }\n\n  /**\n   * Performs an UPDATE on the table.\n   *\n   * @param values  The values to update.\n   * @param returning  By default the updated record is returned. Set this to 'minimal' if you don't need this value.\n   * @param count  Count algorithm to use to count rows in a table.\n   */\n  update(\n    values: Partial<T>,\n    {\n      returning = 'representation',\n      count = null,\n    }: {\n      returning?: 'minimal' | 'representation'\n      count?: null | 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<T> {\n    this.method = 'PATCH'\n    const prefersHeaders = [`return=${returning}`]\n    this.body = values\n    if (count) {\n      prefersHeaders.push(`count=${count}`)\n    }\n    if (this.headers['Prefer']) {\n      prefersHeaders.unshift(this.headers['Prefer'])\n    }\n    this.headers['Prefer'] = prefersHeaders.join(',')\n    return new PostgrestFilterBuilder(this)\n  }\n\n  /**\n   * Performs a DELETE on the table.\n   *\n   * @param returning  If `true`, return the deleted row(s) in the response.\n   * @param count  Count algorithm to use to count rows in a table.\n   */\n  delete({\n    returning = 'representation',\n    count = null,\n  }: {\n    returning?: 'minimal' | 'representation'\n    count?: null | 'exact' | 'planned' | 'estimated'\n  } = {}): PostgrestFilterBuilder<T> {\n    this.method = 'DELETE'\n    const prefersHeaders = [`return=${returning}`]\n    if (count) {\n      prefersHeaders.push(`count=${count}`)\n    }\n    if (this.headers['Prefer']) {\n      prefersHeaders.unshift(this.headers['Prefer'])\n    }\n    this.headers['Prefer'] = prefersHeaders.join(',')\n    return new PostgrestFilterBuilder(this)\n  }\n}\n","import { Fetch, PostgrestBuilder } from './types'\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder'\n\nexport default class PostgrestRpcBuilder<T> extends PostgrestBuilder<T> {\n  constructor(\n    url: string,\n    {\n      headers = {},\n      schema,\n      fetch,\n      shouldThrowOnError,\n    }: {\n      headers?: { [key: string]: string }\n      schema?: string\n      fetch?: Fetch\n      shouldThrowOnError?: boolean\n    } = {}\n  ) {\n    super(({ fetch, shouldThrowOnError } as unknown) as PostgrestBuilder<T>)\n    this.url = new URL(url)\n    this.headers = { ...headers }\n    this.schema = schema\n  }\n\n  /**\n   * Perform a function call.\n   */\n  rpc(\n    params?: object,\n    {\n      head = false,\n      count = null,\n    }: {\n      head?: boolean\n      count?: null | 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<T> {\n    if (head) {\n      this.method = 'HEAD'\n\n      if (params) {\n        Object.entries(params).forEach(([name, value]) => {\n          this.url.searchParams.append(name, value)\n        })\n      }\n    } else {\n      this.method = 'POST'\n      this.body = params\n    }\n\n    if (count) {\n      if (this.headers['Prefer'] !== undefined) this.headers['Prefer'] += `,count=${count}`\n      else this.headers['Prefer'] = `count=${count}`\n    }\n\n    return new PostgrestFilterBuilder(this)\n  }\n}\n","// generated by genversion\nexport const version = '0.37.2'\n","import { version } from './version'\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `postgrest-js/${version}` }\n","import PostgrestQueryBuilder from './lib/PostgrestQueryBuilder'\nimport PostgrestRpcBuilder from './lib/PostgrestRpcBuilder'\nimport PostgrestFilterBuilder from './lib/PostgrestFilterBuilder'\nimport { DEFAULT_HEADERS } from './lib/constants'\nimport { Fetch } from './lib/types'\n\nexport default class PostgrestClient {\n  url: string\n  headers: { [key: string]: string }\n  schema?: string\n  fetch?: Fetch\n  shouldThrowOnError?: boolean\n\n  /**\n   * Creates a PostgREST client.\n   *\n   * @param url  URL of the PostgREST endpoint.\n   * @param headers  Custom headers.\n   * @param schema  Postgres schema to switch to.\n   */\n  constructor(\n    url: string,\n    {\n      headers = {},\n      schema,\n      fetch,\n      throwOnError,\n    }: {\n      headers?: { [key: string]: string }\n      schema?: string\n      fetch?: Fetch\n      throwOnError?: boolean\n    } = {}\n  ) {\n    this.url = url\n    this.headers = { ...DEFAULT_HEADERS, ...headers }\n    this.schema = schema\n    this.fetch = fetch\n    this.shouldThrowOnError = throwOnError\n  }\n\n  /**\n   * Authenticates the request with JWT.\n   *\n   * @param token  The JWT token to use.\n   */\n  auth(token: string): this {\n    this.headers['Authorization'] = `Bearer ${token}`\n    return this\n  }\n\n  /**\n   * Perform a table operation.\n   *\n   * @param table  The table name to operate on.\n   */\n  from<T = any>(table: string): PostgrestQueryBuilder<T> {\n    const url = `${this.url}/${table}`\n    return new PostgrestQueryBuilder<T>(url, {\n      headers: this.headers,\n      schema: this.schema,\n      fetch: this.fetch,\n      shouldThrowOnError: this.shouldThrowOnError,\n    })\n  }\n\n  /**\n   * Perform a function call.\n   *\n   * @param fn  The function name to call.\n   * @param params  The parameters to pass to the function call.\n   * @param head  When set to true, no data will be returned.\n   * @param count  Count algorithm to use to count rows in a table.\n   */\n  rpc<T = any>(\n    fn: string,\n    params?: object,\n    {\n      head = false,\n      count = null,\n    }: {\n      head?: boolean\n      count?: null | 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<T> {\n    const url = `${this.url}/rpc/${fn}`\n    return new PostgrestRpcBuilder<T>(url, {\n      headers: this.headers,\n      schema: this.schema,\n      fetch: this.fetch,\n      shouldThrowOnError: this.shouldThrowOnError,\n    }).rpc(params, { head, count })\n  }\n}\n","/**\n * Helpers to convert the change Payload into native JS types.\n */\n\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\n\nexport enum PostgresTypes {\n  abstime = 'abstime',\n  bool = 'bool',\n  date = 'date',\n  daterange = 'daterange',\n  float4 = 'float4',\n  float8 = 'float8',\n  int2 = 'int2',\n  int4 = 'int4',\n  int4range = 'int4range',\n  int8 = 'int8',\n  int8range = 'int8range',\n  json = 'json',\n  jsonb = 'jsonb',\n  money = 'money',\n  numeric = 'numeric',\n  oid = 'oid',\n  reltime = 'reltime',\n  text = 'text',\n  time = 'time',\n  timestamp = 'timestamp',\n  timestamptz = 'timestamptz',\n  timetz = 'timetz',\n  tsrange = 'tsrange',\n  tstzrange = 'tstzrange',\n}\n\ntype Columns = {\n  name: string // the column name. eg: \"user_id\"\n  type: string // the column type. eg: \"uuid\"\n  flags?: string[] // any special flags for the column. eg: [\"key\"]\n  type_modifier?: number // the type modifier. eg: 4294967295\n}[]\n\ntype BaseValue = null | string | number | boolean\ntype RecordValue = BaseValue | BaseValue[]\n\ntype Record = {\n  [key: string]: RecordValue\n}\n\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} record\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */\nexport const convertChangeData = (\n  columns: Columns,\n  record: Record,\n  options: { skipTypes?: string[] } = {}\n): Record => {\n  const skipTypes = options.skipTypes ?? []\n\n  return Object.keys(record).reduce((acc, rec_key) => {\n    acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes)\n    return acc\n  }, {} as Record)\n}\n\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} record The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\n * //=> \"33\"\n */\nexport const convertColumn = (\n  columnName: string,\n  columns: Columns,\n  record: Record,\n  skipTypes: string[]\n): RecordValue => {\n  const column = columns.find((x) => x.name === columnName)\n  const colType = column?.type\n  const value = record[columnName]\n\n  if (colType && !skipTypes.includes(colType)) {\n    return convertCell(colType, value)\n  }\n\n  return noop(value)\n}\n\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} stringValue The cell value\n *\n * @example convertCell('bool', 't')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */\nexport const convertCell = (type: string, value: RecordValue): RecordValue => {\n  // if data type is an array\n  if (type.charAt(0) === '_') {\n    const dataType = type.slice(1, type.length)\n    return toArray(value, dataType)\n  }\n\n  // If not null, convert to correct type.\n  switch (type) {\n    case PostgresTypes.bool:\n      return toBoolean(value)\n    case PostgresTypes.float4:\n    case PostgresTypes.float8:\n    case PostgresTypes.int2:\n    case PostgresTypes.int4:\n    case PostgresTypes.int8:\n    case PostgresTypes.numeric:\n    case PostgresTypes.oid:\n      return toNumber(value)\n    case PostgresTypes.json:\n    case PostgresTypes.jsonb:\n      return toJson(value)\n    case PostgresTypes.timestamp:\n      return toTimestampString(value) // Format to be consistent with PostgREST\n    case PostgresTypes.abstime: // To allow users to cast it based on Timezone\n    case PostgresTypes.date: // To allow users to cast it based on Timezone\n    case PostgresTypes.daterange:\n    case PostgresTypes.int4range:\n    case PostgresTypes.int8range:\n    case PostgresTypes.money:\n    case PostgresTypes.reltime: // To allow users to cast it based on Timezone\n    case PostgresTypes.text:\n    case PostgresTypes.time: // To allow users to cast it based on Timezone\n    case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\n    case PostgresTypes.timetz: // To allow users to cast it based on Timezone\n    case PostgresTypes.tsrange:\n    case PostgresTypes.tstzrange:\n      return noop(value)\n    default:\n      // Return the value for remaining types\n      return noop(value)\n  }\n}\n\nconst noop = (value: RecordValue): RecordValue => {\n  return value\n}\nexport const toBoolean = (value: RecordValue): RecordValue => {\n  switch (value) {\n    case 't':\n      return true\n    case 'f':\n      return false\n    default:\n      return value\n  }\n}\nexport const toNumber = (value: RecordValue): RecordValue => {\n  if (typeof value === 'string') {\n    const parsedValue = parseFloat(value)\n    if (!Number.isNaN(parsedValue)) {\n      return parsedValue\n    }\n  }\n  return value\n}\nexport const toJson = (value: RecordValue): RecordValue => {\n  if (typeof value === 'string') {\n    try {\n      return JSON.parse(value)\n    } catch (error) {\n      console.log(`JSON parse error: ${error}`)\n      return value\n    }\n  }\n  return value\n}\n\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{}', 'int4')\n * //=> []\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\n * @example toArray([1,2,3,4], 'int4')\n * //=> [1,2,3,4]\n */\nexport const toArray = (value: RecordValue, type: string): RecordValue => {\n  if (typeof value !== 'string') {\n    return value\n  }\n\n  const lastIdx = value.length - 1\n  const closeBrace = value[lastIdx]\n  const openBrace = value[0]\n\n  // Confirm value is a Postgres array by checking curly brackets\n  if (openBrace === '{' && closeBrace === '}') {\n    let arr\n    const valTrim = value.slice(1, lastIdx)\n\n    // TODO: find a better solution to separate Postgres array data\n    try {\n      arr = JSON.parse('[' + valTrim + ']')\n    } catch (_) {\n      // WARNING: splitting on comma does not cover all edge cases\n      arr = valTrim ? valTrim.split(',') : []\n    }\n\n    return arr.map((val: BaseValue) => convertCell(type, val))\n  }\n\n  return value\n}\n\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */\nexport const toTimestampString = (value: RecordValue): RecordValue => {\n  if (typeof value === 'string') {\n    return value.replace(' ', 'T')\n  }\n\n  return value\n}\n","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n","export const version = '1.6.2'\n","import { version } from './version'\n\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `realtime-js/${version}` }\n\nexport const VSN: string = '1.0.0'\n\nexport const DEFAULT_TIMEOUT = 10000\n\nexport const WS_CLOSE_NORMAL = 1000\n\nexport enum SOCKET_STATES {\n  connecting = 0,\n  open = 1,\n  closing = 2,\n  closed = 3,\n}\n\nexport enum CHANNEL_STATES {\n  closed = 'closed',\n  errored = 'errored',\n  joined = 'joined',\n  joining = 'joining',\n  leaving = 'leaving',\n}\n\nexport enum CHANNEL_EVENTS {\n  close = 'phx_close',\n  error = 'phx_error',\n  join = 'phx_join',\n  reply = 'phx_reply',\n  leave = 'phx_leave',\n  access_token = 'access_token',\n}\n\nexport enum TRANSPORTS {\n  websocket = 'websocket',\n}\n","/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nexport default class Timer {\n  timer: number | undefined = undefined\n  tries: number = 0\n\n  constructor(public callback: Function, public timerCalc: Function) {\n    this.callback = callback\n    this.timerCalc = timerCalc\n  }\n\n  reset() {\n    this.tries = 0\n    clearTimeout(this.timer)\n  }\n\n  // Cancels any previous scheduleTimeout and schedules callback\n  scheduleTimeout() {\n    clearTimeout(this.timer)\n\n    this.timer = <any>setTimeout(() => {\n      this.tries = this.tries + 1\n      this.callback()\n    }, this.timerCalc(this.tries + 1))\n  }\n}\n","// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\n\nexport default class Serializer {\n  HEADER_LENGTH = 1\n\n  decode(rawPayload: ArrayBuffer | string, callback: Function) {\n    if (rawPayload.constructor === ArrayBuffer) {\n      return callback(this._binaryDecode(rawPayload))\n    }\n\n    if (typeof rawPayload === 'string') {\n      return callback(JSON.parse(rawPayload))\n    }\n\n    return callback({})\n  }\n\n  private _binaryDecode(buffer: ArrayBuffer) {\n    const view = new DataView(buffer)\n    const decoder = new TextDecoder()\n\n    return this._decodeBroadcast(buffer, view, decoder)\n  }\n\n  private _decodeBroadcast(\n    buffer: ArrayBuffer,\n    view: DataView,\n    decoder: TextDecoder\n  ): {\n    ref: null\n    topic: string\n    event: string\n    payload: object\n  } {\n    const topicSize = view.getUint8(1)\n    const eventSize = view.getUint8(2)\n    let offset = this.HEADER_LENGTH + 2\n    const topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    const event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    const data = JSON.parse(\n      decoder.decode(buffer.slice(offset, buffer.byteLength))\n    )\n\n    return { ref: null, topic: topic, event: event, payload: data }\n  }\n}\n","import { DEFAULT_TIMEOUT } from '../lib/constants'\nimport RealtimeChannel from '../RealtimeChannel'\nimport RealtimeSubscription from '../RealtimeSubscription'\n\nexport default class Push {\n  sent: boolean = false\n  timeoutTimer: number | undefined = undefined\n  ref: string = ''\n  receivedResp: {\n    status: string\n    response: Function\n  } | null = null\n  recHooks: {\n    status: string\n    callback: Function\n  }[] = []\n  refEvent: string | null = null\n\n  /**\n   * Initializes the Push\n   *\n   * @param channel The Channel\n   * @param event The event, for example `\"phx_join\"`\n   * @param payload The payload, for example `{user_id: 123}`\n   * @param timeout The push timeout in milliseconds\n   */\n  constructor(\n    public channel: RealtimeSubscription | RealtimeChannel,\n    public event: string,\n    public payload: { [key: string]: unknown } = {},\n    public timeout: number = DEFAULT_TIMEOUT\n  ) {}\n\n  resend(timeout: number) {\n    this.timeout = timeout\n    this._cancelRefEvent()\n    this.ref = ''\n    this.refEvent = null\n    this.receivedResp = null\n    this.sent = false\n    this.send()\n  }\n\n  send() {\n    if (this._hasReceived('timeout')) {\n      return\n    }\n    this.startTimeout()\n    this.sent = true\n    this.channel.socket.push({\n      topic: this.channel.topic,\n      event: this.event,\n      payload: this.payload,\n      ref: this.ref,\n    })\n  }\n\n  updatePayload(payload: { [key: string]: unknown }): void {\n    this.payload = { ...this.payload, ...payload }\n  }\n\n  receive(status: string, callback: Function) {\n    if (this._hasReceived(status)) {\n      callback(this.receivedResp?.response)\n    }\n\n    this.recHooks.push({ status, callback })\n    return this\n  }\n\n  startTimeout() {\n    if (this.timeoutTimer) {\n      return\n    }\n    this.ref = this.channel.socket.makeRef()\n    this.refEvent = this.channel.replyEventName(this.ref)\n\n    const callback = (payload: any) => {\n      this._cancelRefEvent()\n      this._cancelTimeout()\n      this.receivedResp = payload\n      this._matchReceive(payload)\n    }\n\n    if (this.channel instanceof RealtimeSubscription) {\n      this.channel.on(this.refEvent, callback)\n    } else {\n      this.channel.on(this.refEvent, {}, callback)\n    }\n\n    this.timeoutTimer = <any>setTimeout(() => {\n      this.trigger('timeout', {})\n    }, this.timeout)\n  }\n\n  trigger(status: string, response: any) {\n    if (this.refEvent) this.channel.trigger(this.refEvent, { status, response })\n  }\n\n  destroy() {\n    this._cancelRefEvent()\n    this._cancelTimeout()\n  }\n\n  private _cancelRefEvent() {\n    if (!this.refEvent) {\n      return\n    }\n\n    if (this.channel instanceof RealtimeSubscription) {\n      this.channel.off(this.refEvent)\n    } else {\n      this.channel.off(this.refEvent, {})\n    }\n  }\n\n  private _cancelTimeout() {\n    clearTimeout(this.timeoutTimer)\n    this.timeoutTimer = undefined\n  }\n\n  private _matchReceive({\n    status,\n    response,\n  }: {\n    status: string\n    response: Function\n  }) {\n    this.recHooks\n      .filter((h) => h.status === status)\n      .forEach((h) => h.callback(response))\n  }\n\n  private _hasReceived(status: string) {\n    return this.receivedResp && this.receivedResp.status === status\n  }\n}\n","import { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants'\nimport Push from './lib/push'\nimport RealtimeClient from './RealtimeClient'\nimport Timer from './lib/timer'\n\nexport default class RealtimeSubscription {\n  bindings: any[] = []\n  timeout: number\n  state = CHANNEL_STATES.closed\n  joinedOnce = false\n  joinPush: Push\n  rejoinTimer: Timer\n  pushBuffer: Push[] = []\n\n  constructor(\n    public topic: string,\n    public params: { [key: string]: unknown } = {},\n    public socket: RealtimeClient\n  ) {\n    this.timeout = this.socket.timeout\n    this.joinPush = new Push(\n      this,\n      CHANNEL_EVENTS.join,\n      this.params,\n      this.timeout\n    )\n    this.rejoinTimer = new Timer(\n      () => this.rejoinUntilConnected(),\n      this.socket.reconnectAfterMs\n    )\n    this.joinPush.receive('ok', () => {\n      this.state = CHANNEL_STATES.joined\n      this.rejoinTimer.reset()\n      this.pushBuffer.forEach((pushEvent: Push) => pushEvent.send())\n      this.pushBuffer = []\n    })\n    this.onClose(() => {\n      this.rejoinTimer.reset()\n      this.socket.log('channel', `close ${this.topic} ${this.joinRef()}`)\n      this.state = CHANNEL_STATES.closed\n      this.socket.remove(this)\n    })\n    this.onError((reason: string) => {\n      if (this.isLeaving() || this.isClosed()) {\n        return\n      }\n      this.socket.log('channel', `error ${this.topic}`, reason)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this.joinPush.receive('timeout', () => {\n      if (!this.isJoining()) {\n        return\n      }\n      this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this.on(CHANNEL_EVENTS.reply, (payload: any, ref: string) => {\n      this.trigger(this.replyEventName(ref), payload)\n    })\n  }\n\n  rejoinUntilConnected() {\n    this.rejoinTimer.scheduleTimeout()\n    if (this.socket.isConnected()) {\n      this.rejoin()\n    }\n  }\n\n  subscribe(timeout = this.timeout) {\n    if (this.joinedOnce) {\n      throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`\n    } else {\n      this.joinedOnce = true\n      this.rejoin(timeout)\n      return this.joinPush\n    }\n  }\n\n  onClose(callback: Function) {\n    this.on(CHANNEL_EVENTS.close, callback)\n  }\n\n  onError(callback: Function) {\n    this.on(CHANNEL_EVENTS.error, (reason: string) => callback(reason))\n  }\n\n  on(event: string, callback: Function) {\n    this.bindings.push({ event, callback })\n  }\n\n  off(event: string) {\n    this.bindings = this.bindings.filter((bind) => bind.event !== event)\n  }\n\n  canPush() {\n    return this.socket.isConnected() && this.isJoined()\n  }\n\n  push(event: CHANNEL_EVENTS, payload: any, timeout = this.timeout) {\n    if (!this.joinedOnce) {\n      throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`\n    }\n    let pushEvent = new Push(this, event, payload, timeout)\n    if (this.canPush()) {\n      pushEvent.send()\n    } else {\n      pushEvent.startTimeout()\n      this.pushBuffer.push(pushEvent)\n    }\n\n    return pushEvent\n  }\n\n  updateJoinPayload(payload: { [key: string]: unknown }): void {\n    this.joinPush.updatePayload(payload)\n  }\n\n  /**\n   * Leaves the channel\n   *\n   * Unsubscribes from server events, and instructs channel to terminate on server.\n   * Triggers onClose() hooks.\n   *\n   * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n   * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n   */\n  unsubscribe(timeout = this.timeout) {\n    this.state = CHANNEL_STATES.leaving\n    let onClose = () => {\n      this.socket.log('channel', `leave ${this.topic}`)\n      this.trigger(CHANNEL_EVENTS.close, 'leave', this.joinRef())\n    }\n    // Destroy joinPush to avoid connection timeouts during unscription phase\n    this.joinPush.destroy()\n\n    let leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout)\n    leavePush.receive('ok', () => onClose()).receive('timeout', () => onClose())\n    leavePush.send()\n    if (!this.canPush()) {\n      leavePush.trigger('ok', {})\n    }\n\n    return leavePush\n  }\n\n  /**\n   * Overridable message hook\n   *\n   * Receives all events for specialized message handling before dispatching to the channel callbacks.\n   * Must return the payload, modified or unmodified.\n   */\n  onMessage(event: string, payload: any, ref?: string) {\n    return payload\n  }\n\n  isMember(topic: string) {\n    return this.topic === topic\n  }\n\n  joinRef() {\n    return this.joinPush.ref\n  }\n\n  rejoin(timeout = this.timeout) {\n    if (this.isLeaving()) {\n      return\n    }\n    this.socket.leaveOpenTopic(this.topic)\n    this.state = CHANNEL_STATES.joining\n    this.joinPush.resend(timeout)\n  }\n\n  trigger(event: string, payload?: any, ref?: string) {\n    let { close, error, leave, join } = CHANNEL_EVENTS\n    let events: string[] = [close, error, leave, join]\n    if (ref && events.indexOf(event) >= 0 && ref !== this.joinRef()) {\n      return\n    }\n    let handledPayload = this.onMessage(event, payload, ref)\n    if (payload && !handledPayload) {\n      throw 'channel onMessage callbacks must return the payload, modified or unmodified'\n    }\n\n    this.bindings\n      .filter((bind) => {\n        // Bind all events if the user specifies a wildcard.\n        if (bind.event === '*') {\n          return event === payload?.type\n        } else {\n          return bind.event === event\n        }\n      })\n      .map((bind) => bind.callback(handledPayload, ref))\n  }\n\n  replyEventName(ref: string) {\n    return `chan_reply_${ref}`\n  }\n\n  isClosed() {\n    return this.state === CHANNEL_STATES.closed\n  }\n  isErrored() {\n    return this.state === CHANNEL_STATES.errored\n  }\n  isJoined() {\n    return this.state === CHANNEL_STATES.joined\n  }\n  isJoining() {\n    return this.state === CHANNEL_STATES.joining\n  }\n  isLeaving() {\n    return this.state === CHANNEL_STATES.leaving\n  }\n}\n","/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/\n\nimport {\n  PresenceOpts,\n  PresenceOnJoinCallback,\n  PresenceOnLeaveCallback,\n} from 'phoenix'\nimport RealtimeChannel from './RealtimeChannel'\n\ntype Presence = {\n  presence_id: string\n  [key: string]: any\n}\n\ntype PresenceState = { [key: string]: Presence[] }\n\ntype PresenceDiff = {\n  joins: PresenceState\n  leaves: PresenceState\n}\n\ntype RawPresenceState = {\n  [key: string]: Record<\n    'metas',\n    {\n      phx_ref?: string\n      phx_ref_prev?: string\n      [key: string]: any\n    }[]\n  >\n}\n\ntype RawPresenceDiff = {\n  joins: RawPresenceState\n  leaves: RawPresenceState\n}\n\ntype PresenceChooser<T> = (key: string, presences: any) => T\n\nexport default class RealtimePresence {\n  state: PresenceState = {}\n  pendingDiffs: RawPresenceDiff[] = []\n  joinRef: string | null = null\n  caller: {\n    onJoin: PresenceOnJoinCallback\n    onLeave: PresenceOnLeaveCallback\n    onSync: () => void\n  } = {\n    onJoin: () => {},\n    onLeave: () => {},\n    onSync: () => {},\n  }\n\n  /**\n   * Initializes the Presence\n   * @param channel - The RealtimeSubscription\n   * @param opts - The options,\n   *        for example `{events: {state: 'state', diff: 'diff'}}`\n   */\n  constructor(public channel: RealtimeChannel, opts?: PresenceOpts) {\n    const events = opts?.events || {\n      state: 'presence_state',\n      diff: 'presence_diff',\n    }\n\n    this.channel.on(events.state, {}, (newState: RawPresenceState) => {\n      const { onJoin, onLeave, onSync } = this.caller\n\n      this.joinRef = this.channel.joinRef()\n\n      this.state = RealtimePresence.syncState(\n        this.state,\n        newState,\n        onJoin,\n        onLeave\n      )\n\n      this.pendingDiffs.forEach((diff) => {\n        this.state = RealtimePresence.syncDiff(\n          this.state,\n          diff,\n          onJoin,\n          onLeave\n        )\n      })\n\n      this.pendingDiffs = []\n\n      onSync()\n    })\n\n    this.channel.on(events.diff, {}, (diff: RawPresenceDiff) => {\n      const { onJoin, onLeave, onSync } = this.caller\n\n      if (this.inPendingSyncState()) {\n        this.pendingDiffs.push(diff)\n      } else {\n        this.state = RealtimePresence.syncDiff(\n          this.state,\n          diff,\n          onJoin,\n          onLeave\n        )\n\n        onSync()\n      }\n    })\n  }\n\n  /**\n   * Used to sync the list of presences on the server\n   * with the client's state. An optional `onJoin` and `onLeave` callback can\n   * be provided to react to changes in the client's local presences across\n   * disconnects and reconnects with the server.\n   */\n  static syncState(\n    currentState: PresenceState,\n    newState: RawPresenceState | PresenceState,\n    onJoin: PresenceOnJoinCallback,\n    onLeave: PresenceOnLeaveCallback\n  ): PresenceState {\n    const state = this.cloneDeep(currentState)\n    const transformedState = this.transformState(newState)\n    const joins: PresenceState = {}\n    const leaves: PresenceState = {}\n\n    this.map(state, (key: string, presences: Presence[]) => {\n      if (!transformedState[key]) {\n        leaves[key] = presences\n      }\n    })\n\n    this.map(transformedState, (key, newPresences: Presence[]) => {\n      const currentPresences: Presence[] = state[key]\n\n      if (currentPresences) {\n        const newPresenceIds = newPresences.map((m: Presence) => m.presence_id)\n        const curPresenceIds = currentPresences.map(\n          (m: Presence) => m.presence_id\n        )\n        const joinedPresences: Presence[] = newPresences.filter(\n          (m: Presence) => curPresenceIds.indexOf(m.presence_id) < 0\n        )\n        const leftPresences: Presence[] = currentPresences.filter(\n          (m: Presence) => newPresenceIds.indexOf(m.presence_id) < 0\n        )\n\n        if (joinedPresences.length > 0) {\n          joins[key] = joinedPresences\n        }\n\n        if (leftPresences.length > 0) {\n          leaves[key] = leftPresences\n        }\n      } else {\n        joins[key] = newPresences\n      }\n    })\n\n    return this.syncDiff(state, { joins, leaves }, onJoin, onLeave)\n  }\n\n  /**\n   *\n   * Used to sync a diff of presence join and leave\n   * events from the server, as they happen. Like `syncState`, `syncDiff`\n   * accepts optional `onJoin` and `onLeave` callbacks to react to a user\n   * joining or leaving from a device.\n   */\n  static syncDiff(\n    state: PresenceState,\n    diff: RawPresenceDiff | PresenceDiff,\n    onJoin: PresenceOnJoinCallback,\n    onLeave: PresenceOnLeaveCallback\n  ): PresenceState {\n    const { joins, leaves } = {\n      joins: this.transformState(diff.joins),\n      leaves: this.transformState(diff.leaves),\n    }\n\n    if (!onJoin) {\n      onJoin = () => {}\n    }\n\n    if (!onLeave) {\n      onLeave = () => {}\n    }\n\n    this.map(joins, (key, newPresences: Presence[]) => {\n      const currentPresences: Presence[] = state[key]\n      state[key] = this.cloneDeep(newPresences)\n\n      if (currentPresences) {\n        const joinedPresenceIds = state[key].map((m: Presence) => m.presence_id)\n        const curPresences: Presence[] = currentPresences.filter(\n          (m: Presence) => joinedPresenceIds.indexOf(m.presence_id) < 0\n        )\n\n        state[key].unshift(...curPresences)\n      }\n\n      onJoin(key, currentPresences, newPresences)\n    })\n\n    this.map(leaves, (key, leftPresences: Presence[]) => {\n      let currentPresences: Presence[] = state[key]\n\n      if (!currentPresences) return\n\n      const presenceIdsToRemove = leftPresences.map(\n        (m: Presence) => m.presence_id\n      )\n      currentPresences = currentPresences.filter(\n        (m: Presence) => presenceIdsToRemove.indexOf(m.presence_id) < 0\n      )\n\n      state[key] = currentPresences\n\n      onLeave(key, currentPresences, leftPresences)\n\n      if (currentPresences.length === 0) delete state[key]\n    })\n\n    return state\n  }\n\n  /**\n   * Returns the array of presences, with selected metadata.\n   */\n  static list<T = any>(\n    presences: PresenceState,\n    chooser: PresenceChooser<T> | undefined\n  ): T[] {\n    if (!chooser) {\n      chooser = (_key, pres) => pres\n    }\n\n    return this.map(presences, (key, presences: Presence[]) =>\n      chooser!(key, presences)\n    )\n  }\n\n  private static map<T = any>(\n    obj: PresenceState,\n    func: PresenceChooser<T>\n  ): T[] {\n    return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]))\n  }\n\n  /**\n   * Remove 'metas' key\n   * Change 'phx_ref' to 'presence_id'\n   * Remove 'phx_ref' and 'phx_ref_prev'\n   *\n   * @example\n   * // returns {\n   *  abc123: [\n   *    { presence_id: '2', user_id: 1 },\n   *    { presence_id: '3', user_id: 2 }\n   *  ]\n   * }\n   * RealtimePresence.transformState({\n   *  abc123: {\n   *    metas: [\n   *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n   *      { phx_ref: '3', user_id: 2 }\n   *    ]\n   *  }\n   * })\n   */\n  private static transformState(\n    state: RawPresenceState | PresenceState\n  ): PresenceState {\n    state = this.cloneDeep(state)\n\n    return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n      const presences = state[key]\n\n      if ('metas' in presences) {\n        newState[key] = presences.metas.map((presence) => {\n          presence['presence_id'] = presence['phx_ref']\n\n          delete presence['phx_ref']\n          delete presence['phx_ref_prev']\n\n          return presence\n        }) as Presence[]\n      } else {\n        newState[key] = presences\n      }\n\n      return newState\n    }, {} as PresenceState)\n  }\n\n  private static cloneDeep(obj: object) {\n    return JSON.parse(JSON.stringify(obj))\n  }\n\n  onJoin(callback: PresenceOnJoinCallback): void {\n    this.caller.onJoin = callback\n  }\n\n  onLeave(callback: PresenceOnLeaveCallback): void {\n    this.caller.onLeave = callback\n  }\n\n  onSync(callback: () => void): void {\n    this.caller.onSync = callback\n  }\n\n  list<T = any>(by?: PresenceChooser<T>): T[] {\n    return RealtimePresence.list<T>(this.state, by)\n  }\n\n  private inPendingSyncState(): boolean {\n    return !this.joinRef || this.joinRef !== this.channel.joinRef()\n  }\n}\n","import { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants'\nimport Push from './lib/push'\nimport RealtimeClient from './RealtimeClient'\nimport Timer from './lib/timer'\nimport RealtimePresence from './RealtimePresence'\n\nexport default class RealtimeChannel {\n  bindings: any[] = []\n  timeout: number\n  state = CHANNEL_STATES.closed\n  joinedOnce = false\n  joinPush: Push\n  rejoinTimer: Timer\n  pushBuffer: Push[] = []\n  presence: RealtimePresence\n\n  constructor(\n    public topic: string,\n    public params: { [key: string]: unknown } = {},\n    public socket: RealtimeClient\n  ) {\n    this.timeout = this.socket.timeout\n    this.joinPush = new Push(\n      this,\n      CHANNEL_EVENTS.join,\n      this.params,\n      this.timeout\n    )\n    this.rejoinTimer = new Timer(\n      () => this.rejoinUntilConnected(),\n      this.socket.reconnectAfterMs\n    )\n    this.joinPush.receive('ok', () => {\n      this.state = CHANNEL_STATES.joined\n      this.rejoinTimer.reset()\n      this.pushBuffer.forEach((pushEvent: Push) => pushEvent.send())\n      this.pushBuffer = []\n    })\n    this.onClose(() => {\n      this.rejoinTimer.reset()\n      this.socket.log('channel', `close ${this.topic} ${this.joinRef()}`)\n      this.state = CHANNEL_STATES.closed\n      this.socket.remove(this)\n    })\n    this.onError((reason: string) => {\n      if (this.isLeaving() || this.isClosed()) {\n        return\n      }\n      this.socket.log('channel', `error ${this.topic}`, reason)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this.joinPush.receive('timeout', () => {\n      if (!this.isJoining()) {\n        return\n      }\n      this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this.on(CHANNEL_EVENTS.reply, {}, (payload: any, ref: string) => {\n      this.trigger(this.replyEventName(ref), payload)\n    })\n    this.presence = new RealtimePresence(this)\n  }\n\n  list() {\n    return this.presence.list()\n  }\n\n  rejoinUntilConnected() {\n    this.rejoinTimer.scheduleTimeout()\n    if (this.socket.isConnected()) {\n      this.rejoin()\n    }\n  }\n\n  subscribe(timeout = this.timeout) {\n    if (this.joinedOnce) {\n      throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`\n    } else {\n      const configs = this.bindings.reduce(\n        (acc, binding: { [key: string]: any }) => {\n          const { type } = binding\n          if (\n            ![\n              'phx_close',\n              'phx_error',\n              'phx_reply',\n              'presence_diff',\n              'presence_state',\n            ].includes(type)\n          ) {\n            acc[type] = binding\n          }\n          return acc\n        },\n        {}\n      )\n\n      if (Object.keys(configs).length) {\n        this.updateJoinPayload({ configs })\n      }\n\n      this.joinedOnce = true\n      this.rejoin(timeout)\n      return this.joinPush\n    }\n  }\n\n  onClose(callback: Function) {\n    this.on(CHANNEL_EVENTS.close, {}, callback)\n  }\n\n  onError(callback: Function) {\n    this.on(CHANNEL_EVENTS.error, {}, (reason: string) => callback(reason))\n  }\n\n  on(\n    type: string,\n    eventFilter?: { [key: string]: string },\n    callback?: Function\n  ) {\n    this.bindings.push({\n      type,\n      eventFilter: eventFilter ?? {},\n      callback: callback ?? (() => {}),\n    })\n  }\n\n  off(type: string, eventFilter: { [key: string]: any }) {\n    this.bindings = this.bindings.filter((bind) => {\n      return !(\n        bind.type === type &&\n        RealtimeChannel.isEqual(bind.eventFilter, eventFilter)\n      )\n    })\n  }\n\n  canPush() {\n    return this.socket.isConnected() && this.isJoined()\n  }\n\n  push(event: CHANNEL_EVENTS, payload: any, timeout = this.timeout) {\n    if (!this.joinedOnce) {\n      throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`\n    }\n    let pushEvent = new Push(this, event, payload, timeout)\n    if (this.canPush()) {\n      pushEvent.send()\n    } else {\n      pushEvent.startTimeout()\n      this.pushBuffer.push(pushEvent)\n    }\n\n    return pushEvent\n  }\n\n  updateJoinPayload(payload: { [key: string]: unknown }): void {\n    this.joinPush.updatePayload(payload)\n  }\n\n  /**\n   * Leaves the channel\n   *\n   * Unsubscribes from server events, and instructs channel to terminate on server.\n   * Triggers onClose() hooks.\n   *\n   * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n   * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n   */\n  unsubscribe(timeout = this.timeout) {\n    this.state = CHANNEL_STATES.leaving\n    let onClose = () => {\n      this.socket.log('channel', `leave ${this.topic}`)\n      this.trigger(CHANNEL_EVENTS.close, 'leave', this.joinRef())\n    }\n    // Destroy joinPush to avoid connection timeouts during unscription phase\n    this.joinPush.destroy()\n\n    let leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout)\n    leavePush.receive('ok', () => onClose()).receive('timeout', () => onClose())\n    leavePush.send()\n    if (!this.canPush()) {\n      leavePush.trigger('ok', {})\n    }\n\n    return leavePush\n  }\n\n  /**\n   * Overridable message hook\n   *\n   * Receives all events for specialized message handling before dispatching to the channel callbacks.\n   * Must return the payload, modified or unmodified.\n   */\n  onMessage(event: string, payload: any, ref?: string) {\n    return payload\n  }\n\n  isMember(topic: string) {\n    return this.topic === topic\n  }\n\n  joinRef() {\n    return this.joinPush.ref\n  }\n\n  rejoin(timeout = this.timeout) {\n    if (this.isLeaving()) {\n      return\n    }\n    this.socket.leaveOpenTopic(this.topic)\n    this.state = CHANNEL_STATES.joining\n    this.joinPush.resend(timeout)\n  }\n\n  trigger(type: string, payload?: any, ref?: string) {\n    const { close, error, leave, join } = CHANNEL_EVENTS\n    const events: string[] = [close, error, leave, join]\n    if (ref && events.indexOf(type) >= 0 && ref !== this.joinRef()) {\n      return\n    }\n    const handledPayload = this.onMessage(type, payload, ref)\n    if (payload && !handledPayload) {\n      throw 'channel onMessage callbacks must return the payload, modified or unmodified'\n    }\n\n    this.bindings\n      .filter((bind) => {\n        return (\n          bind?.type === type &&\n          (bind?.eventFilter?.event === '*' ||\n            bind?.eventFilter?.event === payload?.event)\n        )\n      })\n      .map((bind) => bind.callback(handledPayload, ref))\n  }\n\n  send(payload: { type: string; [key: string]: any }) {\n    const push = this.push(payload.type as any, payload)\n\n    return new Promise((resolve, reject) => {\n      push.receive('ok', () => resolve('ok'))\n      push.receive('timeout', () => reject('timeout'))\n    })\n  }\n\n  replyEventName(ref: string) {\n    return `chan_reply_${ref}`\n  }\n\n  isClosed() {\n    return this.state === CHANNEL_STATES.closed\n  }\n  isErrored() {\n    return this.state === CHANNEL_STATES.errored\n  }\n  isJoined() {\n    return this.state === CHANNEL_STATES.joined\n  }\n  isJoining() {\n    return this.state === CHANNEL_STATES.joining\n  }\n  isLeaving() {\n    return this.state === CHANNEL_STATES.leaving\n  }\n\n  private static isEqual(\n    obj1: { [key: string]: string },\n    obj2: { [key: string]: string }\n  ) {\n    if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n      return false\n    }\n\n    for (const k in obj1) {\n      if (obj1[k] !== obj2[k]) {\n        return false\n      }\n    }\n\n    return true\n  }\n}\n","import { w3cwebsocket } from 'websocket'\nimport {\n  VSN,\n  CHANNEL_EVENTS,\n  TRANSPORTS,\n  SOCKET_STATES,\n  DEFAULT_TIMEOUT,\n  WS_CLOSE_NORMAL,\n  DEFAULT_HEADERS,\n} from './lib/constants'\nimport Timer from './lib/timer'\nimport Serializer from './lib/serializer'\nimport RealtimeSubscription from './RealtimeSubscription'\nimport RealtimeChannel from './RealtimeChannel'\n\nexport type Options = {\n  transport?: WebSocket\n  timeout?: number\n  heartbeatIntervalMs?: number\n  longpollerTimeout?: number\n  logger?: Function\n  encode?: Function\n  decode?: Function\n  reconnectAfterMs?: Function\n  headers?: { [key: string]: string }\n  params?: { [key: string]: string }\n}\ntype Message = {\n  topic: string\n  event: string\n  payload: any\n  ref: string\n}\n\nconst noop = () => {}\n\nexport default class RealtimeClient {\n  accessToken: string | null = null\n  channels: (RealtimeSubscription | RealtimeChannel)[] = []\n  endPoint: string = ''\n  headers?: { [key: string]: string } = DEFAULT_HEADERS\n  params?: { [key: string]: string } = {}\n  timeout: number = DEFAULT_TIMEOUT\n  transport: any = w3cwebsocket\n  heartbeatIntervalMs: number = 30000\n  longpollerTimeout: number = 20000\n  heartbeatTimer: ReturnType<typeof setInterval> | undefined = undefined\n  pendingHeartbeatRef: string | null = null\n  ref: number = 0\n  reconnectTimer: Timer\n  logger: Function = noop\n  encode: Function\n  decode: Function\n  reconnectAfterMs: Function\n  conn: WebSocket | null = null\n  sendBuffer: Function[] = []\n  serializer: Serializer = new Serializer()\n  stateChangeCallbacks: {\n    open: Function[]\n    close: Function[]\n    error: Function[]\n    message: Function[]\n  } = {\n    open: [],\n    close: [],\n    error: [],\n    message: [],\n  }\n\n  /**\n   * Initializes the Socket\n   *\n   * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n   * @param options.transport The Websocket Transport, for example WebSocket.\n   * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n   * @param options.params The optional params to pass when connecting.\n   * @param options.headers The optional headers to pass when connecting.\n   * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n   * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n   * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n   * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n   * @param options.longpollerTimeout The maximum timeout of a long poll AJAX request. Defaults to 20s (double the server long poll timer).\n   * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n   */\n  constructor(endPoint: string, options?: Options) {\n    this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`\n\n    if (options?.params) this.params = options.params\n    if (options?.headers) this.headers = { ...this.headers, ...options.headers }\n    if (options?.timeout) this.timeout = options.timeout\n    if (options?.logger) this.logger = options.logger\n    if (options?.transport) this.transport = options.transport\n    if (options?.heartbeatIntervalMs)\n      this.heartbeatIntervalMs = options.heartbeatIntervalMs\n    if (options?.longpollerTimeout)\n      this.longpollerTimeout = options.longpollerTimeout\n\n    this.reconnectAfterMs = options?.reconnectAfterMs\n      ? options.reconnectAfterMs\n      : (tries: number) => {\n          return [1000, 2000, 5000, 10000][tries - 1] || 10000\n        }\n    this.encode = options?.encode\n      ? options.encode\n      : (payload: JSON, callback: Function) => {\n          return callback(JSON.stringify(payload))\n        }\n    this.decode = options?.decode\n      ? options.decode\n      : this.serializer.decode.bind(this.serializer)\n    this.reconnectTimer = new Timer(async () => {\n      await this.disconnect()\n      this.connect()\n    }, this.reconnectAfterMs)\n  }\n\n  /**\n   * Connects the socket.\n   */\n  connect() {\n    if (this.conn) {\n      return\n    }\n\n    this.conn = new this.transport(this.endPointURL(), [], null, this.headers)\n    if (this.conn) {\n      // this.conn.timeout = this.longpollerTimeout // TYPE ERROR\n      this.conn.binaryType = 'arraybuffer'\n      this.conn.onopen = () => this._onConnOpen()\n      this.conn.onerror = (error) => this._onConnError(error as ErrorEvent)\n      this.conn.onmessage = (event) => this.onConnMessage(event)\n      this.conn.onclose = (event) => this._onConnClose(event)\n    }\n  }\n\n  /**\n   * Disconnects the socket.\n   *\n   * @param code A numeric status code to send on disconnect.\n   * @param reason A custom reason for the disconnect.\n   */\n  disconnect(\n    code?: number,\n    reason?: string\n  ): Promise<{ error: Error | null; data: boolean }> {\n    return new Promise((resolve, _reject) => {\n      try {\n        if (this.conn) {\n          this.conn.onclose = function () {} // noop\n          if (code) {\n            this.conn.close(code, reason || '')\n          } else {\n            this.conn.close()\n          }\n          this.conn = null\n          // remove open handles\n          this.heartbeatTimer && clearInterval(this.heartbeatTimer)\n          this.reconnectTimer.reset()\n        }\n        resolve({ error: null, data: true })\n      } catch (error) {\n        resolve({ error: error as Error, data: false })\n      }\n    })\n  }\n\n  /**\n   * Logs the message. Override `this.logger` for specialized logging.\n   */\n  log(kind: string, msg: string, data?: any) {\n    this.logger(kind, msg, data)\n  }\n\n  /**\n   * Registers a callback for connection state change event.\n   * @param callback A function to be called when the event occurs.\n   *\n   * @example\n   *    socket.onOpen(() => console.log(\"Socket opened.\"))\n   */\n  onOpen(callback: Function) {\n    this.stateChangeCallbacks.open.push(callback)\n  }\n\n  /**\n   * Registers a callbacks for connection state change events.\n   * @param callback A function to be called when the event occurs.\n   *\n   * @example\n   *    socket.onOpen(() => console.log(\"Socket closed.\"))\n   */\n  onClose(callback: Function) {\n    this.stateChangeCallbacks.close.push(callback)\n  }\n\n  /**\n   * Registers a callback for connection state change events.\n   * @param callback A function to be called when the event occurs.\n   *\n   * @example\n   *    socket.onOpen((error) => console.log(\"An error occurred\"))\n   */\n  onError(callback: Function) {\n    this.stateChangeCallbacks.error.push(callback)\n  }\n\n  /**\n   * Calls a function any time a message is received.\n   * @param callback A function to be called when the event occurs.\n   *\n   * @example\n   *    socket.onMessage((message) => console.log(message))\n   */\n  onMessage(callback: Function) {\n    this.stateChangeCallbacks.message.push(callback)\n  }\n\n  /**\n   * Returns the current state of the socket.\n   */\n  connectionState() {\n    switch (this.conn && this.conn.readyState) {\n      case SOCKET_STATES.connecting:\n        return 'connecting'\n      case SOCKET_STATES.open:\n        return 'open'\n      case SOCKET_STATES.closing:\n        return 'closing'\n      default:\n        return 'closed'\n    }\n  }\n\n  /**\n   * Retuns `true` is the connection is open.\n   */\n  isConnected() {\n    return this.connectionState() === 'open'\n  }\n\n  /**\n   * Removes a subscription from the socket.\n   *\n   * @param channel An open subscription.\n   */\n  remove(channel: RealtimeSubscription | RealtimeChannel) {\n    this.channels = this.channels.filter(\n      (c: RealtimeSubscription | RealtimeChannel) =>\n        c.joinRef() !== channel.joinRef()\n    )\n  }\n\n  channel(\n    topic: string,\n    chanParams: { [key: string]: any } = { isNewVersion: false }\n  ) {\n    const { isNewVersion, ...params } = chanParams\n\n    const chan = isNewVersion\n      ? new RealtimeChannel(topic, { ...params }, this)\n      : new RealtimeSubscription(topic, { ...params }, this)\n\n    if (chan instanceof RealtimeChannel) {\n      chan.presence.onJoin((key, currentPresences, newPresences) => {\n        chan.trigger('presence', {\n          event: 'JOIN',\n          key,\n          currentPresences,\n          newPresences,\n        })\n      })\n\n      chan.presence.onLeave((key, currentPresences, leftPresences) => {\n        chan.trigger('presence', {\n          event: 'LEAVE',\n          key,\n          currentPresences,\n          leftPresences,\n        })\n      })\n\n      chan.presence.onSync(() => {\n        chan.trigger('presence', { event: 'SYNC' })\n      })\n    }\n\n    this.channels.push(chan)\n    return chan\n  }\n\n  push(data: Message) {\n    let { topic, event, payload, ref } = data\n    let callback = () => {\n      this.encode(data, (result: any) => {\n        this.conn?.send(result)\n      })\n    }\n    this.log('push', `${topic} ${event} (${ref})`, payload)\n    if (this.isConnected()) {\n      callback()\n    } else {\n      this.sendBuffer.push(callback)\n    }\n  }\n\n  onConnMessage(rawMessage: any) {\n    this.decode(rawMessage.data, (msg: Message) => {\n      let { topic, event, payload, ref } = msg\n\n      if (\n        (ref && ref === this.pendingHeartbeatRef) ||\n        event === payload?.type\n      ) {\n        this.pendingHeartbeatRef = null\n      }\n\n      this.log(\n        'receive',\n        `${payload.status || ''} ${topic} ${event} ${\n          (ref && '(' + ref + ')') || ''\n        }`,\n        payload\n      )\n      this.channels\n        .filter((channel: RealtimeSubscription | RealtimeChannel) =>\n          channel.isMember(topic)\n        )\n        .forEach((channel: RealtimeSubscription | RealtimeChannel) =>\n          channel.trigger(event, payload, ref)\n        )\n      this.stateChangeCallbacks.message.forEach((callback) => callback(msg))\n    })\n  }\n\n  /**\n   * Returns the URL of the websocket.\n   */\n  endPointURL() {\n    return this._appendParams(\n      this.endPoint,\n      Object.assign({}, this.params, { vsn: VSN })\n    )\n  }\n\n  /**\n   * Return the next message ref, accounting for overflows\n   */\n  makeRef() {\n    let newRef = this.ref + 1\n    if (newRef === this.ref) {\n      this.ref = 0\n    } else {\n      this.ref = newRef\n    }\n\n    return this.ref.toString()\n  }\n\n  /**\n   * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n   *\n   * @param token A JWT string.\n   */\n  setAuth(token: string | null) {\n    this.accessToken = token\n\n    try {\n      this.channels.forEach((channel) => {\n        token && channel.updateJoinPayload({ user_token: token })\n\n        if (channel.joinedOnce && channel.isJoined()) {\n          channel.push(CHANNEL_EVENTS.access_token, { access_token: token })\n        }\n      })\n    } catch (error) {\n      console.log('setAuth error', error)\n    }\n  }\n\n  leaveOpenTopic(topic: string): void {\n    let dupChannel = this.channels.find(\n      (c) => c.topic === topic && (c.isJoined() || c.isJoining())\n    )\n    if (dupChannel) {\n      this.log('transport', `leaving duplicate topic \"${topic}\"`)\n      dupChannel.unsubscribe()\n    }\n  }\n\n  private _onConnOpen() {\n    this.log('transport', `connected to ${this.endPointURL()}`)\n    this._flushSendBuffer()\n    this.reconnectTimer.reset()\n    this.heartbeatTimer && clearInterval(this.heartbeatTimer)\n    this.heartbeatTimer = setInterval(\n      () => this._sendHeartbeat(),\n      this.heartbeatIntervalMs\n    )\n    this.stateChangeCallbacks.open.forEach((callback) => callback())!\n  }\n\n  private _onConnClose(event: any) {\n    this.log('transport', 'close', event)\n    this._triggerChanError()\n    this.heartbeatTimer && clearInterval(this.heartbeatTimer)\n    this.reconnectTimer.scheduleTimeout()\n    this.stateChangeCallbacks.close.forEach((callback) => callback(event))\n  }\n\n  private _onConnError(error: ErrorEvent) {\n    this.log('transport', error.message)\n    this._triggerChanError()\n    this.stateChangeCallbacks.error.forEach((callback) => callback(error))\n  }\n\n  private _triggerChanError() {\n    this.channels.forEach((channel: RealtimeSubscription | RealtimeChannel) =>\n      channel.trigger(CHANNEL_EVENTS.error)\n    )\n  }\n\n  private _appendParams(url: string, params: { [key: string]: string }) {\n    if (Object.keys(params).length === 0) {\n      return url\n    }\n    const prefix = url.match(/\\?/) ? '&' : '?'\n    const query = new URLSearchParams(params)\n\n    return `${url}${prefix}${query}`\n  }\n\n  private _flushSendBuffer() {\n    if (this.isConnected() && this.sendBuffer.length > 0) {\n      this.sendBuffer.forEach((callback) => callback())\n      this.sendBuffer = []\n    }\n  }\n\n  private _sendHeartbeat() {\n    if (!this.isConnected()) {\n      return\n    }\n    if (this.pendingHeartbeatRef) {\n      this.pendingHeartbeatRef = null\n      this.log(\n        'transport',\n        'heartbeat timeout. Attempting to re-establish connection'\n      )\n      this.conn?.close(WS_CLOSE_NORMAL, 'hearbeat timeout')\n      return\n    }\n    this.pendingHeartbeatRef = this.makeRef()\n    this.push({\n      topic: 'phoenix',\n      event: 'heartbeat',\n      payload: {},\n      ref: this.pendingHeartbeatRef,\n    })\n    this.setAuth(this.accessToken)\n  }\n}\n","import { RealtimeSubscription, RealtimeClient, Transformers } from '@supabase/realtime-js'\nimport { GenericObject, SupabaseEventTypes, SupabaseRealtimePayload } from './types'\n\nexport class SupabaseRealtimeClient {\n  subscription: RealtimeSubscription\n\n  constructor(socket: RealtimeClient, headers: GenericObject, schema: string, tableName: string) {\n    const chanParams: GenericObject = {}\n    const topic = tableName === '*' ? `realtime:${schema}` : `realtime:${schema}:${tableName}`\n    const userToken = headers['Authorization'].split(' ')[1]\n\n    if (userToken) {\n      chanParams['user_token'] = userToken\n    }\n\n    this.subscription = socket.channel(topic, chanParams) as RealtimeSubscription\n  }\n\n  private getPayloadRecords(payload: any) {\n    const records = {\n      new: {},\n      old: {},\n    }\n\n    if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n      records.new = Transformers.convertChangeData(payload.columns, payload.record)\n    }\n\n    if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n      records.old = Transformers.convertChangeData(payload.columns, payload.old_record)\n    }\n\n    return records\n  }\n\n  /**\n   * The event you want to listen to.\n   *\n   * @param event The event\n   * @param callback A callback function that is called whenever the event occurs.\n   */\n  on(event: SupabaseEventTypes, callback: (payload: SupabaseRealtimePayload<any>) => void) {\n    this.subscription.on(event, (payload: any) => {\n      let enrichedPayload: SupabaseRealtimePayload<any> = {\n        schema: payload.schema,\n        table: payload.table,\n        commit_timestamp: payload.commit_timestamp,\n        eventType: payload.type,\n        new: {},\n        old: {},\n        errors: payload.errors,\n      }\n\n      enrichedPayload = { ...enrichedPayload, ...this.getPayloadRecords(payload) }\n\n      callback(enrichedPayload)\n    })\n    return this\n  }\n\n  /**\n   * Enables the subscription.\n   */\n  subscribe(callback: Function = () => {}) {\n    this.subscription.onError((e: Error) => callback('SUBSCRIPTION_ERROR', e))\n    this.subscription.onClose(() => callback('CLOSED'))\n    this.subscription\n      .subscribe()\n      .receive('ok', () => callback('SUBSCRIBED'))\n      .receive('error', (e: Error) => callback('SUBSCRIPTION_ERROR', e))\n      .receive('timeout', () => callback('RETRYING_AFTER_TIMEOUT'))\n    return this.subscription\n  }\n}\n","import { PostgrestQueryBuilder } from '@supabase/postgrest-js'\nimport { SupabaseRealtimeClient } from './SupabaseRealtimeClient'\nimport { RealtimeClient } from '@supabase/realtime-js'\nimport { Fetch, GenericObject, SupabaseEventTypes, SupabaseRealtimePayload } from './types'\n\nexport class SupabaseQueryBuilder<T> extends PostgrestQueryBuilder<T> {\n  private _subscription: SupabaseRealtimeClient | null = null\n  private _realtime: RealtimeClient\n  private _headers: GenericObject\n  private _schema: string\n  private _table: string\n\n  constructor(\n    url: string,\n    {\n      headers = {},\n      schema,\n      realtime,\n      table,\n      fetch,\n      shouldThrowOnError,\n    }: {\n      headers?: GenericObject\n      schema: string\n      realtime: RealtimeClient\n      table: string\n      fetch?: Fetch\n      shouldThrowOnError?: boolean\n    }\n  ) {\n    super(url, { headers, schema, fetch, shouldThrowOnError })\n\n    this._realtime = realtime\n    this._headers = headers\n    this._schema = schema\n    this._table = table\n  }\n\n  /**\n   * Subscribe to realtime changes in your database.\n   * @param event The database event which you would like to receive updates for, or you can use the special wildcard `*` to listen to all changes.\n   * @param callback A callback that will handle the payload that is sent whenever your database changes.\n   */\n  on(\n    event: SupabaseEventTypes,\n    callback: (payload: SupabaseRealtimePayload<T>) => void\n  ): SupabaseRealtimeClient {\n    if (!this._realtime.isConnected()) {\n      this._realtime.connect()\n    }\n    if (!this._subscription) {\n      this._subscription = new SupabaseRealtimeClient(\n        this._realtime,\n        this._headers,\n        this._schema,\n        this._table\n      )\n    }\n    return this._subscription.on(event, callback)\n  }\n}\n","// generated by genversion\nexport const version = '0.0.0'\n","import { version } from './version'\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `storage-js/${version}` }\n","export type Fetch = typeof fetch\n\nexport interface FetchOptions {\n  headers?: {\n    [key: string]: string\n  }\n  noResolveJson?: boolean\n}\n\nexport interface FetchParameters {\n  signal?: AbortSignal\n}\n\nexport type RequestMethodType = 'GET' | 'POST' | 'PUT' | 'DELETE'\n\nconst _getErrorMessage = (err: any): string =>\n  err.msg || err.message || err.error_description || err.error || JSON.stringify(err)\n\nconst handleError = (error: any, reject: any) => {\n  if (typeof error.json !== 'function') {\n    return reject(error)\n  }\n  error.json().then((err: any) => {\n    return reject({\n      message: _getErrorMessage(err),\n      status: error?.status || 500,\n    })\n  })\n}\n\nconst _getRequestParams = (\n  method: RequestMethodType,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n) => {\n  const params: { [k: string]: any } = { method, headers: options?.headers || {} }\n\n  if (method === 'GET') {\n    return params\n  }\n\n  params.headers = { 'Content-Type': 'application/json', ...options?.headers }\n  params.body = JSON.stringify(body)\n  return { ...params, ...parameters }\n}\n\nasync function _handleRequest(\n  fetcher: Fetch,\n  method: RequestMethodType,\n  url: string,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    fetcher(url, _getRequestParams(method, options, parameters, body))\n      .then((result) => {\n        if (!result.ok) throw result\n        if (options?.noResolveJson) return resolve(result)\n        return result.json()\n      })\n      .then((data) => resolve(data))\n      .catch((error) => handleError(error, reject))\n  })\n}\n\nexport async function get(\n  fetcher: Fetch,\n  url: string,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'GET', url, options, parameters)\n}\n\nexport async function post(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'POST', url, options, parameters, body)\n}\n\nexport async function put(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'PUT', url, options, parameters, body)\n}\n\nexport async function remove(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'DELETE', url, options, parameters, body)\n}\n","import crossFetch from 'cross-fetch'\n\ntype Fetch = typeof fetch\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = (crossFetch as unknown) as Fetch\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n","import { DEFAULT_HEADERS } from './constants'\nimport { Fetch, get, post, put, remove } from './fetch'\nimport { resolveFetch } from './helpers'\nimport { Bucket } from './types'\n\nexport class StorageBucketApi {\n  protected url: string\n  protected headers: { [key: string]: string }\n  protected fetch: Fetch\n\n  constructor(url: string, headers: { [key: string]: string } = {}, fetch?: Fetch) {\n    this.url = url\n    this.headers = { ...DEFAULT_HEADERS, ...headers }\n    this.fetch = resolveFetch(fetch)\n  }\n\n  /**\n   * Retrieves the details of all Storage buckets within an existing product.\n   */\n  async listBuckets(): Promise<{ data: Bucket[] | null; error: Error | null }> {\n    try {\n      const data = await get(this.fetch, `${this.url}/bucket`, { headers: this.headers })\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  /**\n   * Retrieves the details of an existing Storage bucket.\n   *\n   * @param id The unique identifier of the bucket you would like to retrieve.\n   */\n  async getBucket(id: string): Promise<{ data: Bucket | null; error: Error | null }> {\n    try {\n      const data = await get(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers })\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  /**\n   * Creates a new Storage bucket\n   *\n   * @param id A unique identifier for the bucket you are creating.\n   * @returns newly created bucket id\n   */\n  async createBucket(\n    id: string,\n    options: { public: boolean } = { public: false }\n  ): Promise<{ data: string | null; error: Error | null }> {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/bucket`,\n        { id, name: id, public: options.public },\n        { headers: this.headers }\n      )\n      return { data: data.name, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  /**\n   * Updates a new Storage bucket\n   *\n   * @param id A unique identifier for the bucket you are creating.\n   */\n  async updateBucket(\n    id: string,\n    options: { public: boolean }\n  ): Promise<{ data: { message: string } | null; error: Error | null }> {\n    try {\n      const data = await put(\n        this.fetch,\n        `${this.url}/bucket/${id}`,\n        { id, name: id, public: options.public },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  /**\n   * Removes all objects inside a single bucket.\n   *\n   * @param id The unique identifier of the bucket you would like to empty.\n   */\n  async emptyBucket(\n    id: string\n  ): Promise<{ data: { message: string } | null; error: Error | null }> {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/bucket/${id}/empty`,\n        {},\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  /**\n   * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n   * You must first `empty()` the bucket.\n   *\n   * @param id The unique identifier of the bucket you would like to delete.\n   */\n  async deleteBucket(\n    id: string\n  ): Promise<{ data: { message: string } | null; error: Error | null }> {\n    try {\n      const data = await remove(\n        this.fetch,\n        `${this.url}/bucket/${id}`,\n        {},\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n}\n","import { Fetch, FetchParameters, get, post, remove } from './fetch'\nimport { resolveFetch } from './helpers'\nimport { FileObject, FileOptions, SearchOptions } from './types'\n\nconst DEFAULT_SEARCH_OPTIONS = {\n  limit: 100,\n  offset: 0,\n  sortBy: {\n    column: 'name',\n    order: 'asc',\n  },\n}\n\nconst DEFAULT_FILE_OPTIONS: FileOptions = {\n  cacheControl: '3600',\n  contentType: 'text/plain;charset=UTF-8',\n  upsert: false,\n}\n\nexport class StorageFileApi {\n  protected url: string\n  protected headers: { [key: string]: string }\n  protected bucketId?: string\n  protected fetch: Fetch\n\n  constructor(\n    url: string,\n    headers: { [key: string]: string } = {},\n    bucketId?: string,\n    fetch?: Fetch\n  ) {\n    this.url = url\n    this.headers = headers\n    this.bucketId = bucketId\n    this.fetch = resolveFetch(fetch)\n  }\n\n  /**\n   * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\n   *\n   * @param method HTTP method.\n   * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n   * @param fileBody The body of the file to be stored in the bucket.\n   * @param fileOptions HTTP headers.\n   * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n   * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n   * `upsert`: boolean, whether to perform an upsert.\n   */\n  private async uploadOrUpdate(\n    method: 'POST' | 'PUT',\n    path: string,\n    fileBody:\n      | ArrayBuffer\n      | ArrayBufferView\n      | Blob\n      | Buffer\n      | File\n      | FormData\n      | NodeJS.ReadableStream\n      | ReadableStream<Uint8Array>\n      | URLSearchParams\n      | string,\n    fileOptions?: FileOptions\n  ): Promise<{ data: { Key: string } | null; error: Error | null }> {\n    try {\n      let body\n      const options = { ...DEFAULT_FILE_OPTIONS, ...fileOptions }\n      const headers: Record<string, string> = {\n        ...this.headers,\n        ...(method === 'POST' && { 'x-upsert': String(options.upsert as boolean) }),\n      }\n\n      if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n        body = new FormData()\n        body.append('cacheControl', options.cacheControl as string)\n        body.append('', fileBody)\n      } else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n        body = fileBody\n        body.append('cacheControl', options.cacheControl as string)\n      } else {\n        body = fileBody\n        headers['cache-control'] = `max-age=${options.cacheControl}`\n        headers['content-type'] = options.contentType as string\n      }\n\n      const cleanPath = this._removeEmptyFolders(path)\n      const _path = this._getFinalPath(cleanPath)\n      const res = await this.fetch(`${this.url}/object/${_path}`, {\n        method,\n        body: body as BodyInit,\n        headers,\n      })\n\n      if (res.ok) {\n        // const data = await res.json()\n        // temporary fix till backend is updated to the latest storage-api version\n        return { data: { Key: _path }, error: null }\n      } else {\n        const error = await res.json()\n        return { data: null, error }\n      }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  /**\n   * Uploads a file to an existing bucket.\n   *\n   * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n   * @param fileBody The body of the file to be stored in the bucket.\n   * @param fileOptions HTTP headers.\n   * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n   * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n   * `upsert`: boolean, whether to perform an upsert.\n   */\n  async upload(\n    path: string,\n    fileBody:\n      | ArrayBuffer\n      | ArrayBufferView\n      | Blob\n      | Buffer\n      | File\n      | FormData\n      | NodeJS.ReadableStream\n      | ReadableStream<Uint8Array>\n      | URLSearchParams\n      | string,\n    fileOptions?: FileOptions\n  ): Promise<{ data: { Key: string } | null; error: Error | null }> {\n    return this.uploadOrUpdate('POST', path, fileBody, fileOptions)\n  }\n\n  /**\n   * Replaces an existing file at the specified path with a new one.\n   *\n   * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n   * @param fileBody The body of the file to be stored in the bucket.\n   * @param fileOptions HTTP headers.\n   * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n   * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n   * `upsert`: boolean, whether to perform an upsert.\n   */\n  async update(\n    path: string,\n    fileBody:\n      | ArrayBuffer\n      | ArrayBufferView\n      | Blob\n      | Buffer\n      | File\n      | FormData\n      | NodeJS.ReadableStream\n      | ReadableStream<Uint8Array>\n      | URLSearchParams\n      | string,\n    fileOptions?: FileOptions\n  ): Promise<{ data: { Key: string } | null; error: Error | null }> {\n    return this.uploadOrUpdate('PUT', path, fileBody, fileOptions)\n  }\n\n  /**\n   * Moves an existing file.\n   *\n   * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n   * @param toPath The new file path, including the new file name. For example `folder/image-new.png`.\n   */\n  async move(\n    fromPath: string,\n    toPath: string\n  ): Promise<{ data: { message: string } | null; error: Error | null }> {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/move`,\n        { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  /**\n   * Copies an existing file.\n   *\n   * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n   * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\n   */\n  async copy(\n    fromPath: string,\n    toPath: string\n  ): Promise<{ data: { message: string } | null; error: Error | null }> {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/copy`,\n        { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  /**\n   * Create signed URL to download file without requiring permissions. This URL can be valid for a set number of seconds.\n   *\n   * @param path The file path to be downloaded, including the current file name. For example `folder/image.png`.\n   * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\n   */\n  async createSignedUrl(\n    path: string,\n    expiresIn: number\n  ): Promise<{\n    data: { signedURL: string } | null\n    error: Error | null\n    signedURL: string | null\n  }> {\n    try {\n      const _path = this._getFinalPath(path)\n      let data = await post(\n        this.fetch,\n        `${this.url}/object/sign/${_path}`,\n        { expiresIn },\n        { headers: this.headers }\n      )\n      const signedURL = `${this.url}${data.signedURL}`\n      data = { signedURL }\n      return { data, error: null, signedURL }\n    } catch (error) {\n      return { data: null, error, signedURL: null }\n    }\n  }\n\n  /**\n   * Create signed URLs to download files without requiring permissions. These URLs can be valid for a set number of seconds.\n   *\n   * @param paths The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`.\n   * @param expiresIn The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.\n   */\n  async createSignedUrls(\n    paths: string[],\n    expiresIn: number\n  ): Promise<{\n    data: { error: string | null; path: string | null; signedURL: string }[] | null\n    error: Error | null\n  }> {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/sign/${this.bucketId}`,\n        { expiresIn, paths },\n        { headers: this.headers }\n      )\n      return {\n        data: data.map((datum: { signedURL: string }) => ({\n          ...datum,\n          signedURL: datum.signedURL ? `${this.url}${datum.signedURL}` : null,\n        })),\n        error: null,\n      }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  /**\n   * Downloads a file.\n   *\n   * @param path The file path to be downloaded, including the path and file name. For example `folder/image.png`.\n   */\n  async download(path: string): Promise<{ data: Blob | null; error: Error | null }> {\n    try {\n      const _path = this._getFinalPath(path)\n      const res = await get(this.fetch, `${this.url}/object/${_path}`, {\n        headers: this.headers,\n        noResolveJson: true,\n      })\n      const data = await res.blob()\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  /**\n   * Retrieve URLs for assets in public buckets\n   *\n   * @param path The file path to be downloaded, including the path and file name. For example `folder/image.png`.\n   */\n  getPublicUrl(\n    path: string\n  ): {\n    data: { publicURL: string } | null\n    error: Error | null\n    publicURL: string | null\n  } {\n    try {\n      const _path = this._getFinalPath(path)\n      const publicURL = `${this.url}/object/public/${_path}`\n      const data = { publicURL }\n      return { data, error: null, publicURL }\n    } catch (error) {\n      return { data: null, error, publicURL: null }\n    }\n  }\n\n  /**\n   * Deletes files within the same bucket\n   *\n   * @param paths An array of files to be deleted, including the path and file name. For example [`folder/image.png`].\n   */\n  async remove(paths: string[]): Promise<{ data: FileObject[] | null; error: Error | null }> {\n    try {\n      const data = await remove(\n        this.fetch,\n        `${this.url}/object/${this.bucketId}`,\n        { prefixes: paths },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  /**\n   * Get file metadata\n   * @param id the file id to retrieve metadata\n   */\n  // async getMetadata(id: string): Promise<{ data: Metadata | null; error: Error | null }> {\n  //   try {\n  //     const data = await get(`${this.url}/metadata/${id}`, { headers: this.headers })\n  //     return { data, error: null }\n  //   } catch (error) {\n  //     return { data: null, error }\n  //   }\n  // }\n\n  /**\n   * Update file metadata\n   * @param id the file id to update metadata\n   * @param meta the new file metadata\n   */\n  // async updateMetadata(\n  //   id: string,\n  //   meta: Metadata\n  // ): Promise<{ data: Metadata | null; error: Error | null }> {\n  //   try {\n  //     const data = await post(`${this.url}/metadata/${id}`, { ...meta }, { headers: this.headers })\n  //     return { data, error: null }\n  //   } catch (error) {\n  //     return { data: null, error }\n  //   }\n  // }\n\n  /**\n   * Lists all the files within a bucket.\n   * @param path The folder path.\n   * @param options Search options, including `limit`, `offset`, and `sortBy`.\n   * @param parameters Fetch parameters, currently only supports `signal`, which is an AbortController's signal\n   */\n  async list(\n    path?: string,\n    options?: SearchOptions,\n    parameters?: FetchParameters\n  ): Promise<{ data: FileObject[] | null; error: Error | null }> {\n    try {\n      const body = { ...DEFAULT_SEARCH_OPTIONS, ...options, prefix: path || '' }\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/list/${this.bucketId}`,\n        body,\n        { headers: this.headers },\n        parameters\n      )\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  _getFinalPath(path: string) {\n    return `${this.bucketId}/${path}`\n  }\n\n  _removeEmptyFolders(path: string) {\n    return path.replace(/^\\/|\\/$/g, '').replace(/\\/+/g, '/')\n  }\n}\n","import { StorageBucketApi, StorageFileApi } from './lib'\nimport { Fetch } from './lib/fetch'\n\nexport class StorageClient extends StorageBucketApi {\n  constructor(url: string, headers: { [key: string]: string } = {}, fetch?: Fetch) {\n    super(url, headers, fetch)\n  }\n\n  /**\n   * Perform file operation in a bucket.\n   *\n   * @param id The bucket id to operate on.\n   */\n  from(id: string): StorageFileApi {\n    return new StorageFileApi(this.url, this.headers, id, this.fetch)\n  }\n}\n","import crossFetch from 'cross-fetch'\n\ntype Fetch = typeof fetch\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = crossFetch as unknown as Fetch\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n","import { resolveFetch } from './helper'\nimport { Fetch, FunctionInvokeOptions } from './types'\n\nexport class FunctionsClient {\n  protected url: string\n  protected headers: Record<string, string>\n  protected fetch: Fetch\n\n  constructor(\n    url: string,\n    {\n      headers = {},\n      customFetch,\n    }: {\n      headers?: Record<string, string>\n      customFetch?: Fetch\n    } = {}\n  ) {\n    this.url = url\n    this.headers = headers\n    this.fetch = resolveFetch(customFetch)\n  }\n\n  /**\n   * Updates the authorization header\n   * @params token - the new jwt token sent in the authorisation header\n   */\n  setAuth(token: string) {\n    this.headers.Authorization = `Bearer ${token}`\n  }\n\n  /**\n   * Invokes a function\n   * @param functionName - the name of the function to invoke\n   * @param invokeOptions - object with the following properties\n   * `headers`: object representing the headers to send with the request\n   * `body`: the body of the request\n   * `responseType`: how the response should be parsed. The default is `json`\n   */\n  async invoke<T = any>(\n    functionName: string,\n    invokeOptions?: FunctionInvokeOptions\n  ): Promise<{ data: T; error: null } | { data: null; error: Error }> {\n    try {\n      const { headers, body } = invokeOptions ?? {}\n      const response = await this.fetch(`${this.url}/${functionName}`, {\n        method: 'POST',\n        headers: Object.assign({}, this.headers, headers),\n        body,\n      })\n\n      const isRelayError = response.headers.get('x-relay-error')\n      if (isRelayError && isRelayError === 'true') {\n        return { data: null, error: new Error(await response.text()) }\n      }\n\n      let data\n      const { responseType } = invokeOptions ?? {}\n      if (!responseType || responseType === 'json') {\n        data = await response.json()\n      } else if (responseType === 'arrayBuffer') {\n        data = await response.arrayBuffer()\n      } else if (responseType === 'blob') {\n        data = await response.blob()\n      } else {\n        data = await response.text()\n      }\n\n      return { data, error: null }\n    } catch (error: any) {\n      return { data: null, error }\n    }\n  }\n}\n","import { DEFAULT_HEADERS, STORAGE_KEY } from './lib/constants'\nimport { stripTrailingSlash, isBrowser } from './lib/helpers'\nimport { Fetch, GenericObject, SupabaseClientOptions } from './lib/types'\nimport { SupabaseAuthClient } from './lib/SupabaseAuthClient'\nimport { SupabaseQueryBuilder } from './lib/SupabaseQueryBuilder'\nimport { SupabaseStorageClient } from '@supabase/storage-js'\nimport { FunctionsClient } from '@supabase/functions-js'\nimport { PostgrestClient } from '@supabase/postgrest-js'\nimport { AuthChangeEvent } from '@supabase/gotrue-js'\nimport { RealtimeClient, RealtimeSubscription, RealtimeClientOptions } from '@supabase/realtime-js'\n\nconst DEFAULT_OPTIONS = {\n  schema: 'public',\n  autoRefreshToken: true,\n  persistSession: true,\n  detectSessionInUrl: true,\n  multiTab: true,\n  headers: DEFAULT_HEADERS,\n}\n\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nexport default class SupabaseClient {\n  /**\n   * Supabase Auth allows you to create and manage user sessions for access to data that is secured by access policies.\n   */\n  auth: SupabaseAuthClient\n\n  protected schema: string\n  protected restUrl: string\n  protected realtimeUrl: string\n  protected authUrl: string\n  protected storageUrl: string\n  protected functionsUrl: string\n  protected realtime: RealtimeClient\n  protected multiTab: boolean\n  protected fetch?: Fetch\n  protected changedAccessToken: string | undefined\n  protected shouldThrowOnError: boolean\n\n  protected headers: {\n    [key: string]: string\n  }\n\n  /**\n   * Create a new client for use in the browser.\n   * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n   * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n   * @param options.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n   * @param options.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n   * @param options.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n   * @param options.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n   * @param options.headers Any additional headers to send with each network request.\n   * @param options.realtime Options passed along to realtime-js constructor.\n   * @param options.multiTab Set to \"false\" if you want to disable multi-tab/window events.\n   * @param options.fetch A custom fetch implementation.\n   */\n  constructor(\n    protected supabaseUrl: string,\n    protected supabaseKey: string,\n    options?: SupabaseClientOptions\n  ) {\n    if (!supabaseUrl) throw new Error('supabaseUrl is required.')\n    if (!supabaseKey) throw new Error('supabaseKey is required.')\n\n    const _supabaseUrl = stripTrailingSlash(supabaseUrl)\n    const settings = { ...DEFAULT_OPTIONS, ...options }\n\n    this.restUrl = `${_supabaseUrl}/rest/v1`\n    this.realtimeUrl = `${_supabaseUrl}/realtime/v1`.replace('http', 'ws')\n    this.authUrl = `${_supabaseUrl}/auth/v1`\n    this.storageUrl = `${_supabaseUrl}/storage/v1`\n\n    const isPlatform = _supabaseUrl.match(/(supabase\\.co)|(supabase\\.in)/)\n    if (isPlatform) {\n      const urlParts = _supabaseUrl.split('.')\n      this.functionsUrl = `${urlParts[0]}.functions.${urlParts[1]}.${urlParts[2]}`\n    } else {\n      this.functionsUrl = `${_supabaseUrl}/functions/v1`\n    }\n\n    this.schema = settings.schema\n    this.multiTab = settings.multiTab\n    this.fetch = settings.fetch\n    this.headers = { ...DEFAULT_HEADERS, ...options?.headers }\n    this.shouldThrowOnError = settings.shouldThrowOnError || false\n\n    this.auth = this._initSupabaseAuthClient(settings)\n    this.realtime = this._initRealtimeClient({ headers: this.headers, ...settings.realtime })\n\n    this._listenForAuthEvents()\n    this._listenForMultiTabEvents()\n\n    // In the future we might allow the user to pass in a logger to receive these events.\n    // this.realtime.onOpen(() => console.log('OPEN'))\n    // this.realtime.onClose(() => console.log('CLOSED'))\n    // this.realtime.onError((e: Error) => console.log('Socket error', e))\n  }\n\n  /**\n   * Supabase Functions allows you to deploy and invoke edge functions.\n   */\n  get functions() {\n    return new FunctionsClient(this.functionsUrl, {\n      headers: this._getAuthHeaders(),\n      customFetch: this.fetch,\n    })\n  }\n\n  /**\n   * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n   */\n  get storage() {\n    return new SupabaseStorageClient(this.storageUrl, this._getAuthHeaders(), this.fetch)\n  }\n\n  /**\n   * Perform a table operation.\n   *\n   * @param table The table name to operate on.\n   */\n  from<T = any>(table: string): SupabaseQueryBuilder<T> {\n    const url = `${this.restUrl}/${table}`\n    return new SupabaseQueryBuilder<T>(url, {\n      headers: this._getAuthHeaders(),\n      schema: this.schema,\n      realtime: this.realtime,\n      table,\n      fetch: this.fetch,\n      shouldThrowOnError: this.shouldThrowOnError,\n    })\n  }\n\n  /**\n   * Perform a function call.\n   *\n   * @param fn  The function name to call.\n   * @param params  The parameters to pass to the function call.\n   * @param head   When set to true, no data will be returned.\n   * @param count  Count algorithm to use to count rows in a table.\n   *\n   */\n  rpc<T = any>(\n    fn: string,\n    params?: object,\n    {\n      head = false,\n      count = null,\n    }: { head?: boolean; count?: null | 'exact' | 'planned' | 'estimated' } = {}\n  ) {\n    const rest = this._initPostgRESTClient()\n    return rest.rpc<T>(fn, params, { head, count })\n  }\n\n  /**\n   * Closes and removes all subscriptions and returns a list of removed\n   * subscriptions and their errors.\n   */\n  async removeAllSubscriptions(): Promise<\n    { data: { subscription: RealtimeSubscription }; error: Error | null }[]\n  > {\n    const allSubs: RealtimeSubscription[] = this.getSubscriptions().slice()\n    const allSubPromises = allSubs.map((sub) => this.removeSubscription(sub))\n    const allRemovedSubs = await Promise.all(allSubPromises)\n\n    return allRemovedSubs.map(({ error }, i) => {\n      return {\n        data: { subscription: allSubs[i] },\n        error,\n      }\n    })\n  }\n\n  /**\n   * Closes and removes a subscription and returns the number of open subscriptions.\n   *\n   * @param subscription The subscription you want to close and remove.\n   */\n  async removeSubscription(\n    subscription: RealtimeSubscription\n  ): Promise<{ data: { openSubscriptions: number }; error: Error | null }> {\n    const { error } = await this._closeSubscription(subscription)\n    const allSubs: RealtimeSubscription[] = this.getSubscriptions()\n    const openSubCount = allSubs.filter((chan) => chan.isJoined()).length\n\n    if (allSubs.length === 0) await this.realtime.disconnect()\n\n    return { data: { openSubscriptions: openSubCount }, error }\n  }\n\n  private async _closeSubscription(\n    subscription: RealtimeSubscription\n  ): Promise<{ error: Error | null }> {\n    let error = null\n\n    if (!subscription.isClosed()) {\n      const { error: unsubError } = await this._unsubscribeSubscription(subscription)\n      error = unsubError\n    }\n\n    this.realtime.remove(subscription)\n\n    return { error }\n  }\n\n  private _unsubscribeSubscription(\n    subscription: RealtimeSubscription\n  ): Promise<{ error: Error | null }> {\n    return new Promise((resolve) => {\n      subscription\n        .unsubscribe()\n        .receive('ok', () => resolve({ error: null }))\n        .receive('error', (error: Error) => resolve({ error }))\n        .receive('timeout', () => resolve({ error: new Error('timed out') }))\n    })\n  }\n\n  /**\n   * Returns an array of all your subscriptions.\n   */\n  getSubscriptions(): RealtimeSubscription[] {\n    return this.realtime.channels as RealtimeSubscription[]\n  }\n\n  private _initSupabaseAuthClient({\n    autoRefreshToken,\n    persistSession,\n    detectSessionInUrl,\n    localStorage,\n    headers,\n    fetch,\n  }: SupabaseClientOptions) {\n    const authHeaders = {\n      Authorization: `Bearer ${this.supabaseKey}`,\n      apikey: `${this.supabaseKey}`,\n    }\n    return new SupabaseAuthClient({\n      url: this.authUrl,\n      headers: { ...headers, ...authHeaders },\n      autoRefreshToken,\n      persistSession,\n      detectSessionInUrl,\n      localStorage,\n      fetch,\n    })\n  }\n\n  private _initRealtimeClient(options?: RealtimeClientOptions) {\n    return new RealtimeClient(this.realtimeUrl, {\n      ...options,\n      params: { ...options?.params, apikey: this.supabaseKey },\n    })\n  }\n\n  private _initPostgRESTClient() {\n    return new PostgrestClient(this.restUrl, {\n      headers: this._getAuthHeaders(),\n      schema: this.schema,\n      fetch: this.fetch,\n      throwOnError: this.shouldThrowOnError,\n    })\n  }\n\n  private _getAuthHeaders(): GenericObject {\n    const headers: GenericObject = { ...this.headers }\n    const authBearer = this.auth.session()?.access_token ?? this.supabaseKey\n    headers['apikey'] = this.supabaseKey\n    headers['Authorization'] = headers['Authorization'] || `Bearer ${authBearer}`\n    return headers\n  }\n\n  private _listenForMultiTabEvents() {\n    if (!this.multiTab || !isBrowser() || !window?.addEventListener) {\n      return null\n    }\n\n    try {\n      return window?.addEventListener('storage', (e: StorageEvent) => {\n        if (e.key === STORAGE_KEY) {\n          const newSession = JSON.parse(String(e.newValue))\n          const accessToken: string | undefined =\n            newSession?.currentSession?.access_token ?? undefined\n          const previousAccessToken = this.auth.session()?.access_token\n          if (!accessToken) {\n            this._handleTokenChanged('SIGNED_OUT', accessToken, 'STORAGE')\n          } else if (!previousAccessToken && accessToken) {\n            this._handleTokenChanged('SIGNED_IN', accessToken, 'STORAGE')\n          } else if (previousAccessToken !== accessToken) {\n            this._handleTokenChanged('TOKEN_REFRESHED', accessToken, 'STORAGE')\n          }\n        }\n      })\n    } catch (error) {\n      console.error('_listenForMultiTabEvents', error)\n      return null\n    }\n  }\n\n  private _listenForAuthEvents() {\n    let { data } = this.auth.onAuthStateChange((event, session) => {\n      this._handleTokenChanged(event, session?.access_token, 'CLIENT')\n    })\n    return data\n  }\n\n  private _handleTokenChanged(\n    event: AuthChangeEvent,\n    token: string | undefined,\n    source: 'CLIENT' | 'STORAGE'\n  ) {\n    if (\n      (event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\n      this.changedAccessToken !== token\n    ) {\n      // Token has changed\n      this.realtime.setAuth(token!)\n      // Ideally we should call this.auth.recoverSession() - need to make public\n      // to trigger a \"SIGNED_IN\" event on this client.\n      if (source == 'STORAGE') this.auth.setAuth(token!)\n\n      this.changedAccessToken = token\n    } else if (event === 'SIGNED_OUT' || event === 'USER_DELETED') {\n      // Token is removed\n      this.realtime.setAuth(this.supabaseKey)\n      if (source == 'STORAGE') this.auth.signOut()\n    }\n  }\n}\n","// helpers.ts\n\nexport function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8\n    return v.toString(16)\n  })\n}\n\nexport function stripTrailingSlash(url: string): string {\n  return url.replace(/\\/$/, '')\n}\n\nexport const isBrowser = () => typeof window !== 'undefined'\n","/* MIT https://github.com/fabiospampinato/cash */\n(function(){\n\"use strict\";\n\nvar propMap = {\n  /* GENERAL */\n  \"class\": 'className',\n  contenteditable: 'contentEditable',\n\n  /* LABEL */\n  \"for\": 'htmlFor',\n\n  /* INPUT */\n  readonly: 'readOnly',\n  maxlength: 'maxLength',\n  tabindex: 'tabIndex',\n\n  /* TABLE */\n  colspan: 'colSpan',\n  rowspan: 'rowSpan',\n\n  /* IMAGE */\n  usemap: 'useMap'\n};\n\nfunction attempt(fn, arg) {\n  try {\n    return fn(arg);\n  } catch (_a) {\n    return arg;\n  }\n}\n\nvar doc = document,\n    win = window,\n    docEle = doc.documentElement,\n    createElement = doc.createElement.bind(doc),\n    div = createElement('div'),\n    table = createElement('table'),\n    tbody = createElement('tbody'),\n    tr = createElement('tr'),\n    isArray = Array.isArray,\n    ArrayPrototype = Array.prototype,\n    concat = ArrayPrototype.concat,\n    filter = ArrayPrototype.filter,\n    indexOf = ArrayPrototype.indexOf,\n    map = ArrayPrototype.map,\n    push = ArrayPrototype.push,\n    slice = ArrayPrototype.slice,\n    some = ArrayPrototype.some,\n    splice = ArrayPrototype.splice;\nvar idRe = /^#(?:[\\w-]|\\\\.|[^\\x00-\\xa0])*$/,\n    classRe = /^\\.(?:[\\w-]|\\\\.|[^\\x00-\\xa0])*$/,\n    htmlRe = /<.+>/,\n    tagRe = /^\\w+$/; // @require ./variables.ts\n\nfunction find(selector, context) {\n  var isFragment = isDocumentFragment(context);\n  return !selector || !isFragment && !isDocument(context) && !isElement(context) ? [] : !isFragment && classRe.test(selector) ? context.getElementsByClassName(selector.slice(1)) : !isFragment && tagRe.test(selector) ? context.getElementsByTagName(selector) : context.querySelectorAll(selector);\n} // @require ./find.ts\n// @require ./variables.ts\n\n\nvar Cash =\n/** @class */\nfunction () {\n  function Cash(selector, context) {\n    if (!selector) return;\n    if (isCash(selector)) return selector;\n    var eles = selector;\n\n    if (isString(selector)) {\n      var ctx = (isCash(context) ? context[0] : context) || doc;\n      eles = idRe.test(selector) && 'getElementById' in ctx ? ctx.getElementById(selector.slice(1)) : htmlRe.test(selector) ? parseHTML(selector) : find(selector, ctx);\n      if (!eles) return;\n    } else if (isFunction(selector)) {\n      return this.ready(selector); //FIXME: `fn.ready` is not included in `core`, but it's actually a core functionality\n    }\n\n    if (eles.nodeType || eles === win) eles = [eles];\n    this.length = eles.length;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      this[i] = eles[i];\n    }\n  }\n\n  Cash.prototype.init = function (selector, context) {\n    return new Cash(selector, context);\n  };\n\n  return Cash;\n}();\n\nvar fn = Cash.prototype,\n    cash = fn.init;\ncash.fn = cash.prototype = fn; // Ensuring that `cash () instanceof cash`\n\nfn.length = 0;\nfn.splice = splice; // Ensuring a cash collection gets printed as array-like in Chrome's devtools\n\nif (typeof Symbol === 'function') {\n  // Ensuring a cash collection is iterable\n  fn[Symbol['iterator']] = ArrayPrototype[Symbol['iterator']];\n}\n\nfn.map = function (callback) {\n  return cash(concat.apply([], map.call(this, function (ele, i) {\n    return callback.call(ele, i, ele);\n  })));\n};\n\nfn.slice = function (start, end) {\n  return cash(slice.call(this, start, end));\n}; // @require ./cash.ts\n\n\nvar dashAlphaRe = /-([a-z])/g;\n\nfunction camelCase(str) {\n  return str.replace(dashAlphaRe, function (match, letter) {\n    return letter.toUpperCase();\n  });\n}\n\ncash.guid = 1; // @require ./cash.ts\n\nfunction matches(ele, selector) {\n  var matches = ele && (ele['matches'] || ele['webkitMatchesSelector'] || ele['msMatchesSelector']);\n  return !!matches && !!selector && matches.call(ele, selector);\n}\n\nfunction isCash(x) {\n  return x instanceof Cash;\n}\n\nfunction isWindow(x) {\n  return !!x && x === x.window;\n}\n\nfunction isDocument(x) {\n  return !!x && x.nodeType === 9;\n}\n\nfunction isDocumentFragment(x) {\n  return !!x && x.nodeType === 11;\n}\n\nfunction isElement(x) {\n  return !!x && x.nodeType === 1;\n}\n\nfunction isBoolean(x) {\n  return typeof x === 'boolean';\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nfunction isString(x) {\n  return typeof x === 'string';\n}\n\nfunction isUndefined(x) {\n  return x === undefined;\n}\n\nfunction isNull(x) {\n  return x === null;\n}\n\nfunction isNumeric(x) {\n  return !isNaN(parseFloat(x)) && isFinite(x);\n}\n\nfunction isPlainObject(x) {\n  if (typeof x !== 'object' || x === null) return false;\n  var proto = Object.getPrototypeOf(x);\n  return proto === null || proto === Object.prototype;\n}\n\ncash.isWindow = isWindow;\ncash.isFunction = isFunction;\ncash.isArray = isArray;\ncash.isNumeric = isNumeric;\ncash.isPlainObject = isPlainObject;\n\nfn.get = function (index) {\n  if (isUndefined(index)) return slice.call(this);\n  index = Number(index);\n  return this[index < 0 ? index + this.length : index];\n};\n\nfn.eq = function (index) {\n  return cash(this.get(index));\n};\n\nfn.first = function () {\n  return this.eq(0);\n};\n\nfn.last = function () {\n  return this.eq(-1);\n};\n\nfunction each(arr, callback, _reverse) {\n  if (_reverse) {\n    var i = arr.length;\n\n    while (i--) {\n      if (callback.call(arr[i], i, arr[i]) === false) return arr;\n    }\n  } else if (isPlainObject(arr)) {\n    var keys = Object.keys(arr);\n\n    for (var i = 0, l = keys.length; i < l; i++) {\n      var key = keys[i];\n      if (callback.call(arr[key], key, arr[key]) === false) return arr;\n    }\n  } else {\n    for (var i = 0, l = arr.length; i < l; i++) {\n      if (callback.call(arr[i], i, arr[i]) === false) return arr;\n    }\n  }\n\n  return arr;\n}\n\ncash.each = each;\n\nfn.each = function (callback) {\n  return each(this, callback);\n};\n\nfn.prop = function (prop, value) {\n  if (!prop) return;\n\n  if (isString(prop)) {\n    prop = propMap[prop] || prop;\n    if (arguments.length < 2) return this[0] && this[0][prop];\n    return this.each(function (i, ele) {\n      ele[prop] = value;\n    });\n  }\n\n  for (var key in prop) {\n    this.prop(key, prop[key]);\n  }\n\n  return this;\n};\n\nfn.removeProp = function (prop) {\n  return this.each(function (i, ele) {\n    delete ele[propMap[prop] || prop];\n  });\n};\n\nfunction extend() {\n  var sources = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    sources[_i] = arguments[_i];\n  }\n\n  var deep = isBoolean(sources[0]) ? sources.shift() : false,\n      target = sources.shift(),\n      length = sources.length;\n  if (!target) return {};\n  if (!length) return extend(deep, cash, target);\n\n  for (var i = 0; i < length; i++) {\n    var source = sources[i];\n\n    for (var key in source) {\n      if (deep && (isArray(source[key]) || isPlainObject(source[key]))) {\n        if (!target[key] || target[key].constructor !== source[key].constructor) target[key] = new source[key].constructor();\n        extend(deep, target[key], source[key]);\n      } else {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}\n\ncash.extend = extend;\n\nfn.extend = function (plugins) {\n  return extend(fn, plugins);\n}; // @require ./matches.ts\n// @require ./type_checking.ts\n\n\nfunction getCompareFunction(comparator) {\n  return isString(comparator) ? function (i, ele) {\n    return matches(ele, comparator);\n  } : isFunction(comparator) ? comparator : isCash(comparator) ? function (i, ele) {\n    return comparator.is(ele);\n  } : !comparator ? function () {\n    return false;\n  } : function (i, ele) {\n    return ele === comparator;\n  };\n}\n\nfn.filter = function (comparator) {\n  var compare = getCompareFunction(comparator);\n  return cash(filter.call(this, function (ele, i) {\n    return compare.call(ele, i, ele);\n  }));\n}; // @require collection/filter.ts\n\n\nfunction filtered(collection, comparator) {\n  return !comparator ? collection : collection.filter(comparator);\n} // @require ./type_checking.ts\n\n\nvar splitValuesRe = /\\S+/g;\n\nfunction getSplitValues(str) {\n  return isString(str) ? str.match(splitValuesRe) || [] : [];\n}\n\nfn.hasClass = function (cls) {\n  return !!cls && some.call(this, function (ele) {\n    return isElement(ele) && ele.classList.contains(cls);\n  });\n};\n\nfn.removeAttr = function (attr) {\n  var attrs = getSplitValues(attr);\n  return this.each(function (i, ele) {\n    if (!isElement(ele)) return;\n    each(attrs, function (i, a) {\n      ele.removeAttribute(a);\n    });\n  });\n};\n\nfunction attr(attr, value) {\n  if (!attr) return;\n\n  if (isString(attr)) {\n    if (arguments.length < 2) {\n      if (!this[0] || !isElement(this[0])) return;\n      var value_1 = this[0].getAttribute(attr);\n      return isNull(value_1) ? undefined : value_1;\n    }\n\n    if (isUndefined(value)) return this;\n    if (isNull(value)) return this.removeAttr(attr);\n    return this.each(function (i, ele) {\n      if (!isElement(ele)) return;\n      ele.setAttribute(attr, value);\n    });\n  }\n\n  for (var key in attr) {\n    this.attr(key, attr[key]);\n  }\n\n  return this;\n}\n\nfn.attr = attr;\n\nfn.toggleClass = function (cls, force) {\n  var classes = getSplitValues(cls),\n      isForce = !isUndefined(force);\n  return this.each(function (i, ele) {\n    if (!isElement(ele)) return;\n    each(classes, function (i, c) {\n      if (isForce) {\n        force ? ele.classList.add(c) : ele.classList.remove(c);\n      } else {\n        ele.classList.toggle(c);\n      }\n    });\n  });\n};\n\nfn.addClass = function (cls) {\n  return this.toggleClass(cls, true);\n};\n\nfn.removeClass = function (cls) {\n  if (arguments.length) return this.toggleClass(cls, false);\n  return this.attr('class', '');\n};\n\nfunction pluck(arr, prop, deep, until) {\n  var plucked = [],\n      isCallback = isFunction(prop),\n      compare = until && getCompareFunction(until);\n\n  for (var i = 0, l = arr.length; i < l; i++) {\n    if (isCallback) {\n      var val_1 = prop(arr[i]);\n      if (val_1.length) push.apply(plucked, val_1);\n    } else {\n      var val_2 = arr[i][prop];\n\n      while (val_2 != null) {\n        if (until && compare(-1, val_2)) break;\n        plucked.push(val_2);\n        val_2 = deep ? val_2[prop] : null;\n      }\n    }\n  }\n\n  return plucked;\n}\n\nfunction unique(arr) {\n  return arr.length > 1 ? filter.call(arr, function (item, index, self) {\n    return indexOf.call(self, item) === index;\n  }) : arr;\n}\n\ncash.unique = unique;\n\nfn.add = function (selector, context) {\n  return cash(unique(this.get().concat(cash(selector, context).get())));\n}; // @require core/type_checking.ts\n// @require core/variables.ts\n\n\nfunction computeStyle(ele, prop, isVariable) {\n  if (!isElement(ele)) return;\n  var style = win.getComputedStyle(ele, null);\n  return isVariable ? style.getPropertyValue(prop) || undefined : style[prop] || ele.style[prop];\n} // @require ./compute_style.ts\n\n\nfunction computeStyleInt(ele, prop) {\n  return parseInt(computeStyle(ele, prop), 10) || 0;\n}\n\nvar cssVariableRe = /^--/; // @require ./variables.ts\n\nfunction isCSSVariable(prop) {\n  return cssVariableRe.test(prop);\n} // @require core/camel_case.ts\n// @require core/cash.ts\n// @require core/each.ts\n// @require core/variables.ts\n// @require ./is_css_variable.ts\n\n\nvar prefixedProps = {},\n    style = div.style,\n    vendorsPrefixes = ['webkit', 'moz', 'ms'];\n\nfunction getPrefixedProp(prop, isVariable) {\n  if (isVariable === void 0) {\n    isVariable = isCSSVariable(prop);\n  }\n\n  if (isVariable) return prop;\n\n  if (!prefixedProps[prop]) {\n    var propCC = camelCase(prop),\n        propUC = \"\" + propCC[0].toUpperCase() + propCC.slice(1),\n        props = (propCC + \" \" + vendorsPrefixes.join(propUC + \" \") + propUC).split(' ');\n    each(props, function (i, p) {\n      if (p in style) {\n        prefixedProps[prop] = p;\n        return false;\n      }\n    });\n  }\n\n  return prefixedProps[prop];\n}\n\n; // @require core/type_checking.ts\n// @require ./is_css_variable.ts\n\nvar numericProps = {\n  animationIterationCount: true,\n  columnCount: true,\n  flexGrow: true,\n  flexShrink: true,\n  fontWeight: true,\n  gridArea: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnStart: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowStart: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  widows: true,\n  zIndex: true\n};\n\nfunction getSuffixedValue(prop, value, isVariable) {\n  if (isVariable === void 0) {\n    isVariable = isCSSVariable(prop);\n  }\n\n  return !isVariable && !numericProps[prop] && isNumeric(value) ? value + \"px\" : value;\n}\n\nfunction css(prop, value) {\n  if (isString(prop)) {\n    var isVariable_1 = isCSSVariable(prop);\n    prop = getPrefixedProp(prop, isVariable_1);\n    if (arguments.length < 2) return this[0] && computeStyle(this[0], prop, isVariable_1);\n    if (!prop) return this;\n    value = getSuffixedValue(prop, value, isVariable_1);\n    return this.each(function (i, ele) {\n      if (!isElement(ele)) return;\n\n      if (isVariable_1) {\n        ele.style.setProperty(prop, value);\n      } else {\n        ele.style[prop] = value;\n      }\n    });\n  }\n\n  for (var key in prop) {\n    this.css(key, prop[key]);\n  }\n\n  return this;\n}\n\n;\nfn.css = css; // @optional ./css.ts\n// @require core/attempt.ts\n// @require core/camel_case.ts\n\nvar JSONStringRe = /^\\s+|\\s+$/;\n\nfunction getData(ele, key) {\n  var value = ele.dataset[key] || ele.dataset[camelCase(key)];\n  if (JSONStringRe.test(value)) return value;\n  return attempt(JSON.parse, value);\n} // @require core/attempt.ts\n// @require core/camel_case.ts\n\n\nfunction setData(ele, key, value) {\n  value = attempt(JSON.stringify, value);\n  ele.dataset[camelCase(key)] = value;\n}\n\nfunction data(name, value) {\n  if (!name) {\n    if (!this[0]) return;\n    var datas = {};\n\n    for (var key in this[0].dataset) {\n      datas[key] = getData(this[0], key);\n    }\n\n    return datas;\n  }\n\n  if (isString(name)) {\n    if (arguments.length < 2) return this[0] && getData(this[0], name);\n    if (isUndefined(value)) return this;\n    return this.each(function (i, ele) {\n      setData(ele, name, value);\n    });\n  }\n\n  for (var key in name) {\n    this.data(key, name[key]);\n  }\n\n  return this;\n}\n\nfn.data = data; // @optional ./data.ts\n\nfunction getDocumentDimension(doc, dimension) {\n  var docEle = doc.documentElement;\n  return Math.max(doc.body[\"scroll\" + dimension], docEle[\"scroll\" + dimension], doc.body[\"offset\" + dimension], docEle[\"offset\" + dimension], docEle[\"client\" + dimension]);\n} // @require css/helpers/compute_style_int.ts\n\n\nfunction getExtraSpace(ele, xAxis) {\n  return computeStyleInt(ele, \"border\" + (xAxis ? 'Left' : 'Top') + \"Width\") + computeStyleInt(ele, \"padding\" + (xAxis ? 'Left' : 'Top')) + computeStyleInt(ele, \"padding\" + (xAxis ? 'Right' : 'Bottom')) + computeStyleInt(ele, \"border\" + (xAxis ? 'Right' : 'Bottom') + \"Width\");\n}\n\neach([true, false], function (i, outer) {\n  each(['Width', 'Height'], function (i, prop) {\n    var name = \"\" + (outer ? 'outer' : 'inner') + prop;\n\n    fn[name] = function (includeMargins) {\n      if (!this[0]) return;\n      if (isWindow(this[0])) return outer ? this[0][\"inner\" + prop] : this[0].document.documentElement[\"client\" + prop];\n      if (isDocument(this[0])) return getDocumentDimension(this[0], prop);\n      return this[0][\"\" + (outer ? 'offset' : 'client') + prop] + (includeMargins && outer ? computeStyleInt(this[0], \"margin\" + (i ? 'Top' : 'Left')) + computeStyleInt(this[0], \"margin\" + (i ? 'Bottom' : 'Right')) : 0);\n    };\n  });\n});\neach(['Width', 'Height'], function (index, prop) {\n  var propLC = prop.toLowerCase();\n\n  fn[propLC] = function (value) {\n    if (!this[0]) return isUndefined(value) ? undefined : this;\n\n    if (!arguments.length) {\n      if (isWindow(this[0])) return this[0].document.documentElement[\"client\" + prop];\n      if (isDocument(this[0])) return getDocumentDimension(this[0], prop);\n      return this[0].getBoundingClientRect()[propLC] - getExtraSpace(this[0], !index);\n    }\n\n    var valueNumber = parseInt(value, 10);\n    return this.each(function (i, ele) {\n      if (!isElement(ele)) return;\n      var boxSizing = computeStyle(ele, 'boxSizing');\n      ele.style[propLC] = getSuffixedValue(propLC, valueNumber + (boxSizing === 'border-box' ? getExtraSpace(ele, !index) : 0));\n    });\n  };\n}); // @optional ./inner_outer.ts\n// @optional ./normal.ts\n// @require css/helpers/compute_style.ts\n\nvar defaultDisplay = {};\n\nfunction getDefaultDisplay(tagName) {\n  if (defaultDisplay[tagName]) return defaultDisplay[tagName];\n  var ele = createElement(tagName);\n  doc.body.insertBefore(ele, null);\n  var display = computeStyle(ele, 'display');\n  doc.body.removeChild(ele);\n  return defaultDisplay[tagName] = display !== 'none' ? display : 'block';\n} // @require css/helpers/compute_style.ts\n\n\nfunction isHidden(ele) {\n  return computeStyle(ele, 'display') === 'none';\n}\n\nvar displayProperty = '___cd';\n\nfn.toggle = function (force) {\n  return this.each(function (i, ele) {\n    if (!isElement(ele)) return;\n    var show = isUndefined(force) ? isHidden(ele) : force;\n\n    if (show) {\n      ele.style.display = ele[displayProperty] || '';\n\n      if (isHidden(ele)) {\n        ele.style.display = getDefaultDisplay(ele.tagName);\n      }\n    } else {\n      ele[displayProperty] = computeStyle(ele, 'display');\n      ele.style.display = 'none';\n    }\n  });\n};\n\nfn.hide = function () {\n  return this.toggle(false);\n};\n\nfn.show = function () {\n  return this.toggle(true);\n}; // @optional ./hide.ts\n// @optional ./show.ts\n// @optional ./toggle.ts\n\n\nfunction hasNamespaces(ns1, ns2) {\n  return !ns2 || !some.call(ns2, function (ns) {\n    return ns1.indexOf(ns) < 0;\n  });\n}\n\nvar eventsNamespace = '___ce',\n    eventsNamespacesSeparator = '.',\n    eventsFocus = {\n  focus: 'focusin',\n  blur: 'focusout'\n},\n    eventsHover = {\n  mouseenter: 'mouseover',\n  mouseleave: 'mouseout'\n},\n    eventsMouseRe = /^(mouse|pointer|contextmenu|drag|drop|click|dblclick)/i; // @require ./variables.ts\n\nfunction getEventNameBubbling(name) {\n  return eventsHover[name] || eventsFocus[name] || name;\n} // @require ./variables.ts\n\n\nfunction getEventsCache(ele) {\n  return ele[eventsNamespace] = ele[eventsNamespace] || {};\n} // @require core/guid.ts\n// @require events/helpers/get_events_cache.ts\n\n\nfunction addEvent(ele, name, namespaces, selector, callback) {\n  var eventCache = getEventsCache(ele);\n  eventCache[name] = eventCache[name] || [];\n  eventCache[name].push([namespaces, selector, callback]);\n  ele.addEventListener(name, callback);\n} // @require ./variables.ts\n\n\nfunction parseEventName(eventName) {\n  var parts = eventName.split(eventsNamespacesSeparator);\n  return [parts[0], parts.slice(1).sort()]; // [name, namespace[]]\n} // @require ./get_events_cache.ts\n// @require ./has_namespaces.ts\n// @require ./parse_event_name.ts\n\n\nfunction removeEvent(ele, name, namespaces, selector, callback) {\n  var cache = getEventsCache(ele);\n\n  if (!name) {\n    for (name in cache) {\n      removeEvent(ele, name, namespaces, selector, callback);\n    }\n  } else if (cache[name]) {\n    cache[name] = cache[name].filter(function (_a) {\n      var ns = _a[0],\n          sel = _a[1],\n          cb = _a[2];\n      if (callback && cb.guid !== callback.guid || !hasNamespaces(ns, namespaces) || selector && selector !== sel) return true;\n      ele.removeEventListener(name, cb);\n    });\n  }\n}\n\nfn.off = function (eventFullName, selector, callback) {\n  var _this = this;\n\n  if (isUndefined(eventFullName)) {\n    this.each(function (i, ele) {\n      if (!isElement(ele) && !isDocument(ele) && !isWindow(ele)) return;\n      removeEvent(ele);\n    });\n  } else if (!isString(eventFullName)) {\n    for (var key in eventFullName) {\n      this.off(key, eventFullName[key]);\n    }\n  } else {\n    if (isFunction(selector)) {\n      callback = selector;\n      selector = '';\n    }\n\n    each(getSplitValues(eventFullName), function (i, eventFullName) {\n      var _a = parseEventName(eventFullName),\n          nameOriginal = _a[0],\n          namespaces = _a[1],\n          name = getEventNameBubbling(nameOriginal);\n\n      _this.each(function (i, ele) {\n        if (!isElement(ele) && !isDocument(ele) && !isWindow(ele)) return;\n        removeEvent(ele, name, namespaces, selector, callback);\n      });\n    });\n  }\n\n  return this;\n};\n\nfunction on(eventFullName, selector, data, callback, _one) {\n  var _this = this;\n\n  if (!isString(eventFullName)) {\n    for (var key in eventFullName) {\n      this.on(key, selector, data, eventFullName[key], _one);\n    }\n\n    return this;\n  }\n\n  if (!isString(selector)) {\n    if (isUndefined(selector) || isNull(selector)) {\n      selector = '';\n    } else if (isUndefined(data)) {\n      data = selector;\n      selector = '';\n    } else {\n      callback = data;\n      data = selector;\n      selector = '';\n    }\n  }\n\n  if (!isFunction(callback)) {\n    callback = data;\n    data = undefined;\n  }\n\n  if (!callback) return this;\n  each(getSplitValues(eventFullName), function (i, eventFullName) {\n    var _a = parseEventName(eventFullName),\n        nameOriginal = _a[0],\n        namespaces = _a[1],\n        name = getEventNameBubbling(nameOriginal),\n        isEventHover = (nameOriginal in eventsHover),\n        isEventFocus = (nameOriginal in eventsFocus);\n\n    if (!name) return;\n\n    _this.each(function (i, ele) {\n      if (!isElement(ele) && !isDocument(ele) && !isWindow(ele)) return;\n\n      var finalCallback = function finalCallback(event) {\n        if (event.target[\"___i\" + event.type]) return event.stopImmediatePropagation(); // Ignoring native event in favor of the upcoming custom one\n\n        if (event.namespace && !hasNamespaces(namespaces, event.namespace.split(eventsNamespacesSeparator))) return;\n        if (!selector && (isEventFocus && (event.target !== ele || event.___ot === name) || isEventHover && event.relatedTarget && ele.contains(event.relatedTarget))) return;\n        var thisArg = ele;\n\n        if (selector) {\n          var target = event.target;\n\n          while (!matches(target, selector)) {\n            if (target === ele) return;\n            target = target.parentNode;\n            if (!target) return;\n          }\n\n          thisArg = target;\n        }\n\n        Object.defineProperty(event, 'currentTarget', {\n          configurable: true,\n          get: function get() {\n            return thisArg;\n          }\n        });\n        Object.defineProperty(event, 'delegateTarget', {\n          configurable: true,\n          get: function get() {\n            return ele;\n          }\n        });\n        Object.defineProperty(event, 'data', {\n          configurable: true,\n          get: function get() {\n            return data;\n          }\n        });\n        var returnValue = callback.call(thisArg, event, event.___td);\n\n        if (_one) {\n          removeEvent(ele, name, namespaces, selector, finalCallback);\n        }\n\n        if (returnValue === false) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n      };\n\n      finalCallback.guid = callback.guid = callback.guid || cash.guid++;\n      addEvent(ele, name, namespaces, selector, finalCallback);\n    });\n  });\n  return this;\n}\n\nfn.on = on;\n\nfunction one(eventFullName, selector, data, callback) {\n  return this.on(eventFullName, selector, data, callback, true);\n}\n\n;\nfn.one = one;\n\nfn.ready = function (callback) {\n  var cb = function cb() {\n    return setTimeout(callback, 0, cash);\n  };\n\n  if (doc.readyState !== 'loading') {\n    cb();\n  } else {\n    doc.addEventListener('DOMContentLoaded', cb);\n  }\n\n  return this;\n};\n\nfn.trigger = function (event, data) {\n  if (isString(event)) {\n    var _a = parseEventName(event),\n        nameOriginal = _a[0],\n        namespaces = _a[1],\n        name_1 = getEventNameBubbling(nameOriginal);\n\n    if (!name_1) return this;\n    var type = eventsMouseRe.test(name_1) ? 'MouseEvents' : 'HTMLEvents';\n    event = doc.createEvent(type);\n    event.initEvent(name_1, true, true);\n    event.namespace = namespaces.join(eventsNamespacesSeparator);\n    event.___ot = nameOriginal;\n  }\n\n  event.___td = data;\n  var isEventFocus = (event.___ot in eventsFocus);\n  return this.each(function (i, ele) {\n    if (isEventFocus && isFunction(ele[event.___ot])) {\n      ele[\"___i\" + event.type] = true; // Ensuring the native event is ignored\n\n      ele[event.___ot]();\n\n      ele[\"___i\" + event.type] = false; // Ensuring the custom event is not ignored\n    }\n\n    ele.dispatchEvent(event);\n  });\n}; // @optional ./off.ts\n// @optional ./on.ts\n// @optional ./one.ts\n// @optional ./ready.ts\n// @optional ./trigger.ts\n// @require core/pluck.ts\n// @require core/variables.ts\n\n\nfunction getValue(ele) {\n  if (ele.multiple && ele.options) return pluck(filter.call(ele.options, function (option) {\n    return option.selected && !option.disabled && !option.parentNode.disabled;\n  }), 'value');\n  return ele.value || '';\n}\n\nvar queryEncodeSpaceRe = /%20/g,\n    queryEncodeCRLFRe = /\\r?\\n/g;\n\nfunction queryEncode(prop, value) {\n  return \"&\" + encodeURIComponent(prop) + \"=\" + encodeURIComponent(value.replace(queryEncodeCRLFRe, '\\r\\n')).replace(queryEncodeSpaceRe, '+');\n}\n\nvar skippableRe = /file|reset|submit|button|image/i,\n    checkableRe = /radio|checkbox/i;\n\nfn.serialize = function () {\n  var query = '';\n  this.each(function (i, ele) {\n    each(ele.elements || [ele], function (i, ele) {\n      if (ele.disabled || !ele.name || ele.tagName === 'FIELDSET' || skippableRe.test(ele.type) || checkableRe.test(ele.type) && !ele.checked) return;\n      var value = getValue(ele);\n\n      if (!isUndefined(value)) {\n        var values = isArray(value) ? value : [value];\n        each(values, function (i, value) {\n          query += queryEncode(ele.name, value);\n        });\n      }\n    });\n  });\n  return query.slice(1);\n};\n\nfunction val(value) {\n  if (!arguments.length) return this[0] && getValue(this[0]);\n  return this.each(function (i, ele) {\n    var isSelect = ele.multiple && ele.options;\n\n    if (isSelect || checkableRe.test(ele.type)) {\n      var eleValue_1 = isArray(value) ? map.call(value, String) : isNull(value) ? [] : [String(value)];\n\n      if (isSelect) {\n        each(ele.options, function (i, option) {\n          option.selected = eleValue_1.indexOf(option.value) >= 0;\n        }, true);\n      } else {\n        ele.checked = eleValue_1.indexOf(ele.value) >= 0;\n      }\n    } else {\n      ele.value = isUndefined(value) || isNull(value) ? '' : value;\n    }\n  });\n}\n\nfn.val = val;\n\nfn.clone = function () {\n  return this.map(function (i, ele) {\n    return ele.cloneNode(true);\n  });\n};\n\nfn.detach = function (comparator) {\n  filtered(this, comparator).each(function (i, ele) {\n    if (ele.parentNode) {\n      ele.parentNode.removeChild(ele);\n    }\n  });\n  return this;\n};\n\nvar fragmentRe = /^\\s*<(\\w+)[^>]*>/,\n    singleTagRe = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>)?$/;\nvar containers = {\n  '*': div,\n  tr: tbody,\n  td: tr,\n  th: tr,\n  thead: table,\n  tbody: table,\n  tfoot: table\n}; //TODO: Create elements inside a document fragment, in order to prevent inline event handlers from firing\n//TODO: Ensure the created elements have the fragment as their parent instead of null, this also ensures we can deal with detatched nodes more reliably\n\nfunction parseHTML(html) {\n  if (!isString(html)) return [];\n  if (singleTagRe.test(html)) return [createElement(RegExp.$1)];\n  var fragment = fragmentRe.test(html) && RegExp.$1,\n      container = containers[fragment] || containers['*'];\n  container.innerHTML = html;\n  return cash(container.childNodes).detach().get();\n}\n\ncash.parseHTML = parseHTML;\n\nfn.empty = function () {\n  return this.each(function (i, ele) {\n    while (ele.firstChild) {\n      ele.removeChild(ele.firstChild);\n    }\n  });\n};\n\nfunction html(html) {\n  if (!arguments.length) return this[0] && this[0].innerHTML;\n  if (isUndefined(html)) return this;\n  return this.each(function (i, ele) {\n    if (!isElement(ele)) return;\n    ele.innerHTML = html;\n  });\n}\n\nfn.html = html;\n\nfn.remove = function (comparator) {\n  filtered(this, comparator).detach().off();\n  return this;\n};\n\nfunction text(text) {\n  if (isUndefined(text)) return this[0] ? this[0].textContent : '';\n  return this.each(function (i, ele) {\n    if (!isElement(ele)) return;\n    ele.textContent = text;\n  });\n}\n\n;\nfn.text = text;\n\nfn.unwrap = function () {\n  this.parent().each(function (i, ele) {\n    if (ele.tagName === 'BODY') return;\n    var $ele = cash(ele);\n    $ele.replaceWith($ele.children());\n  });\n  return this;\n};\n\nfn.offset = function () {\n  var ele = this[0];\n  if (!ele) return;\n  var rect = ele.getBoundingClientRect();\n  return {\n    top: rect.top + win.pageYOffset,\n    left: rect.left + win.pageXOffset\n  };\n};\n\nfn.offsetParent = function () {\n  return this.map(function (i, ele) {\n    var offsetParent = ele.offsetParent;\n\n    while (offsetParent && computeStyle(offsetParent, 'position') === 'static') {\n      offsetParent = offsetParent.offsetParent;\n    }\n\n    return offsetParent || docEle;\n  });\n};\n\nfn.position = function () {\n  var ele = this[0];\n  if (!ele) return;\n  var isFixed = computeStyle(ele, 'position') === 'fixed',\n      offset = isFixed ? ele.getBoundingClientRect() : this.offset();\n\n  if (!isFixed) {\n    var doc_1 = ele.ownerDocument;\n    var offsetParent = ele.offsetParent || doc_1.documentElement;\n\n    while ((offsetParent === doc_1.body || offsetParent === doc_1.documentElement) && computeStyle(offsetParent, 'position') === 'static') {\n      offsetParent = offsetParent.parentNode;\n    }\n\n    if (offsetParent !== ele && isElement(offsetParent)) {\n      var parentOffset = cash(offsetParent).offset();\n      offset.top -= parentOffset.top + computeStyleInt(offsetParent, 'borderTopWidth');\n      offset.left -= parentOffset.left + computeStyleInt(offsetParent, 'borderLeftWidth');\n    }\n  }\n\n  return {\n    top: offset.top - computeStyleInt(ele, 'marginTop'),\n    left: offset.left - computeStyleInt(ele, 'marginLeft')\n  };\n};\n\nfn.children = function (comparator) {\n  return filtered(cash(unique(pluck(this, function (ele) {\n    return ele.children;\n  }))), comparator);\n};\n\nfn.contents = function () {\n  return cash(unique(pluck(this, function (ele) {\n    return ele.tagName === 'IFRAME' ? [ele.contentDocument] : ele.tagName === 'TEMPLATE' ? ele.content.childNodes : ele.childNodes;\n  })));\n};\n\nfn.find = function (selector) {\n  return cash(unique(pluck(this, function (ele) {\n    return find(selector, ele);\n  })));\n}; // @require core/variables.ts\n// @require collection/filter.ts\n// @require traversal/find.ts\n\n\nvar HTMLCDATARe = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,\n    scriptTypeRe = /^$|^module$|\\/(java|ecma)script/i,\n    scriptAttributes = ['type', 'src', 'nonce', 'noModule'];\n\nfunction evalScripts(node, doc) {\n  var collection = cash(node);\n  collection.filter('script').add(collection.find('script')).each(function (i, ele) {\n    if (scriptTypeRe.test(ele.type) && docEle.contains(ele)) {\n      // The script type is supported // The element is attached to the DOM // Using `documentElement` for broader browser support\n      var script_1 = createElement('script');\n      script_1.text = ele.textContent.replace(HTMLCDATARe, '');\n      each(scriptAttributes, function (i, attr) {\n        if (ele[attr]) script_1[attr] = ele[attr];\n      });\n      doc.head.insertBefore(script_1, null);\n      doc.head.removeChild(script_1);\n    }\n  });\n} // @require ./eval_scripts.ts\n\n\nfunction insertElement(anchor, target, left, inside, evaluate) {\n  if (inside) {\n    // prepend/append\n    anchor.insertBefore(target, left ? anchor.firstChild : null);\n  } else {\n    // before/after\n    if (anchor.nodeName === 'HTML') {\n      anchor.parentNode.replaceChild(target, anchor);\n    } else {\n      anchor.parentNode.insertBefore(target, left ? anchor : anchor.nextSibling);\n    }\n  }\n\n  if (evaluate) {\n    evalScripts(target, anchor.ownerDocument);\n  }\n} // @require ./insert_element.ts\n\n\nfunction insertSelectors(selectors, anchors, inverse, left, inside, reverseLoop1, reverseLoop2, reverseLoop3) {\n  each(selectors, function (si, selector) {\n    each(cash(selector), function (ti, target) {\n      each(cash(anchors), function (ai, anchor) {\n        var anchorFinal = inverse ? target : anchor,\n            targetFinal = inverse ? anchor : target,\n            indexFinal = inverse ? ti : ai;\n        insertElement(anchorFinal, !indexFinal ? targetFinal : targetFinal.cloneNode(true), left, inside, !indexFinal);\n      }, reverseLoop3);\n    }, reverseLoop2);\n  }, reverseLoop1);\n  return anchors;\n}\n\nfn.after = function () {\n  return insertSelectors(arguments, this, false, false, false, true, true);\n};\n\nfn.append = function () {\n  return insertSelectors(arguments, this, false, false, true);\n};\n\nfn.appendTo = function (selector) {\n  return insertSelectors(arguments, this, true, false, true);\n};\n\nfn.before = function () {\n  return insertSelectors(arguments, this, false, true);\n};\n\nfn.insertAfter = function (selector) {\n  return insertSelectors(arguments, this, true, false, false, false, false, true);\n};\n\nfn.insertBefore = function (selector) {\n  return insertSelectors(arguments, this, true, true);\n};\n\nfn.prepend = function () {\n  return insertSelectors(arguments, this, false, true, true, true, true);\n};\n\nfn.prependTo = function (selector) {\n  return insertSelectors(arguments, this, true, true, true, false, false, true);\n};\n\nfn.replaceWith = function (selector) {\n  return this.before(selector).remove();\n};\n\nfn.replaceAll = function (selector) {\n  cash(selector).replaceWith(this);\n  return this;\n};\n\nfn.wrapAll = function (selector) {\n  var structure = cash(selector),\n      wrapper = structure[0];\n\n  while (wrapper.children.length) {\n    wrapper = wrapper.firstElementChild;\n  }\n\n  this.first().before(structure);\n  return this.appendTo(wrapper);\n};\n\nfn.wrap = function (selector) {\n  return this.each(function (i, ele) {\n    var wrapper = cash(selector)[0];\n    cash(ele).wrapAll(!i ? wrapper : wrapper.cloneNode(true));\n  });\n};\n\nfn.wrapInner = function (selector) {\n  return this.each(function (i, ele) {\n    var $ele = cash(ele),\n        contents = $ele.contents();\n    contents.length ? contents.wrapAll(selector) : $ele.append(selector);\n  });\n};\n\nfn.has = function (selector) {\n  var comparator = isString(selector) ? function (i, ele) {\n    return find(selector, ele).length;\n  } : function (i, ele) {\n    return ele.contains(selector);\n  };\n  return this.filter(comparator);\n};\n\nfn.is = function (comparator) {\n  var compare = getCompareFunction(comparator);\n  return some.call(this, function (ele, i) {\n    return compare.call(ele, i, ele);\n  });\n};\n\nfn.next = function (comparator, _all, _until) {\n  return filtered(cash(unique(pluck(this, 'nextElementSibling', _all, _until))), comparator);\n};\n\nfn.nextAll = function (comparator) {\n  return this.next(comparator, true);\n};\n\nfn.nextUntil = function (until, comparator) {\n  return this.next(comparator, true, until);\n};\n\nfn.not = function (comparator) {\n  var compare = getCompareFunction(comparator);\n  return this.filter(function (i, ele) {\n    return (!isString(comparator) || isElement(ele)) && !compare.call(ele, i, ele);\n  });\n};\n\nfn.parent = function (comparator) {\n  return filtered(cash(unique(pluck(this, 'parentNode'))), comparator);\n};\n\nfn.index = function (selector) {\n  var child = selector ? cash(selector)[0] : this[0],\n      collection = selector ? this : cash(child).parent().children();\n  return indexOf.call(collection, child);\n};\n\nfn.closest = function (comparator) {\n  var filtered = this.filter(comparator);\n  if (filtered.length) return filtered;\n  var $parent = this.parent();\n  if (!$parent.length) return filtered;\n  return $parent.closest(comparator);\n};\n\nfn.parents = function (comparator, _until) {\n  return filtered(cash(unique(pluck(this, 'parentElement', true, _until))), comparator);\n};\n\nfn.parentsUntil = function (until, comparator) {\n  return this.parents(comparator, until);\n};\n\nfn.prev = function (comparator, _all, _until) {\n  return filtered(cash(unique(pluck(this, 'previousElementSibling', _all, _until))), comparator);\n};\n\nfn.prevAll = function (comparator) {\n  return this.prev(comparator, true);\n};\n\nfn.prevUntil = function (until, comparator) {\n  return this.prev(comparator, true, until);\n};\n\nfn.siblings = function (comparator) {\n  return filtered(cash(unique(pluck(this, function (ele) {\n    return cash(ele).parent().children().not(ele);\n  }))), comparator);\n}; // @optional ./children.ts\n// @optional ./closest.ts\n// @optional ./contents.ts\n// @optional ./find.ts\n// @optional ./has.ts\n// @optional ./is.ts\n// @optional ./next.ts\n// @optional ./next_all.ts\n// @optional ./next_until.ts\n// @optional ./not.ts\n// @optional ./parent.ts\n// @optional ./parents.ts\n// @optional ./parents_until.ts\n// @optional ./prev.ts\n// @optional ./prev_all.ts\n// @optional ./prev_until.ts\n// @optional ./siblings.ts\n// @optional attributes/index.ts\n// @optional collection/index.ts\n// @optional css/index.ts\n// @optional data/index.ts\n// @optional dimensions/index.ts\n// @optional effects/index.ts\n// @optional events/index.ts\n// @optional forms/index.ts\n// @optional manipulation/index.ts\n// @optional offset/index.ts\n// @optional traversal/index.ts\n// @require core/index.ts\n// @priority -100\n// @require ./cash.ts\n// @require ./variables.ts\n\n\nif (typeof exports !== 'undefined') {\n  // Node.js\n  module.exports = cash;\n} else {\n  // Browser\n  win['cash'] = win['$'] = cash;\n}\n})();","import { createClient } from \"@supabase/supabase-js\";\nimport $ from \"cash-dom\";\n\n// Create a single supabase client for interacting with your database\nconst supabase = createClient(\"https://gwcnruxqmtukvguyhuga.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imd3Y25ydXhxbXR1a3ZndXlodWdhIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NDk5MjI5MTIsImV4cCI6MTk2NTQ5ODkxMn0.Cpm-Myt5YdzFrRzYcWWaFxVDiyQWeJCD3dTZBvRlcp4\");\n\nconst $toast = $(\"#toast\");\nconst $status = $(\"#status\");\nconst $signed_out = $(\"#signed-out\");\nconst $restaurants = $(\"#restaurants\");\nconst $order_details = $(\"#order-details\");\nconst $sign_in = $(\"#sign-in\");\n\nfunction show_toast(message: string, duration: number = 2000) {\n    $toast.text(message).show();\n    // After duration, slide the toast out of view\n    setTimeout(() => $toast.addClass(\"slide-down\"), duration);\n    setTimeout(() => $toast.removeClass(\"slide-down\").hide(), duration + 500);\n}\n\nfunction update_dom() {\n    let user = supabase.auth.user();\n    if (user === null) {\n        // If the user is signed out\n        $status.hide();\n        $signed_out.show();\n        $order_details.hide();\n        $restaurants.show().removeClass(\"fade\");\n    } else {\n        // If the user is signed in\n        $signed_out.hide();\n        $(\".netid\").text(user.email.slice(0, -13).toUpperCase());\n        $status.show();\n    }\n}\n\n// Run once initially\nupdate_dom();\n// Run whenever auth state changes\nsupabase.auth.onAuthStateChange(update_dom);\n\n$(\"#sign-out\").on(\"click\", () => supabase.auth.signOut()\n    .then(_response => {\n        show_toast(\"Signed out successfully\");\n    })\n    .catch(err => show_toast(err.response.text)));\n\n// Dynamically populate the list of restaurants from the database\nsupabase\n    .from(\"restaurants\")\n    .select()\n    .then(result => {\n        if (result.error) {\n            show_toast(result.error.message, 5000);\n        } else if (result.data.length === 0) {\n            show_toast(\"No restaurants were found\", 5000);\n        } else {\n            for (let i = 0; i < result.data.length; i++) {\n                const { error, publicURL } = supabase.storage.from(\"restaurant-images\").getPublicUrl(result.data[i][\"image\"]);\n                if (error) {\n                    show_toast(error.message, 5000);\n                    return;\n                }\n                let id = result.data[i][\"id\"];\n                let name = result.data[i][\"name\"];\n                $restaurants.append(`<div class=\"restaurant\"\n                    data-id=\"${id}\" data-name=\"${name}\"\n                    style=\"background-image: url('${publicURL}')\">\n                        <h1>${name}</h1>\n                    </div>`);\n            }\n            // Add event handlers for all the restaurant buttons\n            $(\".restaurant\").on(\"click\", function() {\n                // Replace the list of restaurants with something else, so hide it\n                // Fade-out animation\n                $restaurants.addClass(\"fade\");\n                setTimeout(() => {\n                    $restaurants.hide();\n                    if (supabase.auth.user()) {\n                        // If the user is signed in, proceed with the order\n                        $order_details.data(\"id\", $(this).data(\"id\")).show();\n                        $(\"#order-details .name\").text($(this).data(\"name\"));\n                    } else {\n                        // If they're not signed in, make them sign in first\n                        $sign_in.show();\n                    }\n                }, 100);\n            });\n        }\n    }, error => show_toast(error, 5000));\n\n$sign_in.on(\"submit\", e => {\n    e.preventDefault();\n    // Sign the user in\n    const email: string = $(\"#netid\").val() + \"@utdallas.edu\";\n    supabase.auth.signIn({ email })\n        .then(response => {\n            if (response.error) {\n                show_toast(response.error.message, 5000);\n            } else {\n                $(\"body\").html(`<div id=\"check-email\">Check ${email} for a magic link to login</div>`);\n            }\n        })\n        .catch(err => show_toast(err.response.text));\n});\n\n$(\".back\").on(\"click\", () => {\n    $sign_in.hide();\n    $order_details.hide();\n    $restaurants.show().removeClass(\"fade\");\n});\n\n$order_details.on(\"submit\", e => {\n    e.preventDefault();\n    // Make the order by adding it to the database\n    const phone = $(\"#phone\").val();\n    supabase\n        .from(\"orders\")\n        .insert({\n            time_slot: $(\"#time-slot\").val(),\n            customer: supabase.auth.user().id,\n            restaurant: $order_details.data(\"id\"),\n            delivery_location: $(\"#location\").val(),\n            description: $(\"#description\").val(),\n            notes: phone.length ? phone : null,\n            cost: $(\"#delivery-fee\").val(),\n        })\n        .then((result) => {\n            if (result.error) {\n                show_toast(result.error.message, 5000);\n            } else {\n                show_toast(\"Order placed successfully!\");\n                // Reset forms and show restaurant list\n                $(\"form\").trigger(\"reset\");\n                $order_details.hide();\n                $restaurants.show().removeClass(\"fade\");\n            }\n        }, error => show_toast(error, 5000));\n});\n","import SupabaseClient from './SupabaseClient'\nimport { SupabaseClientOptions, SupabaseRealtimePayload } from './lib/types'\nimport { User as AuthUser, Session as AuthSession } from '@supabase/gotrue-js'\nexport * from '@supabase/gotrue-js'\nexport {\n  PostgrestResponse,\n  PostgrestSingleResponse,\n  PostgrestMaybeSingleResponse,\n  PostgrestError,\n} from '@supabase/postgrest-js'\nexport * from '@supabase/realtime-js'\n\n/**\n * Creates a new Supabase Client.\n */\nconst createClient = (\n  supabaseUrl: string,\n  supabaseKey: string,\n  options?: SupabaseClientOptions\n): SupabaseClient => {\n  return new SupabaseClient(supabaseUrl, supabaseKey, options)\n}\n\nexport {\n  createClient,\n  SupabaseClient,\n  SupabaseClientOptions,\n  SupabaseRealtimePayload,\n  AuthUser,\n  AuthSession,\n}\n"],"names":["global","self","this","__self__","F","fetch","DOMException","prototype","exports","support","Symbol","Blob","e","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","Object","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","map","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","type","rejected","Error","arrayBuffer","then","text","readAsText","chars","length","i","fromCharCode","join","readArrayBufferAsText","formData","decode","json","JSON","parse","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","methods","Request","input","options","method","upcased","url","credentials","mode","signal","toUpperCase","referrer","form","trim","split","bytes","replace","decodeURIComponent","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","err","message","stack","create","constructor","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","key","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","defineProperty","ponyfill","ctx","default","module","$91498d1f4c3baf47$var$naiveFallback","window","globalThis","configurable","__global__","$796658c002c495ce$export$88a84136db6a4b64","$3277443a2e2e5d0f$var$_getErrorMessage","msg","error_description","stringify","$3277443a2e2e5d0f$var$_handleRequest","fetcher","params","assign","$3277443a2e2e5d0f$var$_getRequestParams","noResolveJson","data","catch","$3277443a2e2e5d0f$var$handleError","$3277443a2e2e5d0f$export$3988ae62b71be9a3","$3277443a2e2e5d0f$export$299ba2dee77727e9","$3277443a2e2e5d0f$export$327f7b26ebf455db","$3277443a2e2e5d0f$export$cd7f480d6b8286c3","$1a3fe5970e3d678f$export$88a84136db6a4b64","$1a3fe5970e3d678f$export$5d04dceb9d38c3f8","lifetime","domain","path","sameSite","$72e0d3bffec5035c$var$serializeCookie","cookie","secure","val","opt","enc","encodeURIComponent","fieldContentRegExp","str","maxAge","isNaN","isFinite","Math","floor","expires","toUTCString","httpOnly","$72e0d3bffec5035c$var$serialize","Date","now","_a","_b","_c","$72e0d3bffec5035c$export$cabcf1eb6b547ccb","req","res","cookies","strCookies","c","host","endsWith","$72e0d3bffec5035c$var$isSecureEnvironment","previousCookies","getHeader","apply","$72e0d3bffec5035c$export$31cdeeae171a741d","setHeader","$4UH6f","parcelRequire","$d973bc9e69b2ee48$export$e02d0a488392f690","expiresIn","round","$d973bc9e69b2ee48$export$4e09c449d6c407f7","$d973bc9e69b2ee48$export$7a5418d73bdac342","href","results","RegExp","exec","$d973bc9e69b2ee48$export$98d92b1aa79f8cc7","customFetch","_fetch","$parcel$interopDefault","args","$ff5cc4af66e5f82d$export$2e2bcd8739ae039","_createRequestHeaders","jwt","cookieName","cookieOptions","getUrlForProvider","provider","urlParams","redirectTo","scopes","signUpWithEmail","email","password","queryString","$3277443a2e2e5d0f$exports","post","gotrue_meta_security","hcaptcha_token","captchaToken","session","expires_in","expires_at","signInWithEmail","signUpWithPhone","phone","signInWithPhone","signInWithOpenIDConnect","id_token","nonce","client_id","issuer","sendMagicLinkEmail","shouldCreateUser","create_user","sendMobileOTP","signOut","verifyMobileOTP","token","redirect_to","verifyOTP","inviteUserByEmail","resetPasswordForEmail","refreshAccessToken","refreshToken","refresh_token","setAuthCookie","end","event","access_token","deleteAuthCookie","getAuthCookieString","generateLink","createUser","attributes","user","listUsers","users","getUserById","uid","getUserByCookie","getUserError","getUser","updateUserById","put","deleteUser","remove","updateUser","__magic__","$9791ac9b23a0d4c4$export$ad067ce270531206","$9a8b3f4daaab0da4$var$DEFAULT_OPTIONS","autoRefreshToken","persistSession","detectSessionInUrl","multiTab","$9a8b3f4daaab0da4$export$2e2bcd8739ae039","signUp","_removeSession","api","_saveSession","_notifyAllSubscribers","id","signIn","oidc","_handleEmailSignIn","_handlePhoneSignIn","_callRefreshToken","currentUser","currentSession","_handleProviderSignIn","_handleOpenIDConnectSignIn","refreshSession","update","setSession","setAuth","token_type","getSessionFromUrl","provider_token","parseInt","storeSession","recoveryMode","hash","accessToken","onAuthStateChange","r","random","subscription","unsubscribe","stateChangeEmitters","delete","confirmed_at","email_confirmed_at","phone_confirmed_at","_recoverSession","localStorage","getItem","expiresAt","console","log","_recoverAndRefresh","x","refreshDurationBeforeExpires","_startAutoRefreshToken","_persistSession","setItem","refreshTokenTimer","clearTimeout","removeItem","setTimeout","unref","_listenForMultiTabEvents","newSession","newValue","Map","settings","$ff5cc4af66e5f82d$exports","$fd8d6f7ecee4c43f$export$8199a418bb09bd56","$9a8b3f4daaab0da4$exports","super","$87f7d0ca2a184629$export$3106e21688a06353","throwOnError","shouldThrowOnError","onfulfilled","onrejected","schema","includes","res1","$87f7d0ca2a184629$var$__awaiter","count","isReturnMinimal","countHeader","match","contentRange","_d","fetchError","details","hint","code","builder","$9b8fb9ba6c8fbbd0$export$2e2bcd8739ae039","$87f7d0ca2a184629$exports","PostgrestBuilder","select","columns","quoted","cleanedColumns","searchParams","order","column","ascending","nullsFirst","foreignTable","existingOrder","limit","range","from","to","keyOffset","keyLimit","abortSignal","single","maybeSingle","_this","csv","$62f5db1a66d48fa7$export$2e2bcd8739ae039","not","operator","or","filters","eq","neq","gt","gte","lt","lte","like","pattern","ilike","is","in","cleanedValues","s","contains","containedBy","rangeLt","rangeGt","rangeGte","rangeLte","rangeAdjacent","overlaps","textSearch","query","config","typePart","configPart","fts","plfts","phfts","wfts","filter","cs","cd","sl","sr","nxl","nxr","adj","ov","$7157e9f79303e90b$export$2e2bcd8739ae039","head","insert","upsert","onConflict","returning","prefersHeaders","unshift","reduce","acc","concat","uniqueColumns","Set","ignoreDuplicates","URL","$053814a4d9a3c4a2$export$2e2bcd8739ae039","rpc","$bf7319b12b9dc962$export$88a84136db6a4b64","$3184561a440c7b72$export$2e2bcd8739ae039","auth","table","fn","$463a20c8442d7454$export$4d213a7d364021dc","$463a20c8442d7454$export$20ce708a1f594c5e","record","skipTypes","rec_key","$463a20c8442d7454$export$c054edfec1afa88d","columnName","find","colType","$463a20c8442d7454$export$3df02a362b86a91","$463a20c8442d7454$var$noop","charAt","dataType","$463a20c8442d7454$export$45b10814cc054894","bool","$463a20c8442d7454$export$3c2e6d1b7583eee6","float4","float8","int2","int4","int8","numeric","oid","$463a20c8442d7454$export$a0a81dc3380ce7d3","jsonb","$463a20c8442d7454$export$d5b7a8bf56ee1fe2","timestamp","$463a20c8442d7454$export$eccf8c5d91d19e3a","abstime","date","daterange","int4range","int8range","money","reltime","time","timestamptz","timetz","tsrange","tstzrange","parsedValue","parseFloat","Number","lastIdx","closeBrace","arr","valTrim","_","$86f36c67720196a7$var$_globalThis","$86f36c67720196a7$var$NativeWebSocket","WebSocket","MozWebSocket","$86f36c67720196a7$var$W3CWebSocket","uri","protocols","$f0d40c690d7c40a6$exports","version","prop","$86f36c67720196a7$exports","w3cwebsocket","$9beb35519adf9fd9$export$88a84136db6a4b64","$9beb35519adf9fd9$export$a6d0320a1563d49e","$9beb35519adf9fd9$export$b83816118db74fe7","$9beb35519adf9fd9$export$8db7548e65d6ea55","$9beb35519adf9fd9$export$b2688bfb999f5751","$bb053df52b5c973e$export$2e2bcd8739ae039","reset","tries","timer","scheduleTimeout","timerCalc","$1c480000c3f83d39$export$2e2bcd8739ae039","rawPayload","_binaryDecode","decoder","TextDecoder","_decodeBroadcast","topicSize","getUint8","eventSize","offset","HEADER_LENGTH","topic","ref","payload","$6c7107bb4019b428$export$2e2bcd8739ae039","resend","timeout","_cancelRefEvent","refEvent","receivedResp","sent","_hasReceived","startTimeout","channel","socket","updatePayload","receive","recHooks","timeoutTimer","makeRef","replyEventName","_cancelTimeout","_matchReceive","$c0a00d2148d4a98b$export$2e2bcd8739ae039","on","trigger","destroy","off","h","rejoinUntilConnected","rejoinTimer","isConnected","rejoin","subscribe","joinedOnce","joinPush","onClose","close","onError","reason","bindings","bind","canPush","isJoined","pushEvent","pushBuffer","updateJoinPayload","state","leaving","joinRef","leavePush","leave","onMessage","isMember","isLeaving","leaveOpenTopic","joining","handledPayload","isClosed","closed","isErrored","errored","joined","isJoining","reconnectAfterMs","reply","$76641d7888f8a937$export$2e2bcd8739ae039","static","currentState","newState","onJoin","onLeave","cloneDeep","transformedState","transformState","joins","leaves","presences","newPresences","currentPresences","newPresenceIds","m","presence_id","curPresenceIds","joinedPresences","leftPresences","syncDiff","diff","joinedPresenceIds","curPresences","presenceIdsToRemove","presences1","chooser","_key","pres","func","metas","presence","caller","onSync","list","by","inPendingSyncState","opts","pendingDiffs","events","syncState","$585d058bdae8d43c$export$2e2bcd8739ae039","configs","binding","eventFilter","isEqual","obj1","obj2","k","$cd4b3129f08519b6$var$noop","$cd4b3129f08519b6$export$2e2bcd8739ae039","connect","conn","transport","endPointURL","binaryType","onopen","_onConnOpen","_onConnError","onmessage","onConnMessage","onclose","_onConnClose","disconnect","_reject","heartbeatTimer","clearInterval","reconnectTimer","kind","logger","onOpen","stateChangeCallbacks","connectionState","connecting","closing","channels","chanParams","isNewVersion","$cd4b3129f08519b6$var$__rest","chan","encode","sendBuffer","rawMessage","pendingHeartbeatRef","_appendParams","endPoint","vsn","newRef","user_token","dupChannel","_flushSendBuffer","setInterval","_sendHeartbeat","heartbeatIntervalMs","_triggerChanError","prefix","longpollerTimeout","serializer","websocket","$cd4b3129f08519b6$var$__awaiter","$15dc289341002a44$export$a1c0cbe03b169679","getPayloadRecords","records","new","old","$463a20c8442d7454$exports","convertChangeData","old_record","enrichedPayload","commit_timestamp","eventType","errors","tableName","userToken","$fa16ed25c9b079c4$export$d6b56fa12d975d17","_realtime","_subscription","_headers","_schema","_table","realtime","$bd9ab129bfc6e9f0$export$88a84136db6a4b64","$c08781b5383b8ae1$var$_getErrorMessage","$c08781b5383b8ae1$var$_handleRequest","parameters","$c08781b5383b8ae1$var$_getRequestParams","$c08781b5383b8ae1$var$handleError","$c08781b5383b8ae1$export$3988ae62b71be9a3","$c08781b5383b8ae1$export$299ba2dee77727e9","$c08781b5383b8ae1$export$327f7b26ebf455db","$c08781b5383b8ae1$export$cd7f480d6b8286c3","$781ab65ed1f6c2c7$export$98d92b1aa79f8cc7","$1853c4edeb3a3e90$export$698875e798f36d2d","listBuckets","$c08781b5383b8ae1$exports","getBucket","createBucket","public","updateBucket","emptyBucket","deleteBucket","$faf4599912246a1f$var$DEFAULT_SEARCH_OPTIONS","sortBy","$faf4599912246a1f$var$DEFAULT_FILE_OPTIONS","cacheControl","contentType","$faf4599912246a1f$export$f62f1779c09b9522","uploadOrUpdate","fileBody","fileOptions","cleanPath","_removeEmptyFolders","_path","_getFinalPath","Key","upload","move","fromPath","toPath","bucketId","sourceKey","destinationKey","copy","createSignedUrl","signedURL","createSignedUrls","paths","datum","download","getPublicUrl","publicURL","prefixes","$2eb783a76edf6e8b$export$6c85f5032e75eff9","$1853c4edeb3a3e90$exports","StorageBucketApi","$faf4599912246a1f$exports","StorageFileApi","$a2c72ad9e2247a38$export$1d0b400bf8a0fa55","Authorization","invoke","functionName","invokeOptions","isRelayError","$1837e2f814e6b26b$export$98d92b1aa79f8cc7","$cb2acc2586e63cf7$var$DEFAULT_OPTIONS","$cb2acc2586e63cf7$export$2e2bcd8739ae039","functions","$a2c72ad9e2247a38$exports","FunctionsClient","functionsUrl","_getAuthHeaders","storage","storageUrl","restUrl","_initPostgRESTClient","removeAllSubscriptions","allSubs","getSubscriptions","allSubPromises","sub","removeSubscription","all","_closeSubscription","openSubCount","openSubscriptions","unsubError","_unsubscribeSubscription","_initSupabaseAuthClient","authHeaders","supabaseKey","apikey","authUrl","_initRealtimeClient","$cd4b3129f08519b6$exports","realtimeUrl","authBearer","previousAccessToken","_handleTokenChanged","_listenForAuthEvents","source","changedAccessToken","supabaseUrl","_supabaseUrl","urlParts","propMap","class","contenteditable","for","readonly","maxlength","tabindex","colspan","rowspan","usemap","attempt","arg","doc1","document","win","docEle1","documentElement","createElement","div","tbody","tr","ArrayPrototype","some","splice","idRe","classRe","htmlRe","tagRe","selector","context","isFragment","nodeType","isDocument","isElement","getElementsByClassName","getElementsByTagName","querySelectorAll","Cash1","Cash","isCash","eles","isString","getElementById","parseHTML","isFunction","ready","l","fn1","cash","ele","start","dashAlphaRe","camelCase","letter","matches1","matches","isWindow","isBoolean","isUndefined","isNull","isNumeric","isPlainObject","proto","getPrototypeOf","each","_reverse","extend","sources","_i","arguments","deep","target","getCompareFunction","comparator","filtered1","collection","guid","index","first","last","removeProp","plugins","compare","splitValuesRe","getSplitValues","pluck","until","plucked","isCallback","val_1","val_2","unique","item","computeStyle","isVariable","style","getComputedStyle","getPropertyValue","computeStyleInt","hasClass","cls","classList","removeAttr","attr","attrs","a","removeAttribute","value_1","getAttribute","setAttribute","toggleClass","force","classes","isForce","add","toggle","addClass","removeClass","cssVariableRe","isCSSVariable","prefixedProps","style1","vendorsPrefixes","getPrefixedProp","propCC","propUC","p","numericProps","animationIterationCount","columnCount","flexGrow","flexShrink","fontWeight","gridArea","gridColumn","gridColumnEnd","gridColumnStart","gridRow","gridRowEnd","gridRowStart","lineHeight","opacity","orphans","widows","zIndex","getSuffixedValue","css","isVariable_1","setProperty","JSONStringRe","getData","dataset","setData","getDocumentDimension","doc","dimension","docEle","max","getExtraSpace","xAxis","datas","i1","outer","includeMargins","propLC","getBoundingClientRect","valueNumber","boxSizing","defaultDisplay","isHidden","hasNamespaces","ns1","ns2","ns","display","tagName","insertBefore","removeChild","getDefaultDisplay","hide","show","eventsFocus","focus","blur","eventsHover","mouseenter","mouseleave","eventsMouseRe","getEventNameBubbling","getEventsCache","parseEventName","eventName","sort","removeEvent","namespaces","cache","sel","cb","getValue","multiple","option","selected","disabled","parentNode","eventFullName1","eventFullName","nameOriginal","eventFullName2","_one","isEventHover","isEventFocus","finalCallback1","finalCallback","stopImmediatePropagation","namespace","___ot","relatedTarget","returnValue","___td","preventDefault","stopPropagation","eventCache","addEvent","one","name_1","createEvent","initEvent","dispatchEvent","queryEncodeSpaceRe","queryEncodeCRLFRe","skippableRe","checkableRe","serialize","ele1","elements","checked","value1","queryEncode","isSelect","eleValue_1","cloneNode","detach","fragmentRe","singleTagRe","containers","td","th","thead","tfoot","html","$1","fragment","container","innerHTML","childNodes","empty","firstChild","textContent","unwrap","parent","$ele","replaceWith","children","rect","top","pageYOffset","left","pageXOffset","offsetParent","position","isFixed","doc_1","ownerDocument","parentOffset","contents","contentDocument","content","HTMLCDATARe","scriptTypeRe","scriptAttributes","insertElement","anchor","inside","evaluate","node","nodeName","replaceChild","nextSibling","script_1","insertSelectors","selectors","anchors","inverse","reverseLoop1","reverseLoop2","reverseLoop3","si","ti","ai","targetFinal","indexFinal","after","appendTo","before","insertAfter","prepend","prependTo","replaceAll","wrapAll","structure","wrapper","firstElementChild","wrap","wrapInner","_all","_until","nextAll","nextUntil","child","closest","filtered","$parent","parents","parentsUntil","prev","prevAll","prevUntil","siblings","$c3e1df23cf065b0a$exports","$d9a3dd6674cb0243$var$supabase","$cb2acc2586e63cf7$exports","$d9a3dd6674cb0243$var$$toast","$d9a3dd6674cb0243$var$$status","$d9a3dd6674cb0243$var$$signed_out","$d9a3dd6674cb0243$var$$restaurants","$d9a3dd6674cb0243$var$$order_details","$d9a3dd6674cb0243$var$$sign_in","$d9a3dd6674cb0243$var$show_toast","duration","$d9a3dd6674cb0243$var$update_dom","_response","time_slot","customer","restaurant","delivery_location","description","notes","cost"],"version":3,"file":"index.f567cc4f.js.map"}