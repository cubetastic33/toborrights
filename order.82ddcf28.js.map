{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,sBCAO,SAASC,EAAWC,EAAiBC,EAAmB,KAC3D,MAAMC,EAAQC,SAASC,eAAe,SACtCF,EAAMG,UAAYL,EAClBE,EAAMI,MAAMC,QAAU,QAEtBC,YAAW,IAAMN,EAAMO,UAAY,cAAcR,GACjDO,YAAW,KACPN,EAAMO,UAAY,GAClBP,EAAMI,MAAMC,QAAU,SACvBN,EAAW,KDJlB,MAAMS,EAAWb,EAAAc,aAAa,2CAA4C,oNAGpEC,EAAOF,EAASG,KAAKC,OACd,OAATF,IAAeG,SAASC,KAAO,cACnCC,EAAAC,EAAA,CAAE,UAAUC,KAAKP,EAAKQ,MAAMC,MAAM,GAAG,IAAKC,eAE1CL,EAAAC,EAAA,CAAE,aAAaK,GAAG,SAAS,IAAMb,EAASG,KAAKW,UAC1CC,MAAKC,IACF3B,EAAW,2BACXgB,SAASC,KAAO,OAEnBW,OAAMC,GAAO7B,EAAW6B,EAAIC,SAASV,UAG1CT,EACKoB,KAAK,eACLC,SACAN,MAAKO,IACF,GAAIA,EAAOC,MACPlC,EAAWiC,EAAOC,MAAMjC,QAAS,UAC9B,GAA2B,IAAvBgC,EAAOE,KAAKC,OACnBpC,EAAW,4BAA6B,SACrC,CACH,IAAK,IAAIqC,EAAI,EAAGA,EAAIJ,EAAOE,KAAKC,OAAQC,IAAK,CACzC,MA9BhBH,MA8BwBA,EA9BxBI,UA8B+BA,GAAc3B,EAAS4B,QAAQR,KAAK,qBAAqBS,aAAaP,EAAOE,KAAKE,GAAU,OAC3G,GAAIH,EAEA,YADAlC,EAAWkC,EAAMjC,QAAS,KAG9B,IAAIwC,EAAKR,EAAOE,KAAKE,GAAO,GACxBK,EAAOT,EAAOE,KAAKE,GAAS,KAChCnB,EAAAC,EAAA,CAAE,gBAAgBwB,OAAO,yDACVF,iBAAkBC,yDACGJ,sCACtBI,sCAGlBxB,EAAAC,EAAA,CAAE,eAAeK,GAAG,SAAS,WACzBN,EAAAC,EAAA,CAAE,gBAAgByB,OAClB1B,EAAAC,EAAA,CAAE,kBAAkBgB,KAAK,KAAMjB,EAAAC,EAAA,CAAE0B,MAAMV,KAAK,OAAOW,OACnD5B,EAAAC,EAAA,CAAE,wBAAwBC,KAAKF,EAAAC,EAAA,CAAE0B,MAAMV,KAAK,gBAGrDD,GAASlC,EAAWkC,EAAO,OAElChB,EAAAC,EAAA,CAAE,SAASK,GAAG,SAAS,KACnBN,EAAAC,EAAA,CAAE,kBAAkByB,OACpB1B,EAAAC,EAAA,CAAE,gBAAgB2B,UAGtB5B,EAAAC,EAAA,CAAE,kBAAkBK,GAAG,UAAUuB,IAC7BA,EAAEC,iBACFC,QAAQC,IAAIhC,EAAAC,EAAA,CAAE,gBAAgBgC","sources":["scripts/order.ts","scripts/main.ts"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\nimport $ from \"cash-dom\";\nimport { show_toast } from \"./main\";\n\n// Create a single supabase client for interacting with your database\nconst supabase = createClient(\"https://gwcnruxqmtukvguyhuga.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imd3Y25ydXhxbXR1a3ZndXlodWdhIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NDk5MjI5MTIsImV4cCI6MTk2NTQ5ODkxMn0.Cpm-Myt5YdzFrRzYcWWaFxVDiyQWeJCD3dTZBvRlcp4\");\n\n// If the user is signed out\nconst user = supabase.auth.user();\nif (user === null) location.href = \"index.html\";\n$(\".netid\").text(user.email.slice(0, -13).toUpperCase());\n\n$(\"#sign-out\").on(\"click\", () => supabase.auth.signOut()\n    .then(_response => {\n        show_toast(\"Signed out successfully\");\n        location.href = \"/\";\n    })\n    .catch(err => show_toast(err.response.text)));\n\n// Dynamically populate the list of restaurants from the database\nsupabase\n    .from(\"restaurants\")\n    .select()\n    .then(result => {\n        if (result.error) {\n            show_toast(result.error.message, 5000);\n        } else if (result.data.length === 0) {\n            show_toast(\"No restaurants were found\", 5000);\n        } else {\n            for (let i = 0; i < result.data.length; i++) {\n                const { error, publicURL } = supabase.storage.from(\"restaurant-images\").getPublicUrl(result.data[i][\"image\"]);\n                if (error) {\n                    show_toast(error.message, 5000);\n                    return;\n                }\n                let id = result.data[i][\"id\"];\n                let name = result.data[i][\"name\"];\n                $(\".restaurants\").append(`<div class=\"restaurant\"\n                    data-id=\"${id}\" data-name=\"${name}\"\n                    style=\"background-image: url('${publicURL}')\">\n                        <h1>${name}</h1>\n                    </div>`);\n            }\n            $(\".restaurant\").on(\"click\", function() {\n                $(\".restaurants\").hide();\n                $(\"#order-details\").data(\"id\", $(this).data(\"id\")).show();\n                $(\"#order-details .name\").text($(this).data(\"name\"));\n            });\n        }\n    }, error => show_toast(error, 5000));\n\n$(\"#back\").on(\"click\", () => {\n    $(\"#order-details\").hide();\n    $(\".restaurants\").show();\n});\n\n$(\"#order-details\").on(\"submit\", e => {\n    e.preventDefault();\n    console.log($(\"#description\").val());\n});\n","export function show_toast(message: string, duration: number = 2000) {\n    const toast = document.getElementById(\"toast\");\n    toast.innerText = message;\n    toast.style.display = \"block\";\n    // After duration, slide the toast out of view\n    setTimeout(() => toast.className = \"slide-down\", duration);\n    setTimeout(() => {\n        toast.className = \"\";\n        toast.style.display = \"none\";\n    }, duration + 500);\n}\n"],"names":["$7JJcr","parcelRequire","$2d64fdc970ef075e$export$5196e4c01fa56fcb","message","duration","toast","document","getElementById","innerText","style","display","setTimeout","className","$d9a3dd6674cb0243$var$supabase","createClient","$d9a3dd6674cb0243$var$user","auth","user","location","href","$parcel$interopDefault","$gOFYb","text","email","slice","toUpperCase","on","signOut","then","_response","catch","err","response","from","select","result","error","data","length","i","publicURL","storage","getPublicUrl","id","name","append","hide","this","show","e","preventDefault","console","log","val"],"version":3,"file":"order.82ddcf28.js.map"}